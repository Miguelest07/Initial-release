
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.3.0.109

// ldbanno -n Verilog -o xo2_verilog_xo2_verilog_mapvo.vo -w -neg -gui xo2_verilog_xo2_verilog_map.ncd 
// Netlist created on Sun DE_tbc 21 18:37:56 2014
// Netlist written on Sun DE_tbc 21 18:38:06 2014
// DE_tbsign is for DE_tbvice LCMXO2-1200HC
// DE_tbsign is for package CSBGA132
// DE_tbsign is for performance graDE_tb 6

`timescale 1 ns / 1 ps

module top_rx ( reset_n, DCK, D1, D0, LPCLK, LP1, LP0, PIXCLK_adj, PIXDATA, DE, 
                VSYNC, HSYNC );
  input  reset_n, DCK, D1, D0;
  output [1:0] LPCLK;
  output [1:0] LP1;
  output PIXCLK_adj;
  output [23:0] PIXDATA;
  output DE, VSYNC, HSYNC;
  input  [1:0] LP0;
  wire   \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 , byte_clk_fr, 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gctr_ci , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gctr_ci , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co0_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co1_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r23 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r22 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/cmp_ci , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_d , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_d_c , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/Empty , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/cmp_ci_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_d , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_d_c , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/Full , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_cmp_clr , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_cmp_set , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co1_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_w3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_w2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co0_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_g2b_xor_cluster_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_w0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r21 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r20 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_cmp_clr , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_cmp_set , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co1_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w20 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r24 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_r3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_r2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co0_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w22 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w21 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_g2b_xor_cluster_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_r0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w24 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w23 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co1_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_d , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_d_c , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/Full , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_g2b_xor_cluster_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_r0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/cmp_ci , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w24 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w23 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co0_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gctr_ci , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gctr_ci , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co0_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r23 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r22 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_d , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_d_c , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/Empty , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/cmp_ci_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_cmp_clr , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_cmp_set , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co1_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_w3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_w2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co0_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_g2b_xor_cluster_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_w0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r21 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r20 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_cmp_clr , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_cmp_set , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co1_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w20 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r24 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_r3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_r2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w22 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w21 , 
         \genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[0] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[1] , 
         \genblk4.u_Control_Capture_2Lane/odd_cnt , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[2] , 
         \u_DPHY_RX_INST/u_aligner/en_align_i , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[3] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_0 , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[15] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[2] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_14 , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_s_15_0_S0 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[3] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[15] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[14] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[14] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[13] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[6] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_12 , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[13] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[6] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[14] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[7] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[13] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[12] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[12] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[11] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[4] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_10 , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[11] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[4] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[12] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[5] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[11] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[10] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[10] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[9] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[0] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_8 , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[9] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[0] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[10] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[1] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[9] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[8] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[8] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[7] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_6 , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[6] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[8] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[7] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[7] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[6] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[6] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[5] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_4 , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[4] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[5] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[5] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[4] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[4] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[3] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_2 , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[3] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[4] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[3] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[2] , 
         \genblk4.u_Control_Capture_2Lane/q_wc[2] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[0] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[1] , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD0_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD1_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD2_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD3_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD0_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD1_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD2_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD3_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout5 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout4 , 
         \byte_D1[4] , \byte_D1[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout7 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout6 , 
         \byte_D1[6] , \byte_D1[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD0_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD1_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD2_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD3_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD0_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD1_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD2_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD3_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout0 , 
         \byte_D1[0] , \byte_D1[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout2 , 
         \byte_D1[2] , \byte_D1[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD0_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD1_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD2_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD3_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD0_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD1_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD2_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD3_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout0 , 
         \byte_D0[0] , \byte_D0[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout2 , 
         \byte_D0[2] , \byte_D0[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD0_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD1_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD2_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD3_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD0_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD1_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD2_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD3_INT , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout5 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout4 , 
         \byte_D0[4] , \byte_D0[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout7 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout6 , 
         \byte_D0[6] , \byte_D0[7] , 
         \genblk4.u_Control_Capture_2Lane/long_data_en , 
         \genblk4.u_Control_Capture_2Lane/PH_en , 
         \genblk4.u_Control_Capture_2Lane/PH_active[0] , 
         \genblk4.u_Control_Capture_2Lane/PF_en , 
         \genblk4.u_Control_Capture_2Lane/N_37_i , 
         \genblk4.u_Control_Capture_2Lane/q_din[14] , reset_n_tb_c, burst_done, 
         \genblk4.u_Control_Capture_2Lane/q_din1[14] , 
         \genblk4.u_Control_Capture_2Lane/q_long_pkt_dtct , 
         \genblk4.u_Control_Capture_2Lane.offset_out , 
         \genblk4.u_Control_Capture_2Lane/N_179 , 
         \genblk4.u_Control_Capture_2Lane/N_154_i , 
         \genblk4.u_Control_Capture_2Lane/un41_offset_out_i_0 , 
         \genblk4.u_Control_Capture_2Lane/q_din[9] , 
         \genblk4.u_Control_Capture_2Lane/q_din1[0] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[0] , 
         \genblk4.u_Control_Capture_2Lane/q_din1[9] , 
         \genblk4.u_Control_Capture_2Lane/q_din1[1] , 
         \genblk4.u_Control_Capture_2Lane/q_din1[2] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[2] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[1] , 
         \genblk4.u_Control_Capture_2Lane/q_din1[3] , 
         \genblk4.u_Control_Capture_2Lane/q_din1[4] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[4] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[3] , 
         \genblk4.u_Control_Capture_2Lane/q_din1[5] , 
         \genblk4.u_Control_Capture_2Lane/q_din1[6] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[6] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[5] , 
         \genblk4.u_Control_Capture_2Lane/q_din1[7] , 
         \genblk4.u_Control_Capture_2Lane/q_din1[8] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[8] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[7] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[15] , 
         \genblk4.u_Control_Capture_2Lane.q_din3[8] , 
         \genblk4.u_Control_Capture_2Lane.q_din3[15] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[10] , 
         \genblk4.u_Control_Capture_2Lane.q_din3[10] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[9] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[11] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[12] , 
         \genblk4.u_Control_Capture_2Lane.q_din3[12] , 
         \genblk4.u_Control_Capture_2Lane.q_din3[11] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[13] , 
         \genblk4.u_Control_Capture_2Lane.q_din2[14] , 
         \genblk4.u_Control_Capture_2Lane.q_din3[14] , 
         \genblk4.u_Control_Capture_2Lane.q_din3[13] , 
         \genblk4.u_Control_Capture_2Lane/N_208 , 
         \genblk4.u_Control_Capture_2Lane/PF_en_2 , 
         \genblk4.u_Control_Capture_2Lane/q_din[12] , 
         \genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_9 , 
         \genblk4.u_Control_Capture_2Lane/q_din1[12] , 
         \genblk4.u_Control_Capture_2Lane/PH_active[8] , 
         \genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] , 
         \genblk4.u_Control_Capture_2Lane/PH_active_ns[1] , 
         \genblk4.u_Control_Capture_2Lane/N_1009_i , 
         \genblk4.u_Control_Capture_2Lane/PH_active[1] , 
         \genblk4.u_Control_Capture_2Lane/PH_active[9] , 
         \genblk4.u_Control_Capture_2Lane/PH_active_ns[3] , 
         \genblk4.u_Control_Capture_2Lane/N_1012_i , 
         \genblk4.u_Control_Capture_2Lane/PH_active[2] , 
         \genblk4.u_Control_Capture_2Lane/PH_active[3] , 
         \genblk4.u_Control_Capture_2Lane/PH_active[10] , 
         \genblk4.u_Control_Capture_2Lane/N_67_i , 
         \genblk4.u_Control_Capture_2Lane/N_1017_i , 
         \genblk4.u_Control_Capture_2Lane/N_1015_i , 
         \genblk4.u_Control_Capture_2Lane/PH_active[4] , 
         \genblk4.u_Control_Capture_2Lane/PH_active[5] , 
         \genblk4.u_Control_Capture_2Lane/PH_active[11] , 
         \genblk4.u_Control_Capture_2Lane/N_1021_i , 
         \genblk4.u_Control_Capture_2Lane/N_1019_i , 
         \genblk4.u_Control_Capture_2Lane/PH_active[6] , 
         \genblk4.u_Control_Capture_2Lane/PH_active[7] , 
         \genblk4.u_Control_Capture_2Lane/PH_active[12] , 
         \genblk4.u_Control_Capture_2Lane/PH_active_ns[9] , 
         \genblk4.u_Control_Capture_2Lane/N_1023_i , 
         \genblk4.u_Control_Capture_2Lane/PH_active[13] , 
         \genblk4.u_Control_Capture_2Lane/PH_active_ns[11] , 
         \genblk4.u_Control_Capture_2Lane/N_1026_i , 
         \genblk4.u_Control_Capture_2Lane/PH_active[14] , 
         \genblk4.u_Control_Capture_2Lane/N_26 , 
         \genblk4.u_Control_Capture_2Lane/N_1029_i , 
         \genblk4.u_Control_Capture_2Lane/PH_active[15] , 
         \genblk4.u_Control_Capture_2Lane/N_23 , 
         \genblk4.u_Control_Capture_2Lane/N_1033_i , 
         \genblk4.u_Control_Capture_2Lane/un21_i_a2_0_a5_4[3] , 
         \genblk4.u_Control_Capture_2Lane/un21_i_a2_0_a5_3[3] , 
         \genblk4.u_Control_Capture_2Lane/N_960_i , 
         \genblk4.u_Control_Capture_2Lane/q_din[13] , 
         \genblk4.u_Control_Capture_2Lane/q_din1[13] , 
         \genblk4.u_Control_Capture_2Lane/N_1208_i , 
         \genblk4.u_Control_Capture_2Lane/q_din[15] , 
         \genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_10 , 
         \genblk4.u_Control_Capture_2Lane/q_din1[15] , 
         \genblk4.u_Control_Capture_2Lane/dt[3] , 
         \genblk4.u_Control_Capture_2Lane/dt[2] , 
         \genblk4.u_Control_Capture_2Lane/dt[0] , 
         \genblk4.u_Control_Capture_2Lane/WC[0] , 
         \genblk4.u_Control_Capture_2Lane/N_33_i , 
         \genblk4.u_Control_Capture_2Lane/un52_odd_cnt_i , 
         \genblk4.u_Control_Capture_2Lane/byte_en_0_a2_2 , 
         \genblk4.u_Control_Capture_2Lane/q_din[1] , 
         \genblk4.u_Control_Capture_2Lane/q_din[2] , 
         \genblk4.u_Control_Capture_2Lane/q_din[3] , 
         \genblk4.u_Control_Capture_2Lane/q_din[4] , 
         \genblk4.u_Control_Capture_2Lane/q_din[5] , 
         \genblk4.u_Control_Capture_2Lane/q_din[6] , 
         \genblk4.u_Control_Capture_2Lane/q_din[7] , 
         \genblk4.u_Control_Capture_2Lane/q_din[8] , 
         \genblk4.u_Control_Capture_2Lane/q_din[0] , 
         \genblk4.u_Control_Capture_2Lane.q_din3[9] , 
         \genblk4.u_Control_Capture_2Lane/q_dt[0] , 
         \genblk4.u_Control_Capture_2Lane/q_dt1[0] , 
         \genblk4.u_Control_Capture_2Lane/q_dt[1] , 
         \genblk4.u_Control_Capture_2Lane/q_dt[2] , 
         \genblk4.u_Control_Capture_2Lane/q_dt1[2] , 
         \genblk4.u_Control_Capture_2Lane/q_dt1[1] , 
         \genblk4.u_Control_Capture_2Lane/q_dt[3] , 
         \genblk4.u_Control_Capture_2Lane/q_dt[4] , 
         \genblk4.u_Control_Capture_2Lane/q_dt1[4] , 
         \genblk4.u_Control_Capture_2Lane/q_dt1[3] , 
         \genblk4.u_Control_Capture_2Lane/q_dt_2[1] , 
         \genblk4.u_Control_Capture_2Lane/q_dt_2[0] , 
         \genblk4.u_Control_Capture_2Lane/N_177_i , 
         \genblk4.u_Control_Capture_2Lane/q_din1[11] , 
         \genblk4.u_Control_Capture_2Lane/q_din1[10] , 
         \genblk4.u_Control_Capture_2Lane/q_dt_2[3] , 
         \genblk4.u_Control_Capture_2Lane/q_dt_2[2] , 
         \genblk4.u_Control_Capture_2Lane/q_dt_2[5] , 
         \genblk4.u_Control_Capture_2Lane/q_dt_2[4] , 
         \genblk4.u_Control_Capture_2Lane/q_dt[5] , 
         \genblk4.u_Control_Capture_2Lane/long_pkt_dtct_i_1 , 
         \genblk4.u_Control_Capture_2Lane/PH_active_RNIEUUI1[3] , 
         \genblk4.u_Control_Capture_2Lane/N_186_1 , 
         \genblk4.u_Control_Capture_2Lane/PH_active_ns_i_i_o2_0[13] , 
         \genblk4.u_Control_Capture_2Lane/N_19_i , 
         \genblk4.u_Control_Capture_2Lane/q_wc[0] , 
         \genblk4.u_Control_Capture_2Lane/q_wc1[0] , 
         \genblk4.u_Control_Capture_2Lane/q_dt1[5] , 
         \genblk4.u_Control_Capture_2Lane/N_1377 , 
         \genblk4.u_Control_Capture_2Lane/N_1397 , 
         \genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i , 
         \genblk4.u_Control_Capture_2Lane/q_din[11] , 
         \genblk4.u_Control_Capture_2Lane/q_din[10] , 
         \genblk4.u_Control_Capture_2Lane/N_1337 , 
         \genblk4.u_Control_Capture_2Lane/N_1357 , 
         \genblk4.u_Control_Capture_2Lane/N_1297 , 
         \genblk4.u_Control_Capture_2Lane/N_1317 , 
         \genblk4.u_Control_Capture_2Lane/N_1257 , 
         \genblk4.u_Control_Capture_2Lane/N_1277 , 
         \genblk4.u_Control_Capture_2Lane/N_1121 , 
         \genblk4.u_Control_Capture_2Lane/N_1120 , 
         \genblk4.u_Control_Capture_2Lane/N_178_i , 
         \genblk4.u_Control_Capture_2Lane/un20_q_word_cntr , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 , 
         \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_1[0] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[1] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[0] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[3] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[2] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[5] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[4] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[7] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[6] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[9] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[8] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[11] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[10] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[13] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[12] , 
         \genblk4.u_Control_Capture_2Lane/q_word_cntr_RNO[15] , 
         \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[14] , byte_en, 
         \genblk7.u_rgb888_lane2/q_din_0_3[1] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[0] , 
         \genblk7.u_rgb888_lane2/q_din_0[0] , 
         \genblk7.u_rgb888_lane2/q_din_0[1] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[3] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[2] , 
         \genblk7.u_rgb888_lane2/q_din_0[2] , 
         \genblk7.u_rgb888_lane2/q_din_0[3] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[5] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[4] , 
         \genblk7.u_rgb888_lane2/q_din_0[4] , 
         \genblk7.u_rgb888_lane2/q_din_0[5] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[7] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[6] , 
         \genblk7.u_rgb888_lane2/q_din_0[6] , 
         \genblk7.u_rgb888_lane2/q_din_0[7] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[9] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[8] , 
         \genblk7.u_rgb888_lane2/q_din_0[8] , 
         \genblk7.u_rgb888_lane2/q_din_0[9] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[11] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[10] , 
         \genblk7.u_rgb888_lane2/q_din_0[10] , 
         \genblk7.u_rgb888_lane2/q_din_0[11] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[13] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[12] , 
         \genblk7.u_rgb888_lane2/q_din_0[12] , 
         \genblk7.u_rgb888_lane2/q_din_0[13] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[15] , 
         \genblk7.u_rgb888_lane2/q_din_0_3[14] , 
         \genblk7.u_rgb888_lane2/q_din_0[14] , 
         \genblk7.u_rgb888_lane2/q_din_0[15] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[1] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[0] , 
         \genblk7.u_rgb888_lane2/q_din_1[0] , 
         \genblk7.u_rgb888_lane2/q_din_1[1] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[3] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[2] , 
         \genblk7.u_rgb888_lane2/q_din_1[2] , 
         \genblk7.u_rgb888_lane2/q_din_1[3] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[5] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[4] , 
         \genblk7.u_rgb888_lane2/q_din_1[4] , 
         \genblk7.u_rgb888_lane2/q_din_1[5] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[7] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[6] , 
         \genblk7.u_rgb888_lane2/q_din_1[6] , 
         \genblk7.u_rgb888_lane2/q_din_1[7] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[9] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[8] , 
         \genblk7.u_rgb888_lane2/q_din_1[8] , 
         \genblk7.u_rgb888_lane2/q_din_1[9] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[11] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[10] , 
         \genblk7.u_rgb888_lane2/q_din_1[10] , 
         \genblk7.u_rgb888_lane2/q_din_1[11] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[13] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[12] , 
         \genblk7.u_rgb888_lane2/q_din_1[12] , 
         \genblk7.u_rgb888_lane2/q_din_1[13] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[15] , 
         \genblk7.u_rgb888_lane2/q_din_1_3[14] , 
         \genblk7.u_rgb888_lane2/q_din_1[14] , 
         \genblk7.u_rgb888_lane2/q_din_1[15] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[1] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[0] , 
         \genblk7.u_rgb888_lane2/q_din_2[0] , 
         \genblk7.u_rgb888_lane2/q_din_2[1] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[3] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[2] , 
         \genblk7.u_rgb888_lane2/q_din_2[2] , 
         \genblk7.u_rgb888_lane2/q_din_2[3] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[5] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[4] , 
         \genblk7.u_rgb888_lane2/q_din_2[4] , 
         \genblk7.u_rgb888_lane2/q_din_2[5] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[7] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[6] , 
         \genblk7.u_rgb888_lane2/q_din_2[6] , 
         \genblk7.u_rgb888_lane2/q_din_2[7] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[9] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[8] , 
         \genblk7.u_rgb888_lane2/q_din_2[8] , 
         \genblk7.u_rgb888_lane2/q_din_2[9] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[11] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[10] , 
         \genblk7.u_rgb888_lane2/q_din_2[10] , 
         \genblk7.u_rgb888_lane2/q_din_2[11] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[13] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[12] , 
         \genblk7.u_rgb888_lane2/q_din_2[12] , 
         \genblk7.u_rgb888_lane2/q_din_2[13] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[15] , 
         \genblk7.u_rgb888_lane2/q_din_2_3[14] , 
         \genblk7.u_rgb888_lane2/q_din_2[14] , 
         \genblk7.u_rgb888_lane2/q_din_2[15] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[10] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[0] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[12] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[11] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[14] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[13] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[16] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[15] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[18] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[17] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[30] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[2] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[32] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[31] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[34] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[33] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[36] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[35] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[38] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[37] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[10] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[0] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[12] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[11] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[14] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[13] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[16] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[15] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[18] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[17] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[30] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[2] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[32] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[31] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[34] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[33] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[36] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[35] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[38] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[37] , 
         \genblk4.u_Control_Capture_2Lane/dt[1] , \DT_RNI15IB[4] , 
         \genblk7.u_rgb888_lane2/wd_cnt[1] , 
         \genblk7.u_rgb888_lane2/wd_cnt_1_sqmuxa_i_i_a3 , 
         \genblk7.u_rgb888_lane2/q_mixed_en_Q[0] , 
         \genblk7.u_rgb888_lane2/q_mixed_data_rdy_Q[0] , 
         \genblk7.u_rgb888_lane2/q_unmixed_data_rdy , 
         \genblk7.u_rgb888_lane2/wd_cnt[0] , \genblk7.u_rgb888_lane2/N_52 , 
         \genblk7.u_rgb888_lane2/wd_cnt_ns[0] , \LP0_in[1] , \LP0_in[0] , 
         \genblk1.un1_hs_en_i , q_hs_en, 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_reg1_4_6 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_123 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt_2_i_a2_i_0[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_129 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_123_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_113 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_114 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_140 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_112 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_1_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_0_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_149 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shiftflag , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_1108_0 , 
         \u_DPHY_RX_INST/align_data[13] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_reg1_4_6 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_31 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt_2_i_a2_i_0[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_36 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_31_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_8 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_10 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_4 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_101 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_6 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_1_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_0_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_109 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shiftflag , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_1112_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gdata_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gdata_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gdata_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gdata_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gdata_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gdata_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gdata_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gdata_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gdata_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gdata_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gdata_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gdata_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gdata_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gdata_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gdata_3 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gdata_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[6] , 
         \u_DPHY_RX_INST/u_aligner/lane0[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[6] , 
         \u_DPHY_RX_INST/u_aligner/lane0[6] , 
         \u_DPHY_RX_INST/u_aligner/lane0[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[1] , 
         \u_DPHY_RX_INST/u_aligner/lane0[4] , 
         \u_DPHY_RX_INST/u_aligner/lane0[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[3] , 
         \u_DPHY_RX_INST/u_aligner/lane0[2] , 
         \u_DPHY_RX_INST/u_aligner/lane0[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[5] , 
         \u_DPHY_RX_INST/u_aligner/lane0[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[7] , 
         \u_DPHY_RX_INST/u_aligner/lane1[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[0] , 
         \u_DPHY_RX_INST/u_aligner/lane1[6] , 
         \u_DPHY_RX_INST/u_aligner/lane1[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[1] , 
         \u_DPHY_RX_INST/u_aligner/lane1[4] , 
         \u_DPHY_RX_INST/u_aligner/lane1[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[3] , 
         \u_DPHY_RX_INST/u_aligner/lane1[2] , 
         \u_DPHY_RX_INST/u_aligner/lane1[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[5] , 
         \u_DPHY_RX_INST/u_aligner/lane1[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[7] , reset_n_tb_c_i, gnd_tb, 
         \genblk4.u_Control_Capture_2Lane/un2_offset_out_31_16 , 
         \u_DPHY_RX_INST/u_iDDRx4/opensync_0 , 
         \u_DPHY_RX_INST/u_iDDRx4/opensync_1 , \u_DPHY_RX_INST/u_iDDRx4/xstop , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_Q[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/syncs_active_Q[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_12 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_12 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_Q[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_Q[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_16 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_17 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_0_Q[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_16 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_17 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_21 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_21 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/N_1113_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/N_1114_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_syncs_active , 
         \u_DPHY_RX_INST/align_data[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6_0[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[6] , 
         \u_DPHY_RX_INST/u_iDDRx4/FF_0_Q , DCK_c, 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_12 , 
         \u_DPHY_RX_INST/u_iDDRx4/opensync_2 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_12 , 
         \genblk1.un3_term_en , \genblk1.un7_term_en_i , un1_LP1, 
         \genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/w_lv_n , 
         \genblk7.u_rgb888_lane2/w_lv_n_i , pixclk, w_DE_tb, 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[6] , 
         \genblk4.u_Control_Capture_2Lane/PH_active_ns_0_0_o2[11] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_15 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_14 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_13 , 
         \u_DPHY_RX_INST/align_data[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_15 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_14 , 
         \u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_13 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_11 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_22 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_21 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_16 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_15 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_14 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_13 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_0_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_0 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_14 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[2] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_15 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_17 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_1_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_12 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[7] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[3] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_115 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_22 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_21 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[6] , 
         \u_DPHY_RX_INST/align_data[14] , \u_DPHY_RX_INST/align_data[15] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[0] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[1] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_16 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_15 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_14 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_13 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_0_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_0 , 
         \u_DPHY_RX_INST/align_data[11] , \u_DPHY_RX_INST/align_data[12] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_117 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[6] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_118 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_17 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_1_1 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_116 , 
         \u_DPHY_RX_INST/align_data[2] , \u_DPHY_RX_INST/align_data[3] , 
         \genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_8 , 
         \genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_7 , 
         \genblk4.u_Control_Capture_2Lane/un2_offset_out_31_28 , 
         \genblk4.u_Control_Capture_2Lane/un2_offset_out_31_29 , 
         \genblk4.u_Control_Capture_2Lane/N_49_4 , 
         \genblk4.u_Control_Capture_2Lane/N_49_3 , N_49, 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[4] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[5] , 
         \genblk4.u_Control_Capture_2Lane/un2_offset_out_31_23 , 
         \genblk4.u_Control_Capture_2Lane/un2_offset_out_31_22 , 
         \genblk4.u_Control_Capture_2Lane/un2_offset_out_31_21 , 
         \genblk4.u_Control_Capture_2Lane/un2_offset_out_31_20 , 
         \u_DPHY_RX_INST/align_data[0] , \u_DPHY_RX_INST/align_data[1] , 
         \genblk4.u_Control_Capture_2Lane/N_1208 , 
         \genblk4.u_Control_Capture_2Lane/dt[5] , N_50, 
         \u_DPHY_RX_INST/align_data[4] , \u_DPHY_RX_INST/align_data[5] , 
         \genblk4.u_Control_Capture_2Lane/un2_offset_out_31_19 , 
         \genblk4.u_Control_Capture_2Lane/un2_offset_out_31_18 , 
         \genblk4.u_Control_Capture_2Lane/un2_offset_out_31_17 , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[5] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[6] , 
         \genblk4.u_Control_Capture_2Lane/dt[4] , \dt_i[4] , 
         \u_DPHY_RX_INST/align_data[8] , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[4] , 
         \u_DPHY_RX_INST/align_data[9] , \u_DPHY_RX_INST/align_data[10] , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[6] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[1] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[19] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[3] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[39] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[5] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[4] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[7] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[6] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[9] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[8] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[21] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[20] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[23] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[22] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[25] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[24] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[27] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[26] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[29] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[28] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[41] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[40] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[43] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[42] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[45] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[44] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[47] , 
         \genblk7.u_rgb888_lane2/q_din_mixed[46] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[1] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[19] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[3] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[39] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[5] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[4] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[7] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[6] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[9] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[8] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[21] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[20] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[23] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[22] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[25] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[24] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[27] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[26] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[29] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[28] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[41] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[40] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[43] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[42] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[45] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[44] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[47] , 
         \genblk7.u_rgb888_lane2/q_din_unmixed[46] , PIXCLK_adj_c, 
         \u_DPHY_RX_INST/u_iDDRx4/buf_dataini1 , 
         \u_DPHY_RX_INST/u_iDDRx4/dataini_t1 , byte_clk, 
         \u_DPHY_RX_INST/u_iDDRx4/eclko , \u_DPHY_RX_INST/data[8] , 
         \u_DPHY_RX_INST/data[9] , \u_DPHY_RX_INST/data[10] , 
         \u_DPHY_RX_INST/data[11] , \u_DPHY_RX_INST/data[12] , 
         \u_DPHY_RX_INST/data[13] , \u_DPHY_RX_INST/data[14] , 
         \u_DPHY_RX_INST/data[15] , gnd_tbI, vcc_tbI, D1_MGIOL_INT, 
         \u_DPHY_RX_INST/u_iDDRx4/buf_dataini0 , 
         \u_DPHY_RX_INST/u_iDDRx4/dataini_t0 , \u_DPHY_RX_INST/data[0] , 
         \u_DPHY_RX_INST/data[1] , \u_DPHY_RX_INST/data[2] , 
         \u_DPHY_RX_INST/data[3] , \u_DPHY_RX_INST/data[4] , 
         \u_DPHY_RX_INST/data[5] , \u_DPHY_RX_INST/data[6] , 
         \u_DPHY_RX_INST/data[7] , D0_MGIOL_INT, HSYNC_tb_c, VSYNC_tb_c, DE_tb_c, 
         \PIXDATA_tb_c[23] , \w_PIXDATA_tb[23] , \PIXDATA_tb_c[22] , \w_PIXDATA_tb[22] , 
         \PIXDATA_tb_c[21] , \w_PIXDATA_tb[21] , \PIXDATA_tb_c[20] , \w_PIXDATA_tb[20] , 
         \PIXDATA_tb_c[19] , \w_PIXDATA_tb[19] , \PIXDATA_tb_c[18] , \w_PIXDATA_tb[18] , 
         \PIXDATA_tb_c[17] , \w_PIXDATA_tb[17] , \PIXDATA_tb_c[16] , \w_PIXDATA_tb[16] , 
         \PIXDATA_tb_c[15] , \w_PIXDATA_tb[15] , \PIXDATA_tb_c[14] , \w_PIXDATA_tb[14] , 
         \PIXDATA_tb_c[13] , \w_PIXDATA_tb[13] , \PIXDATA_tb_c[12] , \w_PIXDATA_tb[12] , 
         \PIXDATA_tb_c[11] , \w_PIXDATA_tb[11] , \PIXDATA_tb_c[10] , \w_PIXDATA_tb[10] , 
         \PIXDATA_tb_c[9] , \w_PIXDATA_tb[9] , \PIXDATA_tb_c[8] , \w_PIXDATA_tb[8] , 
         \PIXDATA_tb_c[7] , \w_PIXDATA_tb[7] , \PIXDATA_tb_c[6] , \w_PIXDATA_tb[6] , 
         \PIXDATA_tb_c[5] , \w_PIXDATA_tb[5] , \PIXDATA_tb_c[4] , \w_PIXDATA_tb[4] , 
         \PIXDATA_tb_c[3] , \w_PIXDATA_tb[3] , \PIXDATA_tb_c[2] , \w_PIXDATA_tb[2] , 
         \PIXDATA_tb_c[1] , \w_PIXDATA_tb[1] , \PIXDATA_tb_c[0] , \w_PIXDATA_tb[0] , 
         \u_DPHY_RX_INST/u_byte_clk_fifo/Full , 
         \u_DPHY_RX_INST/u_byte_clk_fifo/Empty , 
         \genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/Full ;

  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_0 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_0 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_0 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_1 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r1 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r0 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gctr_ci ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_1 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_1 ( 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_1 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_0 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gctr_ci ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_0 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_1 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_1 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co0 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_2 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_2 ( 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_3 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_2 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_3 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_2 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co0 ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_2 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_3 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_3 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co1 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_3 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_3 ( 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_4 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_4 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_4 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co1 ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/iwcount_4 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_4 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_4 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_4 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_4 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_2 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_3 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r3 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r2 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gctr_ci ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_5 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_5 ( 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_1 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_0 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gctr_ci ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_0 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_1 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_1 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co0_1 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_6 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_6 ( 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_3 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_2 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_3 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_2 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co0_1 ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_2 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_3 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_3 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co1_1 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_7 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_7 ( 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_4 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_4 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_4 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co1_1 ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/ircount_4 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_4 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_4 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_8 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_8 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r2 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r3 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r23 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r22 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/cmp_ci ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_9 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_9 ( 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_d ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_d_c ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_d ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/Empty ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_10 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_10 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_4 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_0 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w0 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r4 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/cmp_ci_1 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_11 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_11 ( 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_d ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_d_c ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_d ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/Full ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_12 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_12 ( 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_cmp_clr ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_cmp_set ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_1 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_2 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co1_3 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w2 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w1 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_d_c ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_13 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_13 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_w3 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_3 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_w2 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_2 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_3 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_4 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co0_3 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w4 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w3 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co1_3 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_14 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_14 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_g2b_xor_cluster_0 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_1 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_w0 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_0 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r0 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r1 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/cmp_ci_1 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r21 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r20 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co0_3 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_15 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_15 ( 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_cmp_clr ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_cmp_set ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r4 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w0 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co1_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w20 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r24 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_d_c ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_16 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_16 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_r3 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_3 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_r2 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_2 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w1 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w2 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co0_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w22 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w21 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co1_2 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_17 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_17 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_g2b_xor_cluster_0 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_1 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_r0 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_0 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w3 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w4 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/cmp_ci ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w24 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w23 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/co0_2 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_18 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_18 ( 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_4 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_4 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_4 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co1_1 ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_4 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_4 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_4 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_19 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_19 ( 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_d ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_d_c ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_d ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/Full ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_20 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_20 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_g2b_xor_cluster_0 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_1 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_r0 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_0 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w3 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w4 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/cmp_ci ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w24 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w23 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co0_2 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_21 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_21 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_0 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_1 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r1 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r0 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gctr_ci ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_22 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_22 ( 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_1 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_0 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gctr_ci ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_0 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_1 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_1 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co0 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_23 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_23 ( 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_3 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_2 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_3 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_2 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co0 ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_2 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_3 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_3 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co1 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_24 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_24 ( 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_4 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_4 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_4 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co1 ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/iwcount_4 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_4 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_4 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_25 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_25 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_2 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_3 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r3 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r2 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gctr_ci ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_26 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_26 ( 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_1 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_0 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gctr_ci ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_0 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_1 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_1 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co0_1 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_27 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_27 ( 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_3 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_2 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_3 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_2 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co0_1 ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_2 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/ircount_3 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_3 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co1_1 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_28 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_28 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r2 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r3 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r23 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r22 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/cmp_ci ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_29 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_29 ( 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_d ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_d_c ), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_d ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/Empty ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_30 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_30 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_4 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_0 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w0 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r4 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/cmp_ci_1 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_31 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_31 ( 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_cmp_clr ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_cmp_set ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_1 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_2 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co1_3 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w2 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w1 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_d_c ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_32 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_32 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_w3 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_3 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_w2 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_2 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_3 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_4 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co0_3 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w4 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w3 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co1_3 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_33 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_33 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_g2b_xor_cluster_0 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_1 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_w0 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_0 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r0 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r1 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/cmp_ci_1 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r21 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r20 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co0_3 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_34 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_34 ( 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_cmp_clr ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_cmp_set ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r4 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w0 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co1_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w20 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r24 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_d_c ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_35 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_35 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_r3 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_3 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_r2 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_2 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w1 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w2 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .FCI(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co0_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w22 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w21 ), 
    .FCO(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/co1_2 ));
  SLICE_tb_36 SLICE_tb_36( .D1(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[0] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_wc[1] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[2] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[3] ), 
    .FCO(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_0 ));
  SLICE_tb_37 SLICE_tb_37( .C0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[15] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .FCI(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_14 ), 
    .F0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_s_15_0_S0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[2] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[3] ));
  SLICE_tb_38 SLICE_tb_38( .D1(\genblk4.u_Control_Capture_2Lane/q_wc[15] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[14] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .D0(\genblk4.u_Control_Capture_2Lane/q_wc[14] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[13] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[7] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .FCI(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_12 ), 
    .F0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[13] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[6] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[14] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[7] ), 
    .FCO(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_14 ));
  SLICE_tb_39 SLICE_tb_39( .D1(\genblk4.u_Control_Capture_2Lane/q_wc[13] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[12] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .D0(\genblk4.u_Control_Capture_2Lane/q_wc[12] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[11] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .FCI(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_10 ), 
    .F0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[11] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[4] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[12] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[5] ), 
    .FCO(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_12 ));
  SLICE_tb_40 SLICE_tb_40( .D1(\genblk4.u_Control_Capture_2Lane/q_wc[11] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[10] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .D0(\genblk4.u_Control_Capture_2Lane/q_wc[10] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[9] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[1] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[0] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .FCI(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_8 ), 
    .F0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[9] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[0] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[10] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[1] ), 
    .FCO(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_10 ));
  SLICE_tb_41 SLICE_tb_41( .D1(\genblk4.u_Control_Capture_2Lane/q_wc[9] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[8] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .D0(\genblk4.u_Control_Capture_2Lane/q_wc[8] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[7] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[7] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .FCI(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_6 ), 
    .F0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[7] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[6] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[8] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[7] ), 
    .FCO(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_8 ));
  SLICE_tb_42 SLICE_tb_42( .D1(\genblk4.u_Control_Capture_2Lane/q_wc[7] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[6] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .D0(\genblk4.u_Control_Capture_2Lane/q_wc[6] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[5] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .FCI(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_4 ), 
    .F0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[5] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[4] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[6] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[5] ), 
    .FCO(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_6 ));
  SLICE_tb_43 SLICE_tb_43( .D1(\genblk4.u_Control_Capture_2Lane/q_wc[5] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[4] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .D0(\genblk4.u_Control_Capture_2Lane/q_wc[4] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[3] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .FCI(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_2 ), 
    .F0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[3] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[2] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[4] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[3] ), 
    .FCO(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_4 ));
  SLICE_tb_44 SLICE_tb_44( .D1(\genblk4.u_Control_Capture_2Lane/q_wc[3] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[2] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .D0(\genblk4.u_Control_Capture_2Lane/q_wc[2] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[1] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[1] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[0] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .FCI(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_0 ), 
    .F0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[1] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[0] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[2] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[1] ), 
    .FCO(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_2 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_fifo_pfu_0_0 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[7] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[6] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[5] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[4] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_3 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_2 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_0 ), 
    .WADO0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD0_INT )
    , 
    .WADO1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD1_INT )
    , 
    .WADO2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD2_INT )
    , 
    .WADO3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD3_INT )
    , 
    .WDO0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD0_INT )
    , 
    .WDO1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD1_INT )
    , 
    .WDO2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD2_INT )
    , 
    .WDO3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD3_INT )
    );
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_fifo_pfu_0_0_0 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0.0 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_3 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_2 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_1 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_0 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_3 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_2 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout5 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout4 ), 
    .WRE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .WCK(byte_clk_fr), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout4 ), 
    .Q0(\byte_D1[4] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout5 ), 
    .Q1(\byte_D1[5] ), 
    .WAD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD0_INT )
    , 
    .WAD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD1_INT )
    , 
    .WAD2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD2_INT )
    , 
    .WAD3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD3_INT )
    , 
    .WD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD0_INT ), 
    .WD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD1_INT ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_fifo_pfu_0_0_1 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0.1 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_3 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_2 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_1 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_0 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_3 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_2 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout7 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout6 ), 
    .WRE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .WCK(byte_clk_fr), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout6 ), 
    .Q0(\byte_D1[6] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout7 ), 
    .Q1(\byte_D1[7] ), 
    .WAD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD0_INT )
    , 
    .WAD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD1_INT )
    , 
    .WAD2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD2_INT )
    , 
    .WAD3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD3_INT )
    , 
    .WD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD2_INT ), 
    .WD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD3_INT ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_fifo_pfu_0_1_2 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1.2 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[3] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[2] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[1] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[0] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_3 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_2 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_0 ), 
    .WADO0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD0_INT )
    , 
    .WADO1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD1_INT )
    , 
    .WADO2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD2_INT )
    , 
    .WADO3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD3_INT )
    , 
    .WDO0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD0_INT )
    , 
    .WDO1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD1_INT )
    , 
    .WDO2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD2_INT )
    , 
    .WDO3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD3_INT )
    );
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_fifo_pfu_0_1 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_3 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_2 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_1 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_0 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_3 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_2 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout1 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout0 ), 
    .WRE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .WCK(byte_clk_fr), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout0 ), 
    .Q0(\byte_D1[0] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout1 ), 
    .Q1(\byte_D1[1] ), 
    .WAD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD0_INT )
    , 
    .WAD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD1_INT )
    , 
    .WAD2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD2_INT )
    , 
    .WAD3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD3_INT )
    , 
    .WD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD0_INT ), 
    .WD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD1_INT ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_fifo_pfu_0_1_3 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1.3 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_3 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_2 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_1 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_0 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_3 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_2 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout3 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout2 ), 
    .WRE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .WCK(byte_clk_fr), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout2 ), 
    .Q0(\byte_D1[2] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rdataout3 ), 
    .Q1(\byte_D1[3] ), 
    .WAD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD0_INT )
    , 
    .WAD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD1_INT )
    , 
    .WAD2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD2_INT )
    , 
    .WAD3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD3_INT )
    , 
    .WD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD2_INT ), 
    .WD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD3_INT ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_fifo_pfu_0_1_7 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1.7 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[3] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[2] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[1] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[0] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_3 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_2 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_0 ), 
    .WADO0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD0_INT )
    , 
    .WADO1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD1_INT )
    , 
    .WADO2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD2_INT )
    , 
    .WADO3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD3_INT )
    , 
    .WDO0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD0_INT ), 
    .WDO1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD1_INT ), 
    .WDO2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD2_INT ), 
    .WDO3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD3_INT ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_fifo_pfu_0_1_6 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1.6 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_3 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_2 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_1 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_0 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_3 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_2 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout1 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout0 ), 
    .WRE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .WCK(byte_clk_fr), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout0 ), 
    .Q0(\byte_D0[0] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout1 ), 
    .Q1(\byte_D0[1] ), 
    .WAD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD0_INT )
    , 
    .WAD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD1_INT )
    , 
    .WAD2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD2_INT )
    , 
    .WAD3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD3_INT )
    , 
    .WD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD0_INT ), 
    .WD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD1_INT ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_fifo_pfu_0_1 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_3 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_2 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_1 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_0 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_3 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_2 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout3 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout2 ), 
    .WRE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .WCK(byte_clk_fr), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout2 ), 
    .Q0(\byte_D0[2] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout3 ), 
    .Q1(\byte_D0[3] ), 
    .WAD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD0_INT )
    , 
    .WAD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD1_INT )
    , 
    .WAD2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD2_INT )
    , 
    .WAD3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD3_INT )
    , 
    .WD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD2_INT ), 
    .WD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD3_INT ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_fifo_pfu_0_0_4 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0.4 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[7] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[6] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[5] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[4] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_3 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_2 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_0 ), 
    .WADO0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD0_INT )
    , 
    .WADO1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD1_INT )
    , 
    .WADO2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD2_INT )
    , 
    .WADO3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD3_INT )
    , 
    .WDO0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD0_INT ), 
    .WDO1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD1_INT ), 
    .WDO2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD2_INT ), 
    .WDO3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD3_INT ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_fifo_pfu_0_0 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_3 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_2 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_1 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_0 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_3 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_2 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout5 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout4 ), 
    .WRE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .WCK(byte_clk_fr), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout4 ), 
    .Q0(\byte_D0[4] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout5 ), 
    .Q1(\byte_D0[5] ), 
    .WAD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD0_INT )
    , 
    .WAD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD1_INT )
    , 
    .WAD2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD2_INT )
    , 
    .WAD3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD3_INT )
    , 
    .WD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD0_INT ), 
    .WD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD1_INT ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_fifo_pfu_0_0_5 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0.5 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_3 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_2 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_1 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_0 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_3 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_2 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout7 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout6 ), 
    .WRE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .WCK(byte_clk_fr), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout6 ), 
    .Q0(\byte_D0[6] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rdataout7 ), 
    .Q1(\byte_D0[7] ), 
    .WAD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD0_INT )
    , 
    .WAD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD1_INT )
    , 
    .WAD2(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD2_INT )
    , 
    .WAD3(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD3_INT )
    , 
    .WD0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD2_INT ), 
    .WD1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD3_INT ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_57 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_57 ( 
    .D0(\genblk4.u_Control_Capture_2Lane/long_data_en ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_en ), 
    .B0(\genblk4.u_Control_Capture_2Lane/PH_active[0] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PF_en ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_37_i ), 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din[14] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_37_i ), 
    .Q0(burst_done), .Q1(\genblk4.u_Control_Capture_2Lane/q_din1[14] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_58 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_58 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/q_long_pkt_dtct ), 
    .C1(\genblk4.u_Control_Capture_2Lane.offset_out ), 
    .B1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .A1(\genblk4.u_Control_Capture_2Lane/N_179 ), 
    .B0(\genblk4.u_Control_Capture_2Lane.offset_out ), 
    .A0(\genblk4.u_Control_Capture_2Lane/N_179 ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_154_i ), 
    .CE(\genblk4.u_Control_Capture_2Lane/un41_offset_out_i_0 ), 
    .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/N_154_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane.offset_out ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un41_offset_out_i_0 ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_59 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_59 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din[9] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_din1[0] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane.q_din2[0] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din1[9] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_60 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_60 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din1[1] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_din1[2] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane.q_din2[2] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane.q_din2[1] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_61 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_61 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din1[3] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_din1[4] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane.q_din2[4] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane.q_din2[3] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_62 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_62 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din1[5] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_din1[6] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane.q_din2[6] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane.q_din2[5] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_63 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_63 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din1[7] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_din1[8] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane.q_din2[8] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane.q_din2[7] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_67 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_67 ( 
    .M1(\genblk4.u_Control_Capture_2Lane.q_din2[15] ), 
    .M0(\genblk4.u_Control_Capture_2Lane.q_din2[8] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane.q_din3[8] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane.q_din3[15] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_68 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_68 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din1[9] ), 
    .M0(\genblk4.u_Control_Capture_2Lane.q_din2[10] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane.q_din3[10] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane.q_din2[9] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_69 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_69 ( 
    .M1(\genblk4.u_Control_Capture_2Lane.q_din2[11] ), 
    .M0(\genblk4.u_Control_Capture_2Lane.q_din2[12] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane.q_din3[12] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane.q_din3[11] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_70 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_70 ( 
    .M1(\genblk4.u_Control_Capture_2Lane.q_din2[13] ), 
    .M0(\genblk4.u_Control_Capture_2Lane.q_din2[14] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane.q_din3[14] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane.q_din3[13] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_71 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_71 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[9] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[7] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[6] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[5] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[0] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/N_208 ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/PF_en_2 ), 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din[12] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/PF_en_2 ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/PF_en ), 
    .F1(\genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_9 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din1[12] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_72 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_72 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/PH_active[8] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/PH_active[0] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_active[8] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/PH_active[0] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/PH_active_ns[1] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1009_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1009_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/PH_active[0] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/PH_active_ns[1] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/PH_active[1] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_73 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_73 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/PH_active[9] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/PH_active[1] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_active[9] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/PH_active[1] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/PH_active_ns[3] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1012_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1012_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/PH_active[2] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/PH_active_ns[3] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/PH_active[3] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_74 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_74 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/PH_active[2] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/PH_active[10] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/N_67_i ), 
    .A1(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/PH_active[2] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_active[10] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/N_67_i ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/N_1017_i ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1015_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1015_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/PH_active[4] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_1017_i ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/PH_active[5] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_75 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_75 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/PH_active[11] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/PH_active[3] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/N_67_i ), 
    .D0(\genblk4.u_Control_Capture_2Lane/PH_active[11] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_active[3] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/N_67_i ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/N_1021_i ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1019_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1019_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/PH_active[6] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_1021_i ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/PH_active[7] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_76 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_76 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/PH_active[12] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/PH_active[4] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_active[12] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/PH_active[4] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/PH_active_ns[9] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1023_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1023_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/PH_active[8] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/PH_active_ns[9] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/PH_active[9] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_77 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_77 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/PH_active[5] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/PH_active[13] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_active[5] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/PH_active[13] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/PH_active_ns[11] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1026_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1026_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/PH_active[10] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/PH_active_ns[11] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/PH_active[11] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_78 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_78 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/PH_active[6] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/PH_active[14] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/N_67_i ), 
    .A1(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/PH_active[6] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_active[14] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/N_67_i ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/N_26 ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1029_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1029_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/PH_active[12] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_26 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/PH_active[13] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_79 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_79 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/PH_active[15] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/PH_active[7] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/N_67_i ), 
    .D0(\genblk4.u_Control_Capture_2Lane/PH_active[15] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_active[7] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/N_67_i ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/N_23 ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1033_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1033_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/PH_active[14] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_23 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/PH_active[15] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_80 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_80 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/PH_active[15] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/PH_active[14] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/PH_active[11] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/PH_active[10] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/un21_i_a2_0_a5_4[3] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/un21_i_a2_0_a5_3[3] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/PH_active[12] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PH_active[8] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_960_i ), 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din[13] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_960_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/PH_en ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un21_i_a2_0_a5_4[3] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din1[13] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_85 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_85 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[14] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[13] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[12] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[3] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/N_208 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[0] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1208_i ), 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din[15] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1208_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/long_data_en ), 
    .F1(\genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_10 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din1[15] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_86 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_86 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/dt[3] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/dt[2] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/dt[0] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/long_data_en ), 
    .C0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .B0(\genblk4.u_Control_Capture_2Lane/WC[0] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PH_en ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_33_i ), 
    .CE(\genblk4.u_Control_Capture_2Lane/un52_odd_cnt_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_33_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .F1(\genblk4.u_Control_Capture_2Lane/byte_en_0_a2_2 ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_88 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_88 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din[1] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_din[2] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane/q_din1[2] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din1[1] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_89 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_89 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din[3] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_din[4] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane/q_din1[4] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din1[3] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_90 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_90 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din[5] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_din[6] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane/q_din1[6] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din1[5] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_91 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_91 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din[7] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_din[8] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane/q_din1[8] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din1[7] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_95 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_95 ( 
    .M1(\genblk4.u_Control_Capture_2Lane.q_din2[9] ), .M0(\byte_D0[0] ), 
    .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_din[0] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane.q_din3[9] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_96 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_96 ( .M1(\byte_D0[1] ), 
    .M0(\byte_D0[2] ), .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_din[2] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din[1] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_97 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_97 ( .M1(\byte_D0[3] ), 
    .M0(\byte_D0[4] ), .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_din[4] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din[3] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_98 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_98 ( .M1(\byte_D0[5] ), 
    .M0(\byte_D0[6] ), .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_din[6] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din[5] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_99 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_99 ( .M1(\byte_D0[7] ), 
    .M0(\byte_D1[0] ), .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_din[8] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din[7] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_103 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_103 ( .M1(\byte_D1[1] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_dt[0] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane/q_dt1[0] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din[9] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_104 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_104 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_dt[1] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_dt[2] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane/q_dt1[2] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_dt1[1] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_105 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_105 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_dt[3] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_dt[4] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane/q_dt1[4] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_dt1[3] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_106 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_106 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/q_din[1] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_din1[9] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_din[0] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_din1[8] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/q_dt_2[1] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/q_dt_2[0] ), 
    .CE(\genblk4.u_Control_Capture_2Lane/N_177_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/q_dt_2[0] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_dt[0] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/q_dt_2[1] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_dt[1] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_107 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_107 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/q_din[3] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_din1[11] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_din[2] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_din1[10] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/q_dt_2[3] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/q_dt_2[2] ), 
    .CE(\genblk4.u_Control_Capture_2Lane/N_177_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/q_dt_2[2] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_dt[2] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/q_dt_2[3] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_dt[3] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_108 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_108 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/q_din[5] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_din1[13] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_din[4] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_din1[12] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/q_dt_2[5] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/q_dt_2[4] ), 
    .CE(\genblk4.u_Control_Capture_2Lane/N_177_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/q_dt_2[4] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_dt[4] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/q_dt_2[5] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_dt[5] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_109 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_109 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/q_dt[3] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_dt[2] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_dt[1] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_dt[0] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/long_pkt_dtct_i_1 ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_active_RNIEUUI1[3] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/N_186_1 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_i_o2_0[13] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_19_i ), 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din[0] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_19_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_long_pkt_dtct ), 
    .F1(\genblk4.u_Control_Capture_2Lane/long_pkt_dtct_i_1 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din1[0] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_110 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_110 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_dt[5] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_wc[0] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane/q_wc1[0] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_dt1[5] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_111 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_111 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/q_din[9] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_din1[1] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_din[8] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_din1[0] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/N_1377 ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1397 ), 
    .CE(\genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1397 ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_wc[0] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_1377 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_wc[1] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_112 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_112 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/q_din[11] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_din1[3] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_din[10] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_din1[2] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/N_1337 ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1357 ), 
    .CE(\genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1357 ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_wc[2] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_1337 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_wc[3] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_113 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_113 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/q_din[13] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_din1[5] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_din[12] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_din1[4] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/N_1297 ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1317 ), 
    .CE(\genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1317 ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_wc[4] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_1297 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_wc[5] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_114 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_114 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/q_din[15] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_din1[7] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_din[14] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_din1[6] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/N_1257 ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1277 ), 
    .CE(\genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1277 ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_wc[6] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_1257 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_wc[7] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_118 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_118 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/q_din[7] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_din1[15] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_din[6] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_din1[14] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/N_1121 ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/N_1120 ), 
    .CE(\genblk4.u_Control_Capture_2Lane/N_178_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/N_1120 ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_wc[14] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_1121 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_wc[15] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_119 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_119 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[1] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_wc[2] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_1[0] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_wc[1] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[1] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[0] ), 
    .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[0] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[0] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[1] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[1] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_120 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_120 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[3] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_wc[4] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[2] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_wc[3] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[3] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[2] ), 
    .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[2] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[2] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[3] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[3] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_121 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_121 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[5] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_wc[6] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[4] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_wc[5] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[5] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[4] ), 
    .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[4] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[4] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[5] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[5] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_122 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_122 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[7] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_wc[8] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[6] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_wc[7] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[7] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[6] ), 
    .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[6] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[6] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[7] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[7] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_123 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_123 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[9] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_wc[10] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[8] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_wc[9] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[9] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[8] ), 
    .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[8] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[8] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[9] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[9] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_124 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_124 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[11] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_wc[12] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[10] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_wc[11] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[11] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[10] ), 
    .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[10] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[10] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[11] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[11] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_125 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_125 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[13] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_wc[14] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[12] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_wc[13] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[13] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[12] ), 
    .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[12] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[12] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[13] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[13] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_126 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_126 ( 
    .B1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_s_15_0_S0 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .D0(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .C0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3[14] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_wc[15] ), 
    .DI1(\genblk4.u_Control_Capture_2Lane/q_word_cntr_RNO[15] ), 
    .DI0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[14] ), 
    .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[14] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[14] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/q_word_cntr_RNO[15] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[15] ));
  genblk7_u_rgb888_lane2_SLICE_tb_127 \genblk7.u_rgb888_lane2/SLICE_tb_127 ( 
    .D1(\genblk4.u_Control_Capture_2Lane.q_din3[9] ), 
    .C1(\genblk4.u_Control_Capture_2Lane.q_din2[1] ), 
    .B1(\genblk4.u_Control_Capture_2Lane.offset_out ), .A1(byte_en), 
    .D0(\genblk4.u_Control_Capture_2Lane.q_din3[8] ), 
    .C0(\genblk4.u_Control_Capture_2Lane.q_din2[0] ), 
    .B0(\genblk4.u_Control_Capture_2Lane.offset_out ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_0_3[1] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_0_3[0] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_0_3[0] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_0[0] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_0_3[1] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_0[1] ));
  genblk7_u_rgb888_lane2_SLICE_tb_128 \genblk7.u_rgb888_lane2/SLICE_tb_128 ( 
    .D1(\genblk4.u_Control_Capture_2Lane.q_din3[11] ), 
    .C1(\genblk4.u_Control_Capture_2Lane.q_din2[3] ), 
    .B1(\genblk4.u_Control_Capture_2Lane.offset_out ), .A1(byte_en), 
    .D0(\genblk4.u_Control_Capture_2Lane.q_din3[10] ), 
    .C0(\genblk4.u_Control_Capture_2Lane.q_din2[2] ), 
    .B0(\genblk4.u_Control_Capture_2Lane.offset_out ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_0_3[3] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_0_3[2] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_0_3[2] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_0[2] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_0_3[3] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_0[3] ));
  genblk7_u_rgb888_lane2_SLICE_tb_129 \genblk7.u_rgb888_lane2/SLICE_tb_129 ( 
    .D1(\genblk4.u_Control_Capture_2Lane.q_din3[13] ), 
    .C1(\genblk4.u_Control_Capture_2Lane.q_din2[5] ), 
    .B1(\genblk4.u_Control_Capture_2Lane.offset_out ), .A1(byte_en), 
    .D0(\genblk4.u_Control_Capture_2Lane.q_din3[12] ), 
    .C0(\genblk4.u_Control_Capture_2Lane.q_din2[4] ), 
    .B0(\genblk4.u_Control_Capture_2Lane.offset_out ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_0_3[5] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_0_3[4] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_0_3[4] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_0[4] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_0_3[5] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_0[5] ));
  genblk7_u_rgb888_lane2_SLICE_tb_130 \genblk7.u_rgb888_lane2/SLICE_tb_130 ( 
    .D1(\genblk4.u_Control_Capture_2Lane.q_din3[15] ), 
    .C1(\genblk4.u_Control_Capture_2Lane.q_din2[7] ), 
    .B1(\genblk4.u_Control_Capture_2Lane.offset_out ), .A1(byte_en), 
    .D0(\genblk4.u_Control_Capture_2Lane.q_din3[14] ), 
    .C0(\genblk4.u_Control_Capture_2Lane.q_din2[6] ), 
    .B0(\genblk4.u_Control_Capture_2Lane.offset_out ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_0_3[7] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_0_3[6] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_0_3[6] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_0[6] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_0_3[7] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_0[7] ));
  genblk7_u_rgb888_lane2_SLICE_tb_131 \genblk7.u_rgb888_lane2/SLICE_tb_131 ( 
    .D1(\genblk4.u_Control_Capture_2Lane.q_din2[9] ), 
    .C1(\genblk4.u_Control_Capture_2Lane.q_din2[1] ), 
    .B1(\genblk4.u_Control_Capture_2Lane.offset_out ), .A1(byte_en), 
    .D0(\genblk4.u_Control_Capture_2Lane.q_din2[8] ), 
    .C0(\genblk4.u_Control_Capture_2Lane.q_din2[0] ), 
    .B0(\genblk4.u_Control_Capture_2Lane.offset_out ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_0_3[9] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_0_3[8] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_0_3[8] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_0[8] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_0_3[9] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_0[9] ));
  genblk7_u_rgb888_lane2_SLICE_tb_132 \genblk7.u_rgb888_lane2/SLICE_tb_132 ( 
    .D1(\genblk4.u_Control_Capture_2Lane.q_din2[11] ), 
    .C1(\genblk4.u_Control_Capture_2Lane.q_din2[3] ), 
    .B1(\genblk4.u_Control_Capture_2Lane.offset_out ), .A1(byte_en), 
    .D0(\genblk4.u_Control_Capture_2Lane.q_din2[10] ), 
    .C0(\genblk4.u_Control_Capture_2Lane.q_din2[2] ), 
    .B0(\genblk4.u_Control_Capture_2Lane.offset_out ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_0_3[11] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_0_3[10] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_0_3[10] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_0[10] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_0_3[11] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_0[11] ));
  genblk7_u_rgb888_lane2_SLICE_tb_133 \genblk7.u_rgb888_lane2/SLICE_tb_133 ( 
    .D1(\genblk4.u_Control_Capture_2Lane.q_din2[13] ), 
    .C1(\genblk4.u_Control_Capture_2Lane.q_din2[5] ), 
    .B1(\genblk4.u_Control_Capture_2Lane.offset_out ), .A1(byte_en), 
    .D0(\genblk4.u_Control_Capture_2Lane.q_din2[12] ), 
    .C0(\genblk4.u_Control_Capture_2Lane.q_din2[4] ), 
    .B0(\genblk4.u_Control_Capture_2Lane.offset_out ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_0_3[13] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_0_3[12] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_0_3[12] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_0[12] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_0_3[13] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_0[13] ));
  genblk7_u_rgb888_lane2_SLICE_tb_134 \genblk7.u_rgb888_lane2/SLICE_tb_134 ( 
    .D1(\genblk4.u_Control_Capture_2Lane.q_din2[15] ), 
    .C1(\genblk4.u_Control_Capture_2Lane.q_din2[7] ), 
    .B1(\genblk4.u_Control_Capture_2Lane.offset_out ), .A1(byte_en), 
    .D0(\genblk4.u_Control_Capture_2Lane.q_din2[14] ), 
    .C0(\genblk4.u_Control_Capture_2Lane.q_din2[6] ), 
    .B0(\genblk4.u_Control_Capture_2Lane.offset_out ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_0_3[15] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_0_3[14] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_0_3[14] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_0[14] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_0_3[15] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_0[15] ));
  genblk7_u_rgb888_lane2_SLICE_tb_135 \genblk7.u_rgb888_lane2/SLICE_tb_135 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_0[1] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_0[0] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_1_3[1] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_1_3[0] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_1_3[0] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_1[0] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_1_3[1] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_1[1] ));
  genblk7_u_rgb888_lane2_SLICE_tb_136 \genblk7.u_rgb888_lane2/SLICE_tb_136 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_0[3] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_0[2] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_1_3[3] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_1_3[2] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_1_3[2] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_1[2] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_1_3[3] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_1[3] ));
  genblk7_u_rgb888_lane2_SLICE_tb_137 \genblk7.u_rgb888_lane2/SLICE_tb_137 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_0[5] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_0[4] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_1_3[5] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_1_3[4] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_1_3[4] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_1[4] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_1_3[5] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_1[5] ));
  genblk7_u_rgb888_lane2_SLICE_tb_138 \genblk7.u_rgb888_lane2/SLICE_tb_138 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_0[7] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_0[6] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_1_3[7] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_1_3[6] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_1_3[6] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_1[6] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_1_3[7] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_1[7] ));
  genblk7_u_rgb888_lane2_SLICE_tb_139 \genblk7.u_rgb888_lane2/SLICE_tb_139 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_0[9] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_0[8] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_1_3[9] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_1_3[8] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_1_3[8] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_1[8] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_1_3[9] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_1[9] ));
  genblk7_u_rgb888_lane2_SLICE_tb_140 \genblk7.u_rgb888_lane2/SLICE_tb_140 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_0[11] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_0[10] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_1_3[11] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_1_3[10] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_1_3[10] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_1[10] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_1_3[11] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_1[11] ));
  genblk7_u_rgb888_lane2_SLICE_tb_141 \genblk7.u_rgb888_lane2/SLICE_tb_141 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_0[13] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_0[12] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_1_3[13] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_1_3[12] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_1_3[12] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_1[12] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_1_3[13] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_1[13] ));
  genblk7_u_rgb888_lane2_SLICE_tb_142 \genblk7.u_rgb888_lane2/SLICE_tb_142 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_0[15] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_0[14] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_1_3[15] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_1_3[14] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_1_3[14] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_1[14] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_1_3[15] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_1[15] ));
  genblk7_u_rgb888_lane2_SLICE_tb_143 \genblk7.u_rgb888_lane2/SLICE_tb_143 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_1[1] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_1[0] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_2_3[1] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_2_3[0] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_2_3[0] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_2[0] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_2_3[1] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_2[1] ));
  genblk7_u_rgb888_lane2_SLICE_tb_144 \genblk7.u_rgb888_lane2/SLICE_tb_144 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_1[3] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_1[2] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_2_3[3] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_2_3[2] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_2_3[2] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_2[2] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_2_3[3] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_2[3] ));
  genblk7_u_rgb888_lane2_SLICE_tb_145 \genblk7.u_rgb888_lane2/SLICE_tb_145 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_1[5] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_1[4] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_2_3[5] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_2_3[4] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_2_3[4] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_2[4] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_2_3[5] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_2[5] ));
  genblk7_u_rgb888_lane2_SLICE_tb_146 \genblk7.u_rgb888_lane2/SLICE_tb_146 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_1[7] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_1[6] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_2_3[7] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_2_3[6] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_2_3[6] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_2[6] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_2_3[7] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_2[7] ));
  genblk7_u_rgb888_lane2_SLICE_tb_147 \genblk7.u_rgb888_lane2/SLICE_tb_147 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_1[9] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_1[8] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_2_3[9] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_2_3[8] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_2_3[8] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_2[8] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_2_3[9] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_2[9] ));
  genblk7_u_rgb888_lane2_SLICE_tb_148 \genblk7.u_rgb888_lane2/SLICE_tb_148 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_1[11] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_1[10] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_2_3[11] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_2_3[10] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_2_3[10] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_2[10] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_2_3[11] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_2[11] ));
  genblk7_u_rgb888_lane2_SLICE_tb_149 \genblk7.u_rgb888_lane2/SLICE_tb_149 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_1[13] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_1[12] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_2_3[13] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_2_3[12] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_2_3[12] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_2[12] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_2_3[13] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_2[13] ));
  genblk7_u_rgb888_lane2_SLICE_tb_150 \genblk7.u_rgb888_lane2/SLICE_tb_150 ( 
    .B1(\genblk7.u_rgb888_lane2/q_din_1[15] ), .A1(byte_en), 
    .B0(\genblk7.u_rgb888_lane2/q_din_1[14] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/q_din_2_3[15] ), 
    .DI0(\genblk7.u_rgb888_lane2/q_din_2_3[14] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/q_din_2_3[14] ), 
    .Q0(\genblk7.u_rgb888_lane2/q_din_2[14] ), 
    .F1(\genblk7.u_rgb888_lane2/q_din_2_3[15] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_2[15] ));
  genblk7_u_rgb888_lane2_SLICE_tb_156 \genblk7.u_rgb888_lane2/SLICE_tb_156 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_2[0] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_2[10] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[10] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[0] ));
  genblk7_u_rgb888_lane2_SLICE_tb_157 \genblk7.u_rgb888_lane2/SLICE_tb_157 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_2[11] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_2[12] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[12] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[11] ));
  genblk7_u_rgb888_lane2_SLICE_tb_158 \genblk7.u_rgb888_lane2/SLICE_tb_158 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_2[13] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_2[14] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[14] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[13] ));
  genblk7_u_rgb888_lane2_SLICE_tb_159 \genblk7.u_rgb888_lane2/SLICE_tb_159 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_2[15] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_1[0] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[16] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[15] ));
  genblk7_u_rgb888_lane2_SLICE_tb_160 \genblk7.u_rgb888_lane2/SLICE_tb_160 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_1[1] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_1[2] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[18] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[17] ));
  genblk7_u_rgb888_lane2_SLICE_tb_166 \genblk7.u_rgb888_lane2/SLICE_tb_166 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_2[2] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_1[14] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[30] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[2] ));
  genblk7_u_rgb888_lane2_SLICE_tb_167 \genblk7.u_rgb888_lane2/SLICE_tb_167 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_1[15] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_0[0] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[32] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[31] ));
  genblk7_u_rgb888_lane2_SLICE_tb_168 \genblk7.u_rgb888_lane2/SLICE_tb_168 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_0[1] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_0[2] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[34] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[33] ));
  genblk7_u_rgb888_lane2_SLICE_tb_169 \genblk7.u_rgb888_lane2/SLICE_tb_169 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_0[3] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_0[4] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[36] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[35] ));
  genblk7_u_rgb888_lane2_SLICE_tb_170 \genblk7.u_rgb888_lane2/SLICE_tb_170 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_0[5] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_0[6] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[38] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[37] ));
  genblk7_u_rgb888_lane2_SLICE_tb_180 \genblk7.u_rgb888_lane2/SLICE_tb_180 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[0] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[10] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[10] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[0] ));
  genblk7_u_rgb888_lane2_SLICE_tb_181 \genblk7.u_rgb888_lane2/SLICE_tb_181 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[11] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[12] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[12] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[11] ));
  genblk7_u_rgb888_lane2_SLICE_tb_182 \genblk7.u_rgb888_lane2/SLICE_tb_182 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[13] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[14] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[14] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[13] ));
  genblk7_u_rgb888_lane2_SLICE_tb_183 \genblk7.u_rgb888_lane2/SLICE_tb_183 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[15] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[16] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[16] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[15] ));
  genblk7_u_rgb888_lane2_SLICE_tb_184 \genblk7.u_rgb888_lane2/SLICE_tb_184 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[17] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[18] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[18] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[17] ));
  genblk7_u_rgb888_lane2_SLICE_tb_190 \genblk7.u_rgb888_lane2/SLICE_tb_190 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[2] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[30] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[30] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[2] ));
  genblk7_u_rgb888_lane2_SLICE_tb_191 \genblk7.u_rgb888_lane2/SLICE_tb_191 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[31] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[32] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[32] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[31] ));
  genblk7_u_rgb888_lane2_SLICE_tb_192 \genblk7.u_rgb888_lane2/SLICE_tb_192 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[33] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[34] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[34] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[33] ));
  genblk7_u_rgb888_lane2_SLICE_tb_193 \genblk7.u_rgb888_lane2/SLICE_tb_193 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[35] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[36] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[36] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[35] ));
  genblk7_u_rgb888_lane2_SLICE_tb_194 \genblk7.u_rgb888_lane2/SLICE_tb_194 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[37] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[38] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[38] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[37] ));
  SLICE_tb_200 SLICE_tb_200( .D1(\genblk4.u_Control_Capture_2Lane/long_data_en ), 
    .C1(\genblk4.u_Control_Capture_2Lane/byte_en_0_a2_2 ), 
    .B1(\genblk4.u_Control_Capture_2Lane/dt[1] ), .A1(\DT_RNI15IB[4] ), 
    .B0(\genblk7.u_rgb888_lane2/wd_cnt[1] ), .A0(byte_en), 
    .DI0(\genblk7.u_rgb888_lane2/wd_cnt_1_sqmuxa_i_i_a3 ), 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din[10] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/wd_cnt_1_sqmuxa_i_i_a3 ), 
    .Q0(\genblk7.u_rgb888_lane2/q_mixed_en_Q[0] ), .F1(byte_en), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din1[10] ));
  genblk7_u_rgb888_lane2_SLICE_tb_201 \genblk7.u_rgb888_lane2/SLICE_tb_201 ( 
    .M1(\genblk7.u_rgb888_lane2/q_mixed_en_Q[0] ), 
    .M0(\genblk7.u_rgb888_lane2/q_mixed_data_rdy_Q[0] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_unmixed_data_rdy ), 
    .Q1(\genblk7.u_rgb888_lane2/q_mixed_data_rdy_Q[0] ));
  genblk7_u_rgb888_lane2_SLICE_tb_202 \genblk7.u_rgb888_lane2/SLICE_tb_202 ( 
    .B1(\genblk7.u_rgb888_lane2/wd_cnt[0] ), .A1(byte_en), 
    .C0(\genblk7.u_rgb888_lane2/wd_cnt[1] ), 
    .B0(\genblk7.u_rgb888_lane2/wd_cnt[0] ), .A0(byte_en), 
    .DI1(\genblk7.u_rgb888_lane2/N_52 ), 
    .DI0(\genblk7.u_rgb888_lane2/wd_cnt_ns[0] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk7.u_rgb888_lane2/wd_cnt_ns[0] ), 
    .Q0(\genblk7.u_rgb888_lane2/wd_cnt[0] ), 
    .F1(\genblk7.u_rgb888_lane2/N_52 ), 
    .Q1(\genblk7.u_rgb888_lane2/wd_cnt[1] ));
  SLICE_tb_203 SLICE_tb_203( .C1(reset_n_tb_c), .B1(\LP0_in[1] ), .A1(\LP0_in[0] ), 
    .B0(\LP0_in[1] ), .A0(\LP0_in[0] ), .DI0(\genblk1.un1_hs_en_i ), 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din[11] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk1.un1_hs_en_i ), .Q0(q_hs_en), 
    .F1(\u_DPHY_RX_INST/u_aligner/en_align_i ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din1[11] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_232 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_232 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_reg1_4_6 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[2] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[1] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_123 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt_2_i_a2_i_0[0] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[7] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_129 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_123_2 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_113 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_114 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_0 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_114 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[0] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_113 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[1] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_233 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_233 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_reg1_4_6 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[3] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[2] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[3] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[1] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[0] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_140 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_112 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_0 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_112 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_140 ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_234 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_234 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_1_3 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_0_0 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_149 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_123 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shiftflag ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_0 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_1108_0 ), 
    .M1(\u_DPHY_RX_INST/align_data[13] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_1108_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shiftflag ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_0 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[2] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_263 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_263 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_reg1_4_6 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[2] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[1] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_31 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt_2_i_a2_i_0[0] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[7] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_36 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_31_2 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_8 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_10 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_4 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_10 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[0] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_8 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[1] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_264 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_264 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_reg1_4_6 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[3] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[2] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[3] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[1] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[0] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_101 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_6 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_4 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_6 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_101 ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_265 \u_DPHY_RX_INST/u_aligner/SLICE_tb_265 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_1_3 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_0_0 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_109 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_31 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shiftflag ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_4 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_1112_0 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[1] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_1112_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shiftflag ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_4 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[1] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_266 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_266 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_2 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_1 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gdata_1 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gdata_0 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gdata_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_0 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gdata_1 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_1 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_267 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_267 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_4 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_3 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_3 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_2 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gdata_3 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gdata_2 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gdata_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_2 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gdata_3 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_3 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_277 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_277 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_2 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_1 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gdata_1 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gdata_0 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gdata_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_0 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gdata_1 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_1 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_278 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_278 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_4 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_3 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_3 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_2 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gdata_3 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gdata_2 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gdata_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_2 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gdata_3 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_3 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_288 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_288 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_2 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_1 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gdata_1 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gdata_0 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gdata_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_0 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gdata_1 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_1 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_289 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_289 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_4 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_3 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_3 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_2 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gdata_3 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gdata_2 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gdata_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_2 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gdata_3 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_3 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_299 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_299 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_2 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_1 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gdata_1 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gdata_0 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gdata_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_0 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gdata_1 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_1 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_300 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_300 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_4 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_3 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_3 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_2 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gdata_3 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gdata_2 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gdata_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_2 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gdata_3 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_3 ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_310 \u_DPHY_RX_INST/u_aligner/SLICE_tb_310 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[6] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/lane0[7] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[0] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[6] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_311 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_311 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/lane0[6] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/lane0[5] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[2] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[1] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_312 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_312 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/lane0[4] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/lane0[3] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[4] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[3] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_313 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_313 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/lane0[2] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/lane0[1] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[6] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[5] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_314 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_314 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/lane0[0] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[0] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[0] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[7] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_315 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_315 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[1] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[2] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[1] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_316 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_316 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[4] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[3] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_317 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_317 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[6] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[5] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_318 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_318 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[7] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[0] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[0] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[7] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_319 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_319 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[1] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[2] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[1] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_320 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_320 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[4] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[3] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_321 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_321 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[6] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[5] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_322 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_322 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[7] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/lane1[7] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[0] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[7] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_323 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_323 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/lane1[6] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/lane1[5] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[2] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[1] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_324 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_324 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/lane1[4] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/lane1[3] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[4] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[3] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_325 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_325 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/lane1[2] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/lane1[1] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[6] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[5] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_326 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_326 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/lane1[0] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[0] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[0] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[7] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_327 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_327 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[1] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[2] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[1] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_328 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_328 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[4] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[3] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_329 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_329 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[6] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[5] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_330 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_330 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[7] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[0] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[0] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[7] ));
  SLICE_tb_331 SLICE_tb_331( .A0(reset_n_tb_c), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(reset_n_tb_c_i), .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[2] ), 
    .F1(gnd_tb), .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[3] ));
  SLICE_tb_332 SLICE_tb_332( .B1(\genblk4.u_Control_Capture_2Lane/PH_active[10] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/PH_active[2] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/q_din1[3] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_din1[2] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_din1[1] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_din1[0] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_16 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[4] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_186_1 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[5] ));
  SLICE_tb_333 SLICE_tb_333( .D1(\genblk4.u_Control_Capture_2Lane/q_dt[3] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_dt[2] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_dt[1] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_dt[0] ), 
    .B0(\u_DPHY_RX_INST/u_iDDRx4/opensync_0 ), 
    .A0(\u_DPHY_RX_INST/u_iDDRx4/opensync_1 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[7] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_iDDRx4/xstop ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[6] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_67_i ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[7] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_335 \u_DPHY_RX_INST/u_aligner/SLICE_tb_335 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shiftflag ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[0] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[7] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shiftflag ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[7] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[0] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_Q[0] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/syncs_active_Q[3] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_12 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_Q[0] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_12 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_Q[1] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_336 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_336 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[3] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[2] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[1] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[0] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[7] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[6] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[5] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[4] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_Q[2] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_Q[1] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_16 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_Q[2] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_17 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_0_Q[3] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_337 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_337 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_16 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_17 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_21 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_16 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_17 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_21 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/N_1113_0 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/N_1114_0 ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/N_1114_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/N_1113_0 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_338 \u_DPHY_RX_INST/u_aligner/SLICE_tb_338 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/Full ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_syncs_active ), 
    .M1(\u_DPHY_RX_INST/align_data[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_syncs_active ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/syncs_active_Q[3] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[1] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_339 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_339 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[0] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[2] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[1] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[0] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[1] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[0] ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[1] ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[0] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[0] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/lane0[0] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[1] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/lane0[1] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_340 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_340 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[0] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[4] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[3] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[0] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[3] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[2] ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[3] ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[2] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/lane0[2] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[3] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/lane0[3] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_341 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_341 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[0] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[6] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[5] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[0] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[5] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[4] ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[5] ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[4] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/lane0[4] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[5] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/lane0[5] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_342 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_342 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[0] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6_0[7] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[7] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[0] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[7] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[6] ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[7] ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[6] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/lane0[6] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10[7] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/lane0[7] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_343 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_343 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[0] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[0] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0] ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[1] ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[0] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[0] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/lane1[0] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[1] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/lane1[1] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_344 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_344 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[0] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[0] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2] ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[3] ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[2] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/lane1[2] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[3] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/lane1[3] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_345 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_345 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[0] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[0] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4] ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[5] ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[4] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/lane1[4] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[5] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/lane1[5] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_346 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_346 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[0] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[0] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6] ), 
    .DI1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[7] ), 
    .DI0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[6] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/lane1[6] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10[7] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/lane1[7] ));
  u_DPHY_RX_INST_SLICE_tb_348 \u_DPHY_RX_INST/SLICE_tb_348 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[7] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[6] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[5] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_2[4] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[3] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[1] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[0] ), 
    .M1(\u_DPHY_RX_INST/u_iDDRx4/opensync_0 ), 
    .M0(\u_DPHY_RX_INST/u_iDDRx4/FF_0_Q ), 
    .CE(\u_DPHY_RX_INST/u_iDDRx4/FF_0_Q ), .LSR(reset_n_tb_c), .CLK(DCK_c), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_17 ), 
    .Q0(\u_DPHY_RX_INST/u_iDDRx4/opensync_0 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_12 ), 
    .Q1(\u_DPHY_RX_INST/u_iDDRx4/opensync_1 ));
  u_DPHY_RX_INST_SLICE_tb_349 \u_DPHY_RX_INST/SLICE_tb_349 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[7] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[6] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[5] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[4] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[7] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[6] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[5] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[4] ), 
    .M1(\u_DPHY_RX_INST/u_iDDRx4/opensync_2 ), 
    .M0(\u_DPHY_RX_INST/u_iDDRx4/opensync_1 ), 
    .CE(\u_DPHY_RX_INST/u_iDDRx4/FF_0_Q ), .LSR(reset_n_tb_c), .CLK(DCK_c), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_12 ), 
    .Q0(\u_DPHY_RX_INST/u_iDDRx4/opensync_2 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_16 ), 
    .Q1(\u_DPHY_RX_INST/u_iDDRx4/FF_0_Q ));
  SLICE_tb_350 SLICE_tb_350( .D1(\LP0_in[0] ), .C1(\LP0_in[1] ), .B1(q_hs_en), 
    .A1(burst_done), .C0(q_hs_en), .B0(\LP0_in[1] ), .A0(\LP0_in[0] ), 
    .DI0(\genblk1.un3_term_en ), .CE(\genblk1.un7_term_en_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk1.un3_term_en ), .Q0(un1_LP1), 
    .F1(\genblk1.un7_term_en_i ));
  SLICE_tb_351 SLICE_tb_351( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/Full ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), 
    .A0(\genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/w_lv_n ), 
    .DI0(\genblk7.u_rgb888_lane2/w_lv_n_i ), .LSR(reset_n_tb_c), .CLK(pixclk), 
    .F0(\genblk7.u_rgb888_lane2/w_lv_n_i ), .Q0(w_DE_tb), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_0__SLICE_tb_352 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/SLICE_tb_352 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[6] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[2] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[4] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[0] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[0] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_1__SLICE_tb_353 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/SLICE_tb_353 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[7] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[3] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[5] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[1] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[1] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_2__SLICE_tb_354 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/SLICE_tb_354 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[0] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[4] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[6] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[2] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[2] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_3__SLICE_tb_355 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/SLICE_tb_355 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[1] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[5] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[7] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[3] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_4__SLICE_tb_356 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/SLICE_tb_356 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[2] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[6] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[0] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[4] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[4] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_5__SLICE_tb_357 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/SLICE_tb_357 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[3] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[7] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[1] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[5] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_6__SLICE_tb_358 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/SLICE_tb_358 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[4] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[0] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[2] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[6] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[6] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_7__SLICE_tb_359 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/SLICE_tb_359 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[5] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[1] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[3] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[7] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3_0[7] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_6_7__SLICE_tb_360 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/SLICE_tb_360 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[6] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[2] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[4] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[0] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6_0[7] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_0__SLICE_tb_361 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/SLICE_tb_361 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[6] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[2] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[4] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[0] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_1__SLICE_tb_362 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/SLICE_tb_362 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[7] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[3] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[5] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[1] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_2__SLICE_tb_363 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/SLICE_tb_363 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[0] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[4] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[6] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[2] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_3__SLICE_tb_364 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/SLICE_tb_364 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[1] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[5] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[7] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_4__SLICE_tb_365 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/SLICE_tb_365 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[2] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[6] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[0] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[4] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_5__SLICE_tb_366 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/SLICE_tb_366 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[3] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[7] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[1] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_6__SLICE_tb_367 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/SLICE_tb_367 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[4] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[0] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[2] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[6] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_7__SLICE_tb_368 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/SLICE_tb_368 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[5] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[1] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[3] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[7] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_6_7__SLICE_tb_369 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/SLICE_tb_369 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[6] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[2] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[4] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[0] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[1] ), 
    .OFX0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7] ));
  genblk4_u_Control_Capture_2Lane_q_wc_2_sn_N_2_i_SLICE_tb_370 
    \genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/SLICE_tb_370 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/N_186_1 ), 
    .C1(\genblk4.u_Control_Capture_2Lane/PH_active[14] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/PH_active[6] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/PH_active_RNIEUUI1[3] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/PH_active[1] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_active[9] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/PH_active_ns_0_0_o2[11] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PH_active_RNIEUUI1[3] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .OFX0(\genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_371 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_371 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r20 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r21 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r22 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_r3 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r23 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r24 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_4 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_r3 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_4 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_r0 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_372 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_372 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w20 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w21 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w22 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_w3 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w23 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w24 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_2 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_3 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_w3 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_3 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_w0 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_2 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_373 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_373 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r20 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r21 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r22 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_r3 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r23 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r24 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_4 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_r3 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_4 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_r0 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_374 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_374 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w20 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w21 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w22 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_w3 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w23 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w24 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_2 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_3 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_w3 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_3 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_w0 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_2 ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_375 \u_DPHY_RX_INST/u_aligner/SLICE_tb_375 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[3] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[2] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[1] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[0] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_15 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_14 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_13 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_12 ), 
    .M1(\u_DPHY_RX_INST/align_data[7] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_21 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[6] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_15 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[0] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_376 \u_DPHY_RX_INST/u_aligner/SLICE_tb_376 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[3] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[2] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[1] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_1[0] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_15 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_14 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_13 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_12 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[1] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[0] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_21 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[0] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_15 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[1] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_377 \u_DPHY_RX_INST/u_aligner/SLICE_tb_377 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[7] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[4] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[3] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[5] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_31_2 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_11 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[1] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[0] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_31 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[0] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_11 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[1] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_378 \u_DPHY_RX_INST/u_aligner/SLICE_tb_378 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_22 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_21 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[0] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_101 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[1] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[6] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_109 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[0] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[7] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_31_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[7] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_109 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[0] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_379 \u_DPHY_RX_INST/u_aligner/SLICE_tb_379 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_16 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_15 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_14 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_13 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_0_1 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_0 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_22 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_21 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_0_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[2] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_22 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[3] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_380 \u_DPHY_RX_INST/u_aligner/SLICE_tb_380 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[1] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[6] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[5] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[4] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[0] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[7] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_101 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_14 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_0_1 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[2] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_14 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[3] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_381 \u_DPHY_RX_INST/u_aligner/SLICE_tb_381 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[7] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[6] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[5] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[4] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_reg1_4_6 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[1] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_15 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[4] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_reg1_4_6 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[5] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_382 \u_DPHY_RX_INST/u_aligner/SLICE_tb_382 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[6] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[5] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[4] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[3] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_17 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_12 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[2] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[1] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[1] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[0] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_21 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[0] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_17 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[1] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_383 \u_DPHY_RX_INST/u_aligner/SLICE_tb_383 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[1] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[6] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[3] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_1_1 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[7] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[4] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_12 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[7] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_1_3 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[6] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_1_1 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[7] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_384 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_384 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[7] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[4] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[3] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[5] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_123_2 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_115 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[2] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[1] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_123 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[1] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_115 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[2] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_385 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_385 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_22 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_21 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[0] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_140 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[1] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[6] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_149 ), 
    .M1(\u_DPHY_RX_INST/align_data[14] ), .M0(\u_DPHY_RX_INST/align_data[15] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_123_2 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[0] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_149 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[1] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_386 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_386 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_16 ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_15 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_14 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_13 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_0_1 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_0 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_22 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_21 ), 
    .M1(\u_DPHY_RX_INST/align_data[11] ), .M0(\u_DPHY_RX_INST/align_data[12] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_0_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[3] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_22 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[4] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_387 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_387 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[1] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[6] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[5] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[4] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[0] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[7] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_140 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_117 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[6] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[5] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_0_1 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[5] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_117 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[6] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_388 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_388 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[7] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[6] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[5] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[4] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_reg1_4_6 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[1] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_118 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[4] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[3] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[3] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_reg1_4_6 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[4] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_389 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_389 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[6] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[5] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[4] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[3] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_17 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_12 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[2] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[1] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[2] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[1] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_21 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[1] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_17 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[2] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_390 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_390 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[1] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[6] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[3] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_1_1 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[7] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[4] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_116 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[0] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[7] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_1_3 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[7] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_1_1 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[0] ));
  SLICE_tb_391 SLICE_tb_391( .B1(\genblk4.u_Control_Capture_2Lane/PH_active[14] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/PH_active[6] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/PH_active[2] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_active[10] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_i_o2_0[13] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PH_active_RNIEUUI1[3] ), 
    .M1(\u_DPHY_RX_INST/align_data[2] ), .M0(\u_DPHY_RX_INST/align_data[3] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/N_178_i ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[4] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_i_o2_0[13] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[5] ));
  SLICE_tb_392 SLICE_tb_392( .D1(\genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_10 ), 
    .C1(\genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_9 ), 
    .B1(\genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_8 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_7 ), 
    .C0(\genblk4.u_Control_Capture_2Lane/N_208 ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[0] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_long_pkt_dtct ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[1] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[0] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un20_q_word_cntr ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[0] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_208 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[1] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_393 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_393 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/N_208 ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[0] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_28 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_29 ), 
    .C0(\genblk4.u_Control_Capture_2Lane/long_data_en ), 
    .B0(\genblk4.u_Control_Capture_2Lane/PH_en ), 
    .A0(\genblk4.u_Control_Capture_2Lane/N_179 ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_wc1[0] ), 
    .CE(\genblk4.u_Control_Capture_2Lane/N_960_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/un52_odd_cnt_i ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/WC[0] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_179 ));
  SLICE_tb_394 SLICE_tb_394( .D1(\genblk4.u_Control_Capture_2Lane/PH_en ), 
    .C1(\genblk4.u_Control_Capture_2Lane/dt[3] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/dt[1] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/dt[0] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/N_49_4 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/N_49_3 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), .F0(N_49), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[4] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_49_4 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[5] ));
  SLICE_tb_395 SLICE_tb_395( 
    .D1(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_23 ), 
    .C1(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_22 ), 
    .B1(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_21 ), 
    .A1(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_20 ), 
    .D0(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_29 ), 
    .C0(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_28 ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[0] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/N_208 ), 
    .M1(\u_DPHY_RX_INST/align_data[0] ), .M0(\u_DPHY_RX_INST/align_data[1] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[6] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_29 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[7] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_396 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_396 ( 
    .B1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[0] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/N_208 ), 
    .D0(\genblk4.u_Control_Capture_2Lane/q_wc[0] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_long_pkt_dtct ), 
    .B0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .A0(\genblk4.u_Control_Capture_2Lane/N_1208 ), 
    .M1(\genblk4.u_Control_Capture_2Lane/q_dt_2[1] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_dt_2[0] ), 
    .CE(\genblk4.u_Control_Capture_2Lane/N_178_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_wc[8] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_1208 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_wc[9] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_397 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_397 ( 
    .D1(\genblk4.u_Control_Capture_2Lane/dt[3] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/dt[2] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/dt[1] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/dt[0] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/dt[5] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/N_49_4 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/N_49_3 ), 
    .M1(\genblk4.u_Control_Capture_2Lane/q_dt_2[3] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_dt_2[2] ), 
    .CE(\genblk4.u_Control_Capture_2Lane/N_178_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(N_50), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_wc[10] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/N_49_3 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_wc[11] ));
  SLICE_tb_398 SLICE_tb_398( .B1(\genblk4.u_Control_Capture_2Lane/PH_active[13] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/PH_active[5] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/PH_active[9] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_active[1] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/PH_active_RNIEUUI1[3] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PH_active_ns_0_0_o2[11] ), 
    .M1(\u_DPHY_RX_INST/align_data[4] ), .M0(\u_DPHY_RX_INST/align_data[5] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/N_177_i ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[2] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/PH_active_ns_0_0_o2[11] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[3] ));
  SLICE_tb_399 SLICE_tb_399( .D1(\genblk4.u_Control_Capture_2Lane/q_din1[15] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_din1[14] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_din1[13] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_din1[12] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_19 ), 
    .C0(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_18 ), 
    .B0(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_17 ), 
    .A0(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_16 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[1] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[0] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_28 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[0] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_19 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[1] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_400 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_400 ( 
    .B1(\genblk4.u_Control_Capture_2Lane/q_wc[0] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_long_pkt_dtct ), 
    .D0(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[0] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_wc[1] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/odd_cnt ), 
    .M1(\genblk4.u_Control_Capture_2Lane/q_dt_2[5] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_dt_2[4] ), 
    .CE(\genblk4.u_Control_Capture_2Lane/N_178_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_1[0] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_wc[12] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_wc[13] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_401 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_401 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r22 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r23 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r24 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r21 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r22 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r23 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r24 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_2 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_3 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_g2b_xor_cluster_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_3 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_r2 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_2 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_402 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_402 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w22 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w23 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w24 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w21 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w22 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w23 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w24 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_0 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_1 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_g2b_xor_cluster_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_1 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_w2 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_0 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_403 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_403 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_4 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_4 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r24 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rptr_4 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rcount_4 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_r24 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_4 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_cmp_set ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gcount_4 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_cmp_clr ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_404 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/SLICE_tb_404 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_4 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_4 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w24 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_4 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_4 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gcount_w24 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_0 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wcount_1 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync1 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_cmp_set ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_1 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_cmp_clr ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/wptr_0 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_405 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_405 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r22 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r23 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r24 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r21 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r22 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r23 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r24 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_2 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_3 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_g2b_xor_cluster_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_3 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_r2 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_2 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_406 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_406 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w22 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w23 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w24 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w21 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w22 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w23 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w24 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_0 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_1 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_g2b_xor_cluster_0 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_1 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_w2 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_0 ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_407 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_407 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_4 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_4 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r24 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rptr_4 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rcount_4 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_r24 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_4 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_cmp_set ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gcount_4 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_cmp_clr ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_408 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/SLICE_tb_408 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_4 ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_4 ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w24 ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_4 ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_4 ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gcount_w24 ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_0 ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wcount_1 ), 
    .CE(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wren_i ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/sync0 ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_cmp_set ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_1 ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_cmp_clr ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/wptr_0 ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_409 \u_DPHY_RX_INST/u_aligner/SLICE_tb_409 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[3] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[0] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[6] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[1] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[3] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[0] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[7] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[6] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_15 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[4] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt_2_i_a2_i_0[0] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[5] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_410 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_410 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[3] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[0] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[6] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[1] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[3] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[0] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[7] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[6] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[6] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[5] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_118 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[5] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt_2_i_a2_i_0[0] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[6] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_411 \u_DPHY_RX_INST/u_aligner/SLICE_tb_411 ( 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/Empty ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_0_Q[3] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/Empty ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_0_Q[3] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/rDE_tbn_i ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[2] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/rDE_tbn_i ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[3] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_412 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_412 ( 
    .A1(\genblk4.u_Control_Capture_2Lane/dt[4] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/dt[5] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/dt[4] ), 
    .M1(\genblk4.u_Control_Capture_2Lane/q_dt1[1] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_dt1[0] ), 
    .CE(\genblk4.u_Control_Capture_2Lane/N_960_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\DT_RNI15IB[4] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/dt[0] ), .F1(\dt_i[4] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/dt[1] ));
  SLICE_tb_413 SLICE_tb_413( .D1(\genblk4.u_Control_Capture_2Lane/q_din[6] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_din[2] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_din[1] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_din[0] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/q_din[14] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_din[10] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_din[9] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_din[8] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[7] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_23 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[6] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_22 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[7] ));
  SLICE_tb_414 SLICE_tb_414( .D1(\genblk4.u_Control_Capture_2Lane/q_din[7] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_din[5] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_din[4] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_din[3] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/q_din[15] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_din[13] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_din[12] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_din[11] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_21 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[4] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_20 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[5] ));
  SLICE_tb_415 SLICE_tb_415( .D1(\genblk4.u_Control_Capture_2Lane/q_din1[7] ), 
    .C1(\genblk4.u_Control_Capture_2Lane/q_din1[6] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_din1[5] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_din1[4] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/q_din1[11] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_din1[10] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_din1[9] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_din1[8] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_18 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[2] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un2_offset_out_31_17 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[3] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_416 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_416 ( 
    .C1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[8] ), 
    .B1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[2] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/q_word_cntr[1] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[15] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[11] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[10] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/q_word_cntr[4] ), 
    .M1(\genblk4.u_Control_Capture_2Lane/q_dt1[3] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_dt1[2] ), 
    .CE(\genblk4.u_Control_Capture_2Lane/N_960_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .F0(\genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_8 ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/dt[2] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_7 ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/dt[3] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_417 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_417 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[6] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[5] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[4] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[3] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[1] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[0] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[7] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[0] ), 
    .M0(\u_DPHY_RX_INST/align_data[8] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_16 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[7] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_15 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[0] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_418 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_418 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[6] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[5] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[4] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[3] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[7] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[1] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[0] ), 
    .M1(\u_DPHY_RX_INST/align_data[9] ), .M0(\u_DPHY_RX_INST/align_data[10] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_14 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[5] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_13 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[6] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_419 \u_DPHY_RX_INST/u_aligner/SLICE_tb_419 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[6] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[5] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[4] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[3] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[1] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[0] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[7] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[7] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_16 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[6] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_15 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[7] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_420 \u_DPHY_RX_INST/u_aligner/SLICE_tb_420 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[6] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[5] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[4] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[3] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[2] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[1] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[0] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[7] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_14 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[4] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_13 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[5] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_421 \u_DPHY_RX_INST/u_aligner/SLICE_tb_421 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[6] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[2] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[1] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[0] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[7] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[5] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[4] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in0_0[3] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[7] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[6] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_14 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[6] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync0_13 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[7] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_422 \u_DPHY_RX_INST/u_aligner/SLICE_tb_422 ( 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[6] ), 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[2] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[1] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[0] ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[7] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[5] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[4] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_0[3] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[5] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[4] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_14 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[4] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/un2_sync1_13 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[5] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_423 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_423 ( 
    .B1(\genblk4.u_Control_Capture_2Lane/PH_active[13] ), 
    .A1(\genblk4.u_Control_Capture_2Lane/PH_active[9] ), 
    .D0(\genblk4.u_Control_Capture_2Lane/PH_active[15] ), 
    .C0(\genblk4.u_Control_Capture_2Lane/PH_active[11] ), 
    .B0(\genblk4.u_Control_Capture_2Lane/PH_active[7] ), 
    .A0(\genblk4.u_Control_Capture_2Lane/PH_active[3] ), 
    .M1(\genblk4.u_Control_Capture_2Lane/q_dt1[5] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_dt1[4] ), 
    .CE(\genblk4.u_Control_Capture_2Lane/N_960_i ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), 
    .F0(\genblk4.u_Control_Capture_2Lane/PH_active_RNIEUUI1[3] ), 
    .Q0(\genblk4.u_Control_Capture_2Lane/dt[4] ), 
    .F1(\genblk4.u_Control_Capture_2Lane/un21_i_a2_0_a5_3[3] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/dt[5] ));
  u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_424 
    \u_DPHY_RX_INST/u_aligner/genblk3.wd1/SLICE_tb_424 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[1] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[0] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_140 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[5] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[1] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[0] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[4] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[3] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_116 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[3] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/N_129 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[4] ));
  u_DPHY_RX_INST_u_aligner_SLICE_tb_425 \u_DPHY_RX_INST/u_aligner/SLICE_tb_425 ( 
    .C1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[1] ), 
    .B1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[0] ), 
    .A1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_101 ), 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[5] ), 
    .C0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[2] ), 
    .B0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[1] ), 
    .A0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[0] ), 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[3] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[2] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .F0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_12 ), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[2] ), 
    .F1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/N_36 ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[3] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_431 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_431 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din1[10] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_din1[11] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane.q_din2[11] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane.q_din2[10] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_432 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_432 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din1[12] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_din1[13] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane.q_din2[13] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane.q_din2[12] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_433 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_433 ( 
    .M1(\genblk4.u_Control_Capture_2Lane/q_din1[14] ), 
    .M0(\genblk4.u_Control_Capture_2Lane/q_din1[15] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk4.u_Control_Capture_2Lane.q_din2[15] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane.q_din2[14] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_454 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_454 ( .M1(\byte_D1[2] ), 
    .M0(\byte_D1[3] ), .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_din[11] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din[10] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_455 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_455 ( .M1(\byte_D1[4] ), 
    .M0(\byte_D1[5] ), .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_din[13] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din[12] ));
  genblk4_u_Control_Capture_2Lane_SLICE_tb_456 
    \genblk4.u_Control_Capture_2Lane/SLICE_tb_456 ( .M1(\byte_D1[6] ), 
    .M0(\byte_D1[7] ), .LSR(reset_n_tb_c), .CLK(byte_clk_fr), 
    .Q0(\genblk4.u_Control_Capture_2Lane/q_din[15] ), 
    .Q1(\genblk4.u_Control_Capture_2Lane/q_din[14] ));
  genblk7_u_rgb888_lane2_SLICE_tb_463 \genblk7.u_rgb888_lane2/SLICE_tb_463 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_1[3] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_2[1] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[1] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[19] ));
  genblk7_u_rgb888_lane2_SLICE_tb_464 \genblk7.u_rgb888_lane2/SLICE_tb_464 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_0[7] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_2[3] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[3] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[39] ));
  genblk7_u_rgb888_lane2_SLICE_tb_465 \genblk7.u_rgb888_lane2/SLICE_tb_465 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_2[4] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_2[5] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[5] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[4] ));
  genblk7_u_rgb888_lane2_SLICE_tb_466 \genblk7.u_rgb888_lane2/SLICE_tb_466 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_2[6] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_2[7] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[7] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[6] ));
  genblk7_u_rgb888_lane2_SLICE_tb_467 \genblk7.u_rgb888_lane2/SLICE_tb_467 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_2[8] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_2[9] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[9] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[8] ));
  genblk7_u_rgb888_lane2_SLICE_tb_473 \genblk7.u_rgb888_lane2/SLICE_tb_473 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_1[4] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_1[5] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[21] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[20] ));
  genblk7_u_rgb888_lane2_SLICE_tb_474 \genblk7.u_rgb888_lane2/SLICE_tb_474 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_1[6] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_1[7] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[23] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[22] ));
  genblk7_u_rgb888_lane2_SLICE_tb_475 \genblk7.u_rgb888_lane2/SLICE_tb_475 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_1[8] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_1[9] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[25] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[24] ));
  genblk7_u_rgb888_lane2_SLICE_tb_476 \genblk7.u_rgb888_lane2/SLICE_tb_476 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_1[10] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_1[11] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[27] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[26] ));
  genblk7_u_rgb888_lane2_SLICE_tb_477 \genblk7.u_rgb888_lane2/SLICE_tb_477 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_1[12] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_1[13] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[29] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[28] ));
  genblk7_u_rgb888_lane2_SLICE_tb_483 \genblk7.u_rgb888_lane2/SLICE_tb_483 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_0[8] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_0[9] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[41] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[40] ));
  genblk7_u_rgb888_lane2_SLICE_tb_484 \genblk7.u_rgb888_lane2/SLICE_tb_484 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_0[10] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_0[11] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[43] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[42] ));
  genblk7_u_rgb888_lane2_SLICE_tb_485 \genblk7.u_rgb888_lane2/SLICE_tb_485 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_0[12] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_0[13] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[45] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[44] ));
  genblk7_u_rgb888_lane2_SLICE_tb_486 \genblk7.u_rgb888_lane2/SLICE_tb_486 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_0[14] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_0[15] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_mixed[47] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_mixed[46] ));
  genblk7_u_rgb888_lane2_SLICE_tb_487 \genblk7.u_rgb888_lane2/SLICE_tb_487 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[19] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[1] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[1] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[19] ));
  genblk7_u_rgb888_lane2_SLICE_tb_488 \genblk7.u_rgb888_lane2/SLICE_tb_488 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[39] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[3] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[3] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[39] ));
  genblk7_u_rgb888_lane2_SLICE_tb_489 \genblk7.u_rgb888_lane2/SLICE_tb_489 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[4] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[5] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[5] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[4] ));
  genblk7_u_rgb888_lane2_SLICE_tb_490 \genblk7.u_rgb888_lane2/SLICE_tb_490 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[6] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[7] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[7] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[6] ));
  genblk7_u_rgb888_lane2_SLICE_tb_491 \genblk7.u_rgb888_lane2/SLICE_tb_491 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[8] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[9] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[9] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[8] ));
  genblk7_u_rgb888_lane2_SLICE_tb_497 \genblk7.u_rgb888_lane2/SLICE_tb_497 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[20] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[21] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[21] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[20] ));
  genblk7_u_rgb888_lane2_SLICE_tb_498 \genblk7.u_rgb888_lane2/SLICE_tb_498 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[22] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[23] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[23] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[22] ));
  genblk7_u_rgb888_lane2_SLICE_tb_499 \genblk7.u_rgb888_lane2/SLICE_tb_499 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[24] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[25] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[25] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[24] ));
  genblk7_u_rgb888_lane2_SLICE_tb_500 \genblk7.u_rgb888_lane2/SLICE_tb_500 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[26] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[27] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[27] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[26] ));
  genblk7_u_rgb888_lane2_SLICE_tb_501 \genblk7.u_rgb888_lane2/SLICE_tb_501 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[28] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[29] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[29] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[28] ));
  genblk7_u_rgb888_lane2_SLICE_tb_507 \genblk7.u_rgb888_lane2/SLICE_tb_507 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[40] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[41] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[41] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[40] ));
  genblk7_u_rgb888_lane2_SLICE_tb_508 \genblk7.u_rgb888_lane2/SLICE_tb_508 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[42] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[43] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[43] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[42] ));
  genblk7_u_rgb888_lane2_SLICE_tb_509 \genblk7.u_rgb888_lane2/SLICE_tb_509 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[44] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[45] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[45] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[44] ));
  genblk7_u_rgb888_lane2_SLICE_tb_510 \genblk7.u_rgb888_lane2/SLICE_tb_510 ( 
    .M1(\genblk7.u_rgb888_lane2/q_din_mixed[46] ), 
    .M0(\genblk7.u_rgb888_lane2/q_din_mixed[47] ), .LSR(reset_n_tb_c), 
    .CLK(byte_clk_fr), .Q0(\genblk7.u_rgb888_lane2/q_din_unmixed[47] ), 
    .Q1(\genblk7.u_rgb888_lane2/q_din_unmixed[46] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_558 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_558 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[6] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[7] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[7] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[6] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_559 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_559 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[0] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[1] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[1] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[0] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_560 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_560 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[2] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[3] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[3] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[2] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_561 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_561 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[4] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[5] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[5] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[4] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_562 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_562 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[6] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[7] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[7] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[6] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_563 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_563 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[0] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[1] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[1] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[0] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_564 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_564 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[2] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[3] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[3] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[2] ));
  u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_565 
    \u_DPHY_RX_INST/u_aligner/genblk4.wd0/SLICE_tb_565 ( 
    .M1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[4] ), 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[5] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[5] ), 
    .Q1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[4] ));
  u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_614 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/SLICE_tb_614 ( 
    .M0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_1[1] ), 
    .LSR(\u_DPHY_RX_INST/u_aligner/en_align_i ), .CLK(byte_clk_fr), 
    .Q0(\u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_in1_2[1] ));
  LP0_1_tbtbtbtbtb \LP0[0]_I ( .PADDI(\LP0_in[0] ), .PADDT(un1_LP1), .PADDO(gnd_tb), 
    .LP00(LP0[0]));
  LP0_1_tbtbtb \LPCLK[0]_I ( .PADDT(un1_LP1), .PADDO(gnd_tb), .LPCLK0(LPCLK[0]));
  PIXCLK_adj PIXCLK_adj_I( .PADDO(PIXCLK_adj_c), .PIXCLK_adj(PIXCLK_adj));
  reset_n_tb reset_n_tb_I( .PADDI(reset_n_tb_c), .reset_n_tb(reset_n));
  D1_tb D1_I( .PADDI(\u_DPHY_RX_INST/u_iDDRx4/buf_dataini1 ), .D1(D1));
  D1_MGIOL_tb D1_MGIOL( .PADDI(D1_MGIOL_INT), 
    .INDD(\u_DPHY_RX_INST/u_iDDRx4/dataini_t1 ), 
    .DI(\u_DPHY_RX_INST/u_iDDRx4/dataini_t1 ), .LSR(reset_n_tb_c), .CLK(byte_clk), 
    .ECLK(\u_DPHY_RX_INST/u_iDDRx4/eclko ), .RXDA0(\u_DPHY_RX_INST/data[8] ), 
    .RXDA1(\u_DPHY_RX_INST/data[9] ), .RXDA2(\u_DPHY_RX_INST/data[10] ), 
    .RXDA3(\u_DPHY_RX_INST/data[11] ), .RXDA4(\u_DPHY_RX_INST/data[12] ), 
    .RXDA5(\u_DPHY_RX_INST/data[13] ), .RXDA6(\u_DPHY_RX_INST/data[14] ), 
    .RXDA7(\u_DPHY_RX_INST/data[15] ));
  DELAYD DLY_D1_MGIOL( .A(\u_DPHY_RX_INST/u_iDDRx4/buf_dataini1 ), .DEL0(gnd_tbI), 
    .DEL1(vcc_tbI), .DEL2(vcc_tbI), .DEL3(gnd_tbI), .DEL4(gnd_tbI), .Z(D1_MGIOL_INT));
  VLO VLO_INST( .Z(gnd_tbI));
  VHI VHI_INST( .Z(vcc_tbI));
  D0_tb D0_I( .PADDI(\u_DPHY_RX_INST/u_iDDRx4/buf_dataini0 ), .D0(D0));
  D0_MGIOL_tb D0_MGIOL( .PADDI(D0_MGIOL_INT), 
    .INDD(\u_DPHY_RX_INST/u_iDDRx4/dataini_t0 ), 
    .DI(\u_DPHY_RX_INST/u_iDDRx4/dataini_t0 ), .LSR(reset_n_tb_c), .CLK(byte_clk), 
    .ECLK(\u_DPHY_RX_INST/u_iDDRx4/eclko ), .RXDA0(\u_DPHY_RX_INST/data[0] ), 
    .RXDA1(\u_DPHY_RX_INST/data[1] ), .RXDA2(\u_DPHY_RX_INST/data[2] ), 
    .RXDA3(\u_DPHY_RX_INST/data[3] ), .RXDA4(\u_DPHY_RX_INST/data[4] ), 
    .RXDA5(\u_DPHY_RX_INST/data[5] ), .RXDA6(\u_DPHY_RX_INST/data[6] ), 
    .RXDA7(\u_DPHY_RX_INST/data[7] ));
  DELAYD DLY_D0_MGIOL( .A(\u_DPHY_RX_INST/u_iDDRx4/buf_dataini0 ), .DEL0(gnd_tbI), 
    .DEL1(vcc_tbI), .DEL2(vcc_tbI), .DEL3(gnd_tbI), .DEL4(gnd_tbI), .Z(D0_MGIOL_INT));
  HSYNC_tb HSYNC_tb_I( .IOLDO(HSYNC_tb_c), .HSYNC_tb(HSYNC));
  HSYNC_tb_MGIOL HSYNC_tb_MGIOL( .IOLDO(HSYNC_tb_c), .OPOS(\DT_RNI15IB[4] ), .CE(N_49), 
    .LSR(reset_n_tb_c), .CLK(byte_clk_fr));
  VSYNC_tb VSYNC_tb_I( .IOLDO(VSYNC_tb_c), .VSYNC_tb(VSYNC));
  VSYNC_tb_MGIOL VSYNC_tb_MGIOL( .IOLDO(VSYNC_tb_c), .OPOS(\dt_i[4] ), .CE(N_50), 
    .LSR(reset_n_tb_c), .CLK(byte_clk_fr));
  DE_tb DE_tb_I( .IOLDO(DE_tb_c), .DE_tb(DE));
  DE_tb_MGIOL DE_tb_MGIOL( .IOLDO(DE_tb_c), .OPOS(w_DE_tb), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_23_ \PIXDATA_tb[23]_I ( .IOLDO(\PIXDATA_tb_c[23] ), 
    .PIXDATA_tb23(PIXDATA[23]));
  PIXDATA_tb_23__MGIOL \PIXDATA_tb[23]_MGIOL ( .IOLDO(\PIXDATA_tb_c[23] ), 
    .OPOS(\w_PIXDATA_tb[23] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_22_ \PIXDATA_tb[22]_I ( .IOLDO(\PIXDATA_tb_c[22] ), 
    .PIXDATA_tb22(PIXDATA[22]));
  PIXDATA_tb_22__MGIOL \PIXDATA_tb[22]_MGIOL ( .IOLDO(\PIXDATA_tb_c[22] ), 
    .OPOS(\w_PIXDATA_tb[22] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_21_ \PIXDATA_tb[21]_I ( .IOLDO(\PIXDATA_tb_c[21] ), 
    .PIXDATA_tb21(PIXDATA[21]));
  PIXDATA_tb_21__MGIOL \PIXDATA_tb[21]_MGIOL ( .IOLDO(\PIXDATA_tb_c[21] ), 
    .OPOS(\w_PIXDATA_tb[21] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_20_ \PIXDATA_tb[20]_I ( .IOLDO(\PIXDATA_tb_c[20] ), 
    .PIXDATA_tb20(PIXDATA[20]));
  PIXDATA_tb_20__MGIOL \PIXDATA_tb[20]_MGIOL ( .IOLDO(\PIXDATA_tb_c[20] ), 
    .OPOS(\w_PIXDATA_tb[20] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_19_ \PIXDATA_tb[19]_I ( .IOLDO(\PIXDATA_tb_c[19] ), 
    .PIXDATA_tb19(PIXDATA[19]));
  PIXDATA_tb_19__MGIOL \PIXDATA_tb[19]_MGIOL ( .IOLDO(\PIXDATA_tb_c[19] ), 
    .OPOS(\w_PIXDATA_tb[19] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_18_ \PIXDATA_tb[18]_I ( .IOLDO(\PIXDATA_tb_c[18] ), 
    .PIXDATA_tb18(PIXDATA[18]));
  PIXDATA_tb_18__MGIOL \PIXDATA_tb[18]_MGIOL ( .IOLDO(\PIXDATA_tb_c[18] ), 
    .OPOS(\w_PIXDATA_tb[18] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_17_ \PIXDATA_tb[17]_I ( .IOLDO(\PIXDATA_tb_c[17] ), 
    .PIXDATA_tb17(PIXDATA[17]));
  PIXDATA_tb_17__MGIOL \PIXDATA_tb[17]_MGIOL ( .IOLDO(\PIXDATA_tb_c[17] ), 
    .OPOS(\w_PIXDATA_tb[17] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_16_ \PIXDATA_tb[16]_I ( .IOLDO(\PIXDATA_tb_c[16] ), 
    .PIXDATA_tb16(PIXDATA[16]));
  PIXDATA_tb_16__MGIOL \PIXDATA_tb[16]_MGIOL ( .IOLDO(\PIXDATA_tb_c[16] ), 
    .OPOS(\w_PIXDATA_tb[16] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_15_ \PIXDATA_tb[15]_I ( .IOLDO(\PIXDATA_tb_c[15] ), 
    .PIXDATA_tb15(PIXDATA[15]));
  PIXDATA_tb_15__MGIOL \PIXDATA_tb[15]_MGIOL ( .IOLDO(\PIXDATA_tb_c[15] ), 
    .OPOS(\w_PIXDATA_tb[15] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_14_ \PIXDATA_tb[14]_I ( .IOLDO(\PIXDATA_tb_c[14] ), 
    .PIXDATA_tb14(PIXDATA[14]));
  PIXDATA_tb_14__MGIOL \PIXDATA_tb[14]_MGIOL ( .IOLDO(\PIXDATA_tb_c[14] ), 
    .OPOS(\w_PIXDATA_tb[14] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_13_ \PIXDATA_tb[13]_I ( .IOLDO(\PIXDATA_tb_c[13] ), 
    .PIXDATA_tb13(PIXDATA[13]));
  PIXDATA_tb_13__MGIOL \PIXDATA_tb[13]_MGIOL ( .IOLDO(\PIXDATA_tb_c[13] ), 
    .OPOS(\w_PIXDATA_tb[13] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_12_ \PIXDATA_tb[12]_I ( .IOLDO(\PIXDATA_tb_c[12] ), 
    .PIXDATA_tb12(PIXDATA[12]));
  PIXDATA_tb_12__MGIOL \PIXDATA_tb[12]_MGIOL ( .IOLDO(\PIXDATA_tb_c[12] ), 
    .OPOS(\w_PIXDATA_tb[12] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_11_ \PIXDATA_tb[11]_I ( .IOLDO(\PIXDATA_tb_c[11] ), 
    .PIXDATA_tb11(PIXDATA[11]));
  PIXDATA_tb_11__MGIOL \PIXDATA_tb[11]_MGIOL ( .IOLDO(\PIXDATA_tb_c[11] ), 
    .OPOS(\w_PIXDATA_tb[11] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_10_ \PIXDATA_tb[10]_I ( .IOLDO(\PIXDATA_tb_c[10] ), 
    .PIXDATA_tb10(PIXDATA[10]));
  PIXDATA_tb_10__MGIOL \PIXDATA_tb[10]_MGIOL ( .IOLDO(\PIXDATA_tb_c[10] ), 
    .OPOS(\w_PIXDATA_tb[10] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_9_ \PIXDATA_tb[9]_I ( .IOLDO(\PIXDATA_tb_c[9] ), .PIXDATA_tb9(PIXDATA[9]));
  PIXDATA_tb_9__MGIOL \PIXDATA_tb[9]_MGIOL ( .IOLDO(\PIXDATA_tb_c[9] ), 
    .OPOS(\w_PIXDATA_tb[9] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_8_ \PIXDATA_tb[8]_I ( .IOLDO(\PIXDATA_tb_c[8] ), .PIXDATA_tb8(PIXDATA[8]));
  PIXDATA_tb_8__MGIOL \PIXDATA_tb[8]_MGIOL ( .IOLDO(\PIXDATA_tb_c[8] ), 
    .OPOS(\w_PIXDATA_tb[8] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_7_ \PIXDATA_tb[7]_I ( .IOLDO(\PIXDATA_tb_c[7] ), .PIXDATA_tb7(PIXDATA[7]));
  PIXDATA_tb_7__MGIOL \PIXDATA_tb[7]_MGIOL ( .IOLDO(\PIXDATA_tb_c[7] ), 
    .OPOS(\w_PIXDATA_tb[7] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_6_ \PIXDATA_tb[6]_I ( .IOLDO(\PIXDATA_tb_c[6] ), .PIXDATA_tb6(PIXDATA[6]));
  PIXDATA_tb_6__MGIOL \PIXDATA_tb[6]_MGIOL ( .IOLDO(\PIXDATA_tb_c[6] ), 
    .OPOS(\w_PIXDATA_tb[6] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_5_ \PIXDATA_tb[5]_I ( .IOLDO(\PIXDATA_tb_c[5] ), .PIXDATA_tb5(PIXDATA[5]));
  PIXDATA_tb_5__MGIOL \PIXDATA_tb[5]_MGIOL ( .IOLDO(\PIXDATA_tb_c[5] ), 
    .OPOS(\w_PIXDATA_tb[5] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_4_ \PIXDATA_tb[4]_I ( .IOLDO(\PIXDATA_tb_c[4] ), .PIXDATA_tb4(PIXDATA[4]));
  PIXDATA_tb_4__MGIOL \PIXDATA_tb[4]_MGIOL ( .IOLDO(\PIXDATA_tb_c[4] ), 
    .OPOS(\w_PIXDATA_tb[4] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_3_ \PIXDATA_tb[3]_I ( .IOLDO(\PIXDATA_tb_c[3] ), .PIXDATA_tb3(PIXDATA[3]));
  PIXDATA_tb_3__MGIOL \PIXDATA_tb[3]_MGIOL ( .IOLDO(\PIXDATA_tb_c[3] ), 
    .OPOS(\w_PIXDATA_tb[3] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_2_ \PIXDATA_tb[2]_I ( .IOLDO(\PIXDATA_tb_c[2] ), .PIXDATA_tb2(PIXDATA[2]));
  PIXDATA_tb_2__MGIOL \PIXDATA_tb[2]_MGIOL ( .IOLDO(\PIXDATA_tb_c[2] ), 
    .OPOS(\w_PIXDATA_tb[2] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_1_ \PIXDATA_tb[1]_I ( .IOLDO(\PIXDATA_tb_c[1] ), .PIXDATA_tb1(PIXDATA[1]));
  PIXDATA_tb_1__MGIOL \PIXDATA_tb[1]_MGIOL ( .IOLDO(\PIXDATA_tb_c[1] ), 
    .OPOS(\w_PIXDATA_tb[1] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  PIXDATA_tb_0_ \PIXDATA_tb[0]_I ( .IOLDO(\PIXDATA_tb_c[0] ), .PIXDATA_tb0(PIXDATA[0]));
  PIXDATA_tb_0__MGIOL \PIXDATA_tb[0]_MGIOL ( .IOLDO(\PIXDATA_tb_c[0] ), 
    .OPOS(\w_PIXDATA_tb[0] ), .LSR(reset_n_tb_c), .CLK(pixclk));
  LP0_1_tb \LP0[1]_I ( .PADDI(\LP0_in[1] ), .PADDT(un1_LP1), .PADDO(gnd_tb), 
    .LP01(LP0[1]));
  LP1_1_tb \LP1[1]_I ( .PADDT(un1_LP1), .PADDO(gnd_tb), .LP11(LP1[1]));
  LP1_0_tb \LP1[0]_I ( .PADDT(un1_LP1), .PADDO(gnd_tb), .LP10(LP1[0]));
  LPCLK_1_tb \LPCLK[1]_I ( .PADDT(un1_LP1), .PADDO(gnd_tb), .LPCLK1(LPCLK[1]));
  DCK_tb DCK_I( .PADDI(DCK_c), .DCK(DCK));
  u_DPHY_RX_INST_u_byte_clk_fifo_byte_clk_fifo_0_1 
    \u_DPHY_RX_INST/u_byte_clk_fifo/byte_clk_fifo_0_1 ( 
    .DIA8(\u_DPHY_RX_INST/data[8] ), .DIA7(\u_DPHY_RX_INST/data[7] ), 
    .DIA6(\u_DPHY_RX_INST/data[6] ), .DIA5(\u_DPHY_RX_INST/data[5] ), 
    .DIA4(\u_DPHY_RX_INST/data[4] ), .DIA3(\u_DPHY_RX_INST/data[3] ), 
    .DIA2(\u_DPHY_RX_INST/data[2] ), .DIA1(\u_DPHY_RX_INST/data[1] ), 
    .DIA0(\u_DPHY_RX_INST/data[0] ), .DOA8(\u_DPHY_RX_INST/align_data[8] ), 
    .DOA7(\u_DPHY_RX_INST/align_data[7] ), 
    .DOA6(\u_DPHY_RX_INST/align_data[6] ), 
    .DOA5(\u_DPHY_RX_INST/align_data[5] ), 
    .DOA4(\u_DPHY_RX_INST/align_data[4] ), 
    .DOA3(\u_DPHY_RX_INST/align_data[3] ), 
    .DOA2(\u_DPHY_RX_INST/align_data[2] ), 
    .DOA1(\u_DPHY_RX_INST/align_data[1] ), 
    .DOA0(\u_DPHY_RX_INST/align_data[0] ), .RSTA(reset_n_tb_c), .CLKA(byte_clk), 
    .CSA2(\u_DPHY_RX_INST/u_byte_clk_fifo/Full ), 
    .FF(\u_DPHY_RX_INST/u_byte_clk_fifo/Full ), 
    .EF(\u_DPHY_RX_INST/u_byte_clk_fifo/Empty ), 
    .CSB2(\u_DPHY_RX_INST/u_byte_clk_fifo/Empty ), .CLKB(byte_clk_fr), 
    .RSTB(reset_n_tb_c), .DOB0(\u_DPHY_RX_INST/align_data[9] ), 
    .DOB1(\u_DPHY_RX_INST/align_data[10] ), 
    .DOB2(\u_DPHY_RX_INST/align_data[11] ), 
    .DOB3(\u_DPHY_RX_INST/align_data[12] ), 
    .DOB4(\u_DPHY_RX_INST/align_data[13] ), 
    .DOB5(\u_DPHY_RX_INST/align_data[14] ), 
    .DOB6(\u_DPHY_RX_INST/align_data[15] ), .DIB0(\u_DPHY_RX_INST/data[9] ), 
    .DIB1(\u_DPHY_RX_INST/data[10] ), .DIB2(\u_DPHY_RX_INST/data[11] ), 
    .DIB3(\u_DPHY_RX_INST/data[12] ), .DIB4(\u_DPHY_RX_INST/data[13] ), 
    .DIB5(\u_DPHY_RX_INST/data[14] ), .DIB6(\u_DPHY_RX_INST/data[15] ));
  u_DPHY_RX_INST_u_iDDRx4_Inst3_CLKDIVC 
    \u_DPHY_RX_INST/u_iDDRx4/Inst3_CLKDIVC ( 
    .CLKI(\u_DPHY_RX_INST/u_iDDRx4/eclko ), .RST(reset_n_tb_c_i), 
    .CDIVX(byte_clk));
  u_DPHY_RX_INST_u_iDDRx4_Inst2_ECLKSYNCA 
    \u_DPHY_RX_INST/u_iDDRx4/Inst2_ECLKSYNCA ( .ECLKI(DCK_c), 
    .STOP(\u_DPHY_RX_INST/u_iDDRx4/xstop ), 
    .ECLKO(\u_DPHY_RX_INST/u_iDDRx4/eclko ));
  genblk7_u_rgb888_lane2_u_RGB888_lane2_fifo_rgb888_lane2_fifo_0_2 
    \genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/rgb888_lane2_fifo_0_2 ( 
    .DIA8(\genblk7.u_rgb888_lane2/q_din_unmixed[8] ), 
    .DIA7(\genblk7.u_rgb888_lane2/q_din_unmixed[7] ), 
    .DIA6(\genblk7.u_rgb888_lane2/q_din_unmixed[6] ), 
    .DIA5(\genblk7.u_rgb888_lane2/q_din_unmixed[5] ), 
    .DIA4(\genblk7.u_rgb888_lane2/q_din_unmixed[4] ), 
    .DIA3(\genblk7.u_rgb888_lane2/q_din_unmixed[3] ), 
    .DIA2(\genblk7.u_rgb888_lane2/q_din_unmixed[2] ), 
    .DIA1(\genblk7.u_rgb888_lane2/q_din_unmixed[1] ), 
    .DIA0(\genblk7.u_rgb888_lane2/q_din_unmixed[0] ), 
    .CEA(\genblk7.u_rgb888_lane2/q_unmixed_data_rdy ), .RSTA(reset_n_tb_c), 
    .CLKA(byte_clk_fr), 
    .CSA2(\genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/Full ), 
    .FF(\genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/Full ), 
    .EF(\genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/w_lv_n ), 
    .CSB2(\genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/w_lv_n ), .CLKB(pixclk), 
    .RSTB(reset_n_tb_c), .DOB0(\w_PIXDATA_tb[16] ), .DOB1(\w_PIXDATA_tb[17] ), 
    .DOB2(\w_PIXDATA_tb[18] ), .DOB3(\w_PIXDATA_tb[19] ), .DOB4(\w_PIXDATA_tb[20] ), 
    .DOB5(\w_PIXDATA_tb[21] ), .DOB6(\w_PIXDATA_tb[22] ), .DOB7(\w_PIXDATA_tb[23] ), 
    .DOB8(\w_PIXDATA_tb[8] ), .DIB0(\genblk7.u_rgb888_lane2/q_din_unmixed[24] ), 
    .DIB1(\genblk7.u_rgb888_lane2/q_din_unmixed[25] ), 
    .DIB2(\genblk7.u_rgb888_lane2/q_din_unmixed[26] ), 
    .DIB3(\genblk7.u_rgb888_lane2/q_din_unmixed[27] ), 
    .DIB4(\genblk7.u_rgb888_lane2/q_din_unmixed[28] ), 
    .DIB5(\genblk7.u_rgb888_lane2/q_din_unmixed[29] ), 
    .DIB6(\genblk7.u_rgb888_lane2/q_din_unmixed[30] ), 
    .DIB7(\genblk7.u_rgb888_lane2/q_din_unmixed[31] ), 
    .DIB8(\genblk7.u_rgb888_lane2/q_din_unmixed[32] ));
  genblk7_u_rgb888_lane2_u_RGB888_lane2_fifo_rgb888_lane2_fifo_2_0 
    \genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/rgb888_lane2_fifo_2_0 ( 
    .DIA5(\genblk7.u_rgb888_lane2/q_din_unmixed[23] ), 
    .DIA4(\genblk7.u_rgb888_lane2/q_din_unmixed[22] ), 
    .DIA3(\genblk7.u_rgb888_lane2/q_din_unmixed[21] ), 
    .DIA2(\genblk7.u_rgb888_lane2/q_din_unmixed[20] ), 
    .DIA1(\genblk7.u_rgb888_lane2/q_din_unmixed[19] ), 
    .DIA0(\genblk7.u_rgb888_lane2/q_din_unmixed[18] ), 
    .CEA(\genblk7.u_rgb888_lane2/q_unmixed_data_rdy ), .RSTA(reset_n_tb_c), 
    .CLKA(byte_clk_fr), 
    .CSA2(\genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/Full ), 
    .CSB2(\genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/w_lv_n ), .CLKB(pixclk), 
    .RSTB(reset_n_tb_c), .DOB0(\w_PIXDATA_tb[2] ), .DOB1(\w_PIXDATA_tb[3] ), 
    .DOB2(\w_PIXDATA_tb[4] ), .DOB3(\w_PIXDATA_tb[5] ), .DOB4(\w_PIXDATA_tb[6] ), 
    .DOB5(\w_PIXDATA_tb[7] ), .DIB0(\genblk7.u_rgb888_lane2/q_din_unmixed[42] ), 
    .DIB1(\genblk7.u_rgb888_lane2/q_din_unmixed[43] ), 
    .DIB2(\genblk7.u_rgb888_lane2/q_din_unmixed[44] ), 
    .DIB3(\genblk7.u_rgb888_lane2/q_din_unmixed[45] ), 
    .DIB4(\genblk7.u_rgb888_lane2/q_din_unmixed[46] ), 
    .DIB5(\genblk7.u_rgb888_lane2/q_din_unmixed[47] ));
  genblk7_u_rgb888_lane2_u_RGB888_lane2_fifo_rgb888_lane2_fifo_1_1 
    \genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/rgb888_lane2_fifo_1_1 ( 
    .DIA8(\genblk7.u_rgb888_lane2/q_din_unmixed[17] ), 
    .DIA7(\genblk7.u_rgb888_lane2/q_din_unmixed[16] ), 
    .DIA6(\genblk7.u_rgb888_lane2/q_din_unmixed[15] ), 
    .DIA5(\genblk7.u_rgb888_lane2/q_din_unmixed[14] ), 
    .DIA4(\genblk7.u_rgb888_lane2/q_din_unmixed[13] ), 
    .DIA3(\genblk7.u_rgb888_lane2/q_din_unmixed[12] ), 
    .DIA2(\genblk7.u_rgb888_lane2/q_din_unmixed[11] ), 
    .DIA1(\genblk7.u_rgb888_lane2/q_din_unmixed[10] ), 
    .DIA0(\genblk7.u_rgb888_lane2/q_din_unmixed[9] ), 
    .CEA(\genblk7.u_rgb888_lane2/q_unmixed_data_rdy ), .RSTA(reset_n_tb_c), 
    .CLKA(byte_clk_fr), 
    .CSA2(\genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/Full ), 
    .CSB2(\genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/w_lv_n ), .CLKB(pixclk), 
    .RSTB(reset_n_tb_c), .DOB0(\w_PIXDATA_tb[9] ), .DOB1(\w_PIXDATA_tb[10] ), 
    .DOB2(\w_PIXDATA_tb[11] ), .DOB3(\w_PIXDATA_tb[12] ), .DOB4(\w_PIXDATA_tb[13] ), 
    .DOB5(\w_PIXDATA_tb[14] ), .DOB6(\w_PIXDATA_tb[15] ), .DOB7(\w_PIXDATA_tb[0] ), 
    .DOB8(\w_PIXDATA_tb[1] ), .DIB0(\genblk7.u_rgb888_lane2/q_din_unmixed[33] ), 
    .DIB1(\genblk7.u_rgb888_lane2/q_din_unmixed[34] ), 
    .DIB2(\genblk7.u_rgb888_lane2/q_din_unmixed[35] ), 
    .DIB3(\genblk7.u_rgb888_lane2/q_din_unmixed[36] ), 
    .DIB4(\genblk7.u_rgb888_lane2/q_din_unmixed[37] ), 
    .DIB5(\genblk7.u_rgb888_lane2/q_din_unmixed[38] ), 
    .DIB6(\genblk7.u_rgb888_lane2/q_din_unmixed[39] ), 
    .DIB7(\genblk7.u_rgb888_lane2/q_din_unmixed[40] ), 
    .DIB8(\genblk7.u_rgb888_lane2/q_din_unmixed[41] ));
  genblk2_pll_PLLInst_0 \genblk2.pll/PLLInst_0 ( .CLKI(byte_clk), 
    .CLKFB(pixclk), .RST(reset_n_tb_c_i), .CLKOS2(byte_clk_fr), 
    .CLKOS(PIXCLK_adj_c), .CLKOP(pixclk));
  PUR PUR_INST( .PUR(vcc_tbI));
  GSR GSR_INST( .GSR(vcc_tbI));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_0 ( input M1, M0, 
    LSR, CLK, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_33 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_32 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gctr_cia ( 
    .A0(gnd_tbI), .A1(vcc_tbI), .B0(gnd_tbI), .B1(vcc_tbI), .CI(), .S0(), .S1(), .CO1(FCO));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre_tb ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc_tb ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module gnd_tb ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module inverter_tb ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module alu2_mult_tb ( input A0, A1, B0, B1, CI, output S0, S1, CO1 );

  FADD2B INST01( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(CI), .COUT(CO1), 
    .S0(S0), .S1(S1));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_1 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_70 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb0001 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_71 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0002 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gctr_0 ( 
    .A0(A0), .A1(A1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre_tb0001 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module alu2_mult_tb0002 ( input A0, A1, CI, output S0, S1, CO1 );

  CU2 INST01( .CI(CI), .PC0(A0), .PC1(A1), .CO(CO1), .NC0(S0), .NC1(S1));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_2 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_68 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_69 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0002 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gctr_1 ( 
    .A0(A0), .A1(A1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_3 ( input A0, 
    DI0, M1, CE, LSR, CLK, FCI, output F0, Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, DI0_dly, CLK_dly, M1_dly, CE_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_57 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_67 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0002 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/w_gctr_2 ( 
    .A0(A0), .A1(gnd_tbI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_4 ( input M1, M0, 
    LSR, CLK, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_31 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_30 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gctr_cia ( 
    .A0(gnd_tbI), .A1(vcc_tbI), .B0(gnd_tbI), .B1(vcc_tbI), .CI(), .S0(), .S1(), .CO1(FCO));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_5 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_55 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb0001 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_56 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0002 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gctr_0 ( 
    .A0(A0), .A1(A1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_6 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_53 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_54 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0002 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gctr_1 ( 
    .A0(A0), .A1(A1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_7 ( input A0, 
    DI0, M1, CE, LSR, CLK, FCI, output F0, Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, DI0_dly, CLK_dly, M1_dly, CE_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_42 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_52 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0002 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/r_gctr_2 ( 
    .A0(A0), .A1(gnd_tbI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_8 ( input B1, A1, 
    M1, M0, LSR, CLK, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_21 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_20 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_cmp_ci_a 
    ( .A0(gnd_tbI), .A1(A1), .B0(gnd_tbI), .B1(B1), .CI(), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_9 ( input DI0, 
    LSR, CLK, FCI, output F0, Q0 );
  wire   vcc_tbI, LSR_NOTIN, gnd_tbI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre_tb0001 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_13 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  alu2_mult_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/a0 ( .A0(gnd_tbI), 
    .A1(gnd_tbI), .B0(gnd_tbI), .B1(gnd_tbI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_10 ( input B1, 
    A1, M1, M0, LSR, CLK, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_29 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_28 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_cmp_ci_a ( 
    .A0(gnd_tbI), .A1(A1), .B0(gnd_tbI), .B1(B1), .CI(), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_11 ( input DI0, 
    LSR, CLK, FCI, output F0, Q0 );
  wire   vcc_tbI, LSR_NOTIN, gnd_tbI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_12 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  alu2_mult_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/a1 ( .A0(gnd_tbI), 
    .A1(gnd_tbI), .B0(gnd_tbI), .B1(gnd_tbI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_12 ( input B0, 
    A0, M1, M0, LSR, CLK, FCI, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_27 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_26 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0003 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_cmp_2 
    ( .A0(A0), .A1(gnd_tbI), .B0(B0), .B1(gnd_tbI), .CI(FCI), .CO1(FCO));

  specify
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module alu2_mult_tb0003 ( input A0, A1, B0, B1, CI, output CO1 );

  AGEB2 INST01( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(CI), .GE(CO1));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_13 ( input B1, 
    A1, B0, A0, M1, M0, LSR, CLK, FCI, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_25 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_24 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0003 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_cmp_1 
    ( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_14 ( input B1, 
    A1, B0, A0, M1, M0, LSR, CLK, FCI, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_23 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_22 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0003 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/full_cmp_0 
    ( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_15 ( input B0, 
    A0, M1, M0, LSR, CLK, FCI, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_19 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_18 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0003 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_cmp_2 
    ( .A0(A0), .A1(gnd_tbI), .B0(B0), .B1(gnd_tbI), .CI(FCI), .CO1(FCO));

  specify
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_16 ( input B1, 
    A1, B0, A0, M1, M0, LSR, CLK, FCI, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_17 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_16 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0003 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_cmp_1 
    ( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_17 ( input B1, 
    A1, B0, A0, M1, M0, LSR, CLK, FCI, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_15 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_14 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0003 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/empty_cmp_0 
    ( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_18 ( input A0, 
    DI0, M1, CE, LSR, CLK, FCI, output F0, Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, DI0_dly, CLK_dly, M1_dly, CE_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_42 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_52 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0002 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gctr_2 ( 
    .A0(A0), .A1(gnd_tbI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_19 ( input DI0, 
    LSR, CLK, FCI, output F0, Q0 );
  wire   vcc_tbI, LSR_NOTIN, gnd_tbI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_12 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  alu2_mult_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/a1 ( .A0(gnd_tbI), 
    .A1(gnd_tbI), .B0(gnd_tbI), .B1(gnd_tbI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_20 ( input B1, A1, 
    B0, A0, M1, M0, LSR, CLK, FCI, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_15 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_14 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0003 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_cmp_0 
    ( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_21 ( input M1, M0, 
    LSR, CLK, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_33 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_32 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gctr_cia ( 
    .A0(gnd_tbI), .A1(vcc_tbI), .B0(gnd_tbI), .B1(vcc_tbI), .CI(), .S0(), .S1(), .CO1(FCO));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_22 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_70 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb0001 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_71 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0002 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gctr_0 ( 
    .A0(A0), .A1(A1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_23 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_68 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_69 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0002 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gctr_1 ( 
    .A0(A0), .A1(A1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_24 ( input A0, 
    DI0, M1, CE, LSR, CLK, FCI, output F0, Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, DI0_dly, CLK_dly, M1_dly, CE_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_57 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_67 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0002 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/w_gctr_2 ( 
    .A0(A0), .A1(gnd_tbI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_25 ( input M1, M0, 
    LSR, CLK, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_31 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_30 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gctr_cia ( 
    .A0(gnd_tbI), .A1(vcc_tbI), .B0(gnd_tbI), .B1(vcc_tbI), .CI(), .S0(), .S1(), .CO1(FCO));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_26 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_55 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb0001 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_56 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0002 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gctr_0 ( 
    .A0(A0), .A1(A1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_27 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_53 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_54 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0002 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/r_gctr_1 ( 
    .A0(A0), .A1(A1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_28 ( input B1, A1, 
    M1, M0, LSR, CLK, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_21 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_20 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_cmp_ci_a ( 
    .A0(gnd_tbI), .A1(A1), .B0(gnd_tbI), .B1(B1), .CI(), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_29 ( input DI0, 
    LSR, CLK, FCI, output F0, Q0 );
  wire   vcc_tbI, LSR_NOTIN, gnd_tbI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre_tb0001 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_13 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  alu2_mult_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/a0 ( .A0(gnd_tbI), 
    .A1(gnd_tbI), .B0(gnd_tbI), .B1(gnd_tbI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_30 ( input B1, A1, 
    M1, M0, LSR, CLK, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_29 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_28 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_cmp_ci_a ( 
    .A0(gnd_tbI), .A1(A1), .B0(gnd_tbI), .B1(B1), .CI(), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_31 ( input B0, A0, 
    M1, M0, LSR, CLK, FCI, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_27 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_26 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0003 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_cmp_2 ( 
    .A0(A0), .A1(gnd_tbI), .B0(B0), .B1(gnd_tbI), .CI(FCI), .CO1(FCO));

  specify
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_32 ( input B1, A1, 
    B0, A0, M1, M0, LSR, CLK, FCI, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_25 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_24 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0003 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_cmp_1 ( 
    .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_33 ( input B1, A1, 
    B0, A0, M1, M0, LSR, CLK, FCI, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_23 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_22 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0003 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/full_cmp_0 ( 
    .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_34 ( input B0, A0, 
    M1, M0, LSR, CLK, FCI, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_19 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_18 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0003 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_cmp_2 
    ( .A0(A0), .A1(gnd_tbI), .B0(B0), .B1(gnd_tbI), .CI(FCI), .CO1(FCO));

  specify
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_35 ( input B1, A1, 
    B0, A0, M1, M0, LSR, CLK, FCI, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_17 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_16 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  alu2_mult_tb0003 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/empty_cmp_1 
    ( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_tb_36 ( input D1, C1, B1, A1, M1, M0, LSR, CLK, output Q0, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[3] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[2] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2_tb \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_0_0 ( .A0(gnd_tbI), 
    .B0(gnd_tbI), .C0(gnd_tbI), .D0(gnd_tbI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), 
    .CI(gnd_tbI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu2_tb ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h1B0F;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module SLICE_tb_37 ( input C0, B0, A0, M1, M0, LSR, CLK, FCI, output F0, Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[3] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[2] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2_tb0004 \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_s_15_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(gnd_tbI), .A1(gnd_tbI), .B1(gnd_tbI), .C1(gnd_tbI), .D1(gnd_tbI), 
    .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu2_tb0004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5051;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_tb_38 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[7] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[6] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2_tb0005 \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_13_0 ( 
    .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu2_tb0005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h4F0B;
  defparam inst1.INIT1 = 16'h4F0B;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_tb_39 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[5] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[4] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2_tb0005 \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_11_0 ( 
    .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_tb_40 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[0] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2_tb0005 \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_9_0 ( 
    .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_tb_41 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[7] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[6] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2_tb0005 \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_7_0 ( 
    .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_tb_42 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[5] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[4] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2_tb0005 \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_5_0 ( 
    .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_tb_43 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[3] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[2] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2_tb0005 \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_3_0 ( 
    .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_tb_44 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg3[0] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2_tb0005 \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_3_cry_1_0 ( 
    .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_fifo_pfu_0_0 ( input 
    D1, C1, B1, A1, D0, C0, B0, A0, output WADO0, WADO1, WADO2, WADO3, WDO0, 
    WDO1, WDO2, WDO3 );

  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD0_INT ( 
    .I(A1), .Z(WDO0));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD1_INT ( 
    .I(B1), .Z(WDO1));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD2_INT ( 
    .I(C1), .Z(WDO2));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WD3_INT ( 
    .I(D1), .Z(WDO3));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD0_INT ( 
    .I(A0), .Z(WADO0));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD1_INT ( 
    .I(B0), .Z(WADO1));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD2_INT ( 
    .I(C0), .Z(WADO2));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/WAD3_INT ( 
    .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module buffer_tb ( input I, output Z );

  BUFBA INST1( .A(I), .Z(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_fifo_pfu_0_0_0 ( 
    input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, WRE, WCK, CE, LSR, CLK, 
    output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, WAD3, WD0, WD1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         LSR_dly, WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/RAM0 ( 
    .DI0(WD0_dly), .DI1(WD1_dly), .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), 
    .WA0(WAD0_dly), .WA1(WAD1_dly), .WA2(WAD2_dly), .WA3(WAD3_dly), 
    .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), .DO1(F1));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_36 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_37 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ec2dpram_tb ( input DI0, DI1, RA0, RA1, RA2, RA3, WA0, WA1, WA2, WA3, WRE, 
    WCK, output DO0, DO1 );
  wire   TIELO;

  VLO gnd_tb1( .Z(TIELO));
  DPR16X4C #("0x0000000000000000") inst0( .DI0(DI0), .DI1(DI1), .DI2(TIELO), 
    .DI3(TIELO), .WAD0(WA0), .WAD1(WA1), .WAD2(WA2), .WAD3(WA3), .WRE(WRE), 
    .WCK(WCK), .RAD0(RA0), .RAD1(RA1), .RAD2(RA2), .RAD3(RA3), .DO0(DO0), 
    .DO1(DO1), .DO2(), .DO3());
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_fifo_pfu_0_0_1 ( 
    input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, WRE, WCK, CE, LSR, CLK, 
    output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, WAD3, WD0, WD1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         LSR_dly, WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram_tb0006 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_0/RAM1 ( 
    .DI0(WD0_dly), .DI1(WD1_dly), .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), 
    .WA0(WAD0_dly), .WA1(WAD1_dly), .WA2(WAD2_dly), .WA3(WAD3_dly), 
    .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), .DO1(F1));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_34 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_35 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ec2dpram_tb0006 ( input DI0, DI1, RA0, RA1, RA2, RA3, WA0, WA1, WA2, WA3, 
    WRE, WCK, output DO0, DO1 );
  wire   TIELO;

  VLO gnd_tb1( .Z(TIELO));
  DPR16X4C #("0x0000000000000000") inst0( .DI0(TIELO), .DI1(TIELO), .DI2(DI0), 
    .DI3(DI1), .WAD0(WA0), .WAD1(WA1), .WAD2(WA2), .WAD3(WA3), .WRE(WRE), 
    .WCK(WCK), .RAD0(RA0), .RAD1(RA1), .RAD2(RA2), .RAD3(RA3), .DO0(), .DO1(), 
    .DO2(DO0), .DO3(DO1));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_fifo_pfu_0_1_2 ( 
    input D1, C1, B1, A1, D0, C0, B0, A0, output WADO0, WADO1, WADO2, WADO3, 
    WDO0, WDO1, WDO2, WDO3 );

  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD0_INT ( 
    .I(A1), .Z(WDO0));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD1_INT ( 
    .I(B1), .Z(WDO1));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD2_INT ( 
    .I(C1), .Z(WDO2));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WD3_INT ( 
    .I(D1), .Z(WDO3));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD0_INT ( 
    .I(A0), .Z(WADO0));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD1_INT ( 
    .I(B0), .Z(WADO1));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD2_INT ( 
    .I(C0), .Z(WADO2));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/WAD3_INT ( 
    .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_fifo_pfu_0_1 ( input 
    D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, WRE, WCK, CE, LSR, CLK, output 
    F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, WAD3, WD0, WD1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         LSR_dly, WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/RAM0 ( 
    .DI0(WD0_dly), .DI1(WD1_dly), .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), 
    .WA0(WAD0_dly), .WA1(WAD1_dly), .WA2(WAD2_dly), .WA3(WAD3_dly), 
    .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), .DO1(F1));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_40 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_41 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_fifo_pfu_0_1_3 ( 
    input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, WRE, WCK, CE, LSR, CLK, 
    output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, WAD3, WD0, WD1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         LSR_dly, WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram_tb0006 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/fifo_pfu_0_1/RAM1 ( 
    .DI0(WD0_dly), .DI1(WD1_dly), .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), 
    .WA0(WAD0_dly), .WA1(WAD1_dly), .WA2(WAD2_dly), .WA3(WAD3_dly), 
    .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), .DO1(F1));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_38 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_39 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_fifo_pfu_0_1_7 ( input 
    D1, C1, B1, A1, D0, C0, B0, A0, output WADO0, WADO1, WADO2, WADO3, WDO0, 
    WDO1, WDO2, WDO3 );

  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD0_INT ( 
    .I(A1), .Z(WDO0));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD1_INT ( 
    .I(B1), .Z(WDO1));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD2_INT ( 
    .I(C1), .Z(WDO2));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WD3_INT ( 
    .I(D1), .Z(WDO3));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD0_INT ( 
    .I(A0), .Z(WADO0));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD1_INT ( 
    .I(B0), .Z(WADO1));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD2_INT ( 
    .I(C0), .Z(WADO2));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/WAD3_INT ( 
    .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_fifo_pfu_0_1_6 ( input 
    D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, WRE, WCK, CE, LSR, CLK, output 
    F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, WAD3, WD0, WD1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         LSR_dly, WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/RAM0 
    ( .DI0(WD0_dly), .DI1(WD1_dly), .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), 
    .WA0(WAD0_dly), .WA1(WAD1_dly), .WA2(WAD2_dly), .WA3(WAD3_dly), 
    .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), .DO1(F1));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_40 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_41 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_fifo_pfu_0_1 ( input D1, 
    C1, B1, A1, D0, C0, B0, A0, DI1, DI0, WRE, WCK, CE, LSR, CLK, output F0, 
    Q0, F1, Q1, input WAD0, WAD1, WAD2, WAD3, WD0, WD1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         LSR_dly, WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram_tb0006 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_1/RAM1 ( 
    .DI0(WD0_dly), .DI1(WD1_dly), .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), 
    .WA0(WAD0_dly), .WA1(WAD1_dly), .WA2(WAD2_dly), .WA3(WAD3_dly), 
    .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), .DO1(F1));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_38 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_39 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_fifo_pfu_0_0_4 ( input 
    D1, C1, B1, A1, D0, C0, B0, A0, output WADO0, WADO1, WADO2, WADO3, WDO0, 
    WDO1, WDO2, WDO3 );

  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD0_INT ( 
    .I(A1), .Z(WDO0));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD1_INT ( 
    .I(B1), .Z(WDO1));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD2_INT ( 
    .I(C1), .Z(WDO2));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WD3_INT ( 
    .I(D1), .Z(WDO3));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD0_INT ( 
    .I(A0), .Z(WADO0));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD1_INT ( 
    .I(B0), .Z(WADO1));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD2_INT ( 
    .I(C0), .Z(WADO2));
  buffer_tb 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/WAD3_INT ( 
    .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_fifo_pfu_0_0 ( input D1, 
    C1, B1, A1, D0, C0, B0, A0, DI1, DI0, WRE, WCK, CE, LSR, CLK, output F0, 
    Q0, F1, Q1, input WAD0, WAD1, WAD2, WAD3, WD0, WD1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         LSR_dly, WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/RAM0 
    ( .DI0(WD0_dly), .DI1(WD1_dly), .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), 
    .WA0(WAD0_dly), .WA1(WAD1_dly), .WA2(WAD2_dly), .WA3(WAD3_dly), 
    .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), .DO1(F1));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_36 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_37 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_fifo_pfu_0_0_5 ( input 
    D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, WRE, WCK, CE, LSR, CLK, output 
    F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, WAD3, WD0, WD1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         LSR_dly, WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram_tb0006 
    \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/fifo_pfu_0_0/RAM1 ( 
    .DI0(WD0_dly), .DI1(WD1_dly), .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), 
    .WA0(WAD0_dly), .WA1(WAD1_dly), .WA2(WAD2_dly), .WA3(WAD3_dly), 
    .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), .DO1(F1));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_34 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_35 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_57 ( input D0, C0, B0, A0, DI0, 
    M1, LSR, CLK, output F0, Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut4_tb \genblk4.u_Control_Capture_2Lane/burst_done_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[14] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/burst_done ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88C8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_58 ( input D1, C1, B1, A1, B0, A0, 
    DI0, CE, LSR, CLK, output F0, Q0, F1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4_tb0007 \genblk4.u_Control_Capture_2Lane/un41_offset_out_i_0 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0008 \genblk4.u_Control_Capture_2Lane/offset_out_RNO ( .A(A0), .B(B0), 
    .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/offset_out ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0007 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBEAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0008 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_59 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[9] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[0] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_60 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[2] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_61 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[3] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[4] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_62 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[5] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[6] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_63 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[7] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[8] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_67 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din3[15] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din3[8] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_68 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[9] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din3[10] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_69 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din3[11] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din3[12] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_70 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din3[13] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din3[14] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_71 ( input D1, C1, B1, A1, B0, A0, 
    DI0, M1, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut4_tb0009 \genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_9 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0010 \genblk4.u_Control_Capture_2Lane/PF_en_2_0_a5 ( .A(A0), .B(B0), 
    .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[12] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PF_en ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0009 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0010 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_72 ( input C1, B1, A1, C0, B0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0011 \genblk4.u_Control_Capture_2Lane/PH_active_ns_0_0_a5[1] ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0012 \genblk4.u_Control_Capture_2Lane/PH_active_RNO[0] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[1] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb0001 \genblk4.u_Control_Capture_2Lane/PH_active[0] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0011 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA8A8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0012 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5454) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_73 ( input C1, B1, A1, C0, B0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0011 \genblk4.u_Control_Capture_2Lane/PH_active_ns_0_0_a5[3] ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0012 \genblk4.u_Control_Capture_2Lane/PH_active_RNO[2] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[3] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[2] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_74 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0013 \genblk4.u_Control_Capture_2Lane/PH_active_RNO[5] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0014 \genblk4.u_Control_Capture_2Lane/PH_active_RNO[4] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[5] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[4] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0013 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEE0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0014 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1110) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_75 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0013 \genblk4.u_Control_Capture_2Lane/PH_active_RNO[7] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0014 \genblk4.u_Control_Capture_2Lane/PH_active_RNO[6] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[7] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[6] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_76 ( input C1, B1, A1, C0, B0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0011 \genblk4.u_Control_Capture_2Lane/PH_active_ns_0_0_a5[9] ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0012 \genblk4.u_Control_Capture_2Lane/PH_active_RNO[8] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[9] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[8] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_77 ( input C1, B1, A1, C0, B0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0011 \genblk4.u_Control_Capture_2Lane/PH_active_RNO[11] ( .A(A1), .B(B1), 
    .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0012 \genblk4.u_Control_Capture_2Lane/PH_active_RNO[10] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[11] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[10] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_78 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0013 \genblk4.u_Control_Capture_2Lane/PH_active_RNO[13] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0014 \genblk4.u_Control_Capture_2Lane/PH_active_RNO[12] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[13] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[12] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_79 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0013 \genblk4.u_Control_Capture_2Lane/PH_active_ns_i_i[15] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0014 \genblk4.u_Control_Capture_2Lane/PH_active_RNO[14] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[15] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_active[14] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_80 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, M1, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut4_tb0009 \genblk4.u_Control_Capture_2Lane/un21_i_a2_0_a5_4[3] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0015 \genblk4.u_Control_Capture_2Lane/un21_i_a2_0_a5_3_RNI400T[3] ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[13] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/PH_en ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0015 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_85 ( input D1, C1, B1, A1, B0, A0, 
    DI0, M1, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut4_tb0009 \genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_10 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0016 \genblk4.u_Control_Capture_2Lane/long_data_en_RNO ( .A(A0), .B(B0), 
    .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[15] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/long_data_en ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_86 ( input C1, B1, A1, D0, C0, B0, 
    A0, DI0, CE, LSR, CLK, output F0, Q0, F1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4_tb0017 \genblk4.u_Control_Capture_2Lane/byte_en_0_a2_2 ( .A(A1), .B(B1), 
    .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0018 \genblk4.u_Control_Capture_2Lane/odd_cnt_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/odd_cnt ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_88 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[2] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_89 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[3] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[4] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_90 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[5] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[6] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_91 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[7] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[8] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_95 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din3[9] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[0] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_96 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[2] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_97 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[3] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[4] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_98 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[5] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[6] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_99 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[7] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[8] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_103 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[9] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_dt1[0] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_104 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_dt1[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_dt1[2] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_105 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_dt1[3] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_dt1[4] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_106 ( input C1, B1, A1, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_dt_2[1] ( .A(A1), .B(B1), .C(C1), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_dt_2[0] ( .A(A0), .B(B0), .C(C0), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_dt[1] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_dt[0] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_107 ( input C1, B1, A1, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_dt_2[3] ( .A(A1), .B(B1), .C(C1), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_dt_2[2] ( .A(A0), .B(B0), .C(C0), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_dt[3] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_dt[2] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_108 ( input C1, B1, A1, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_dt_2[5] ( .A(A1), .B(B1), .C(C1), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_dt_2[4] ( .A(A0), .B(B0), .C(C0), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_dt[5] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_dt[4] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_109 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, DI0, M1, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut4_tb0020 \genblk4.u_Control_Capture_2Lane/long_pkt_dtct_i_1 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0021 \genblk4.u_Control_Capture_2Lane/q_long_pkt_dtct_RNO ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[0] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_long_pkt_dtct ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h81FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00BF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_110 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_dt1[5] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc1[0] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_111 ( input C1, B1, A1, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_wc_2_0_0_285_i_m2 ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_wc_2_0_306_i_m2 ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[1] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[0] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_112 ( input C1, B1, A1, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_wc_2_0_2_243_i_m2 ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_wc_2_0_1_264_i_m2 ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[3] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[2] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_113 ( input C1, B1, A1, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_wc_2_0_4_201_i_m2 ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_wc_2_0_3_222_i_m2 ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[5] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[4] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_114 ( input C1, B1, A1, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_wc_2_0_6_159_i_m2 ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_wc_2_0_5_180_i_m2 ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[7] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[6] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_118 ( input C1, B1, A1, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_wc_3_0[15] ( .A(A1), .B(B1), 
    .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0019 \genblk4.u_Control_Capture_2Lane/q_wc_3_0[14] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[15] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[14] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_119 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[1] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0023 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[0] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[1] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[0] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h003A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_120 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[3] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[2] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[3] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[2] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_121 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[5] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[4] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[5] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[4] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_122 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[7] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[6] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[7] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[6] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_123 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[9] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[8] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[9] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[8] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_124 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[11] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[10] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[11] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[10] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_125 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[13] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[12] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[13] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[12] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_126 ( input B1, A1, D0, C0, B0, 
    A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk4.u_Control_Capture_2Lane/q_word_cntr_RNO[15] ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0022 \genblk4.u_Control_Capture_2Lane/un37_q_word_cntr[14] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[15] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_word_cntr[14] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_127 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0024 \genblk7.u_rgb888_lane2/q_din_0_3_0[1] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut4_tb0024 \genblk7.u_rgb888_lane2/q_din_0_3_0[0] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[1] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[0] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA820) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_128 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0024 \genblk7.u_rgb888_lane2/q_din_0_3_0[3] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut4_tb0024 \genblk7.u_rgb888_lane2/q_din_0_3_0[2] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[3] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[2] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_129 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0024 \genblk7.u_rgb888_lane2/q_din_0_3_0[5] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut4_tb0024 \genblk7.u_rgb888_lane2/q_din_0_3_0[4] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[5] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[4] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_130 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0024 \genblk7.u_rgb888_lane2/q_din_0_3_0[7] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut4_tb0024 \genblk7.u_rgb888_lane2/q_din_0_3_0[6] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[7] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[6] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_131 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0025 \genblk7.u_rgb888_lane2/q_din_0_3_0[9] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut4_tb0025 \genblk7.u_rgb888_lane2/q_din_0_3_0[8] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[9] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[8] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA280) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_132 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0025 \genblk7.u_rgb888_lane2/q_din_0_3_0[11] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut4_tb0025 \genblk7.u_rgb888_lane2/q_din_0_3_0[10] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[11] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[10] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_133 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0025 \genblk7.u_rgb888_lane2/q_din_0_3_0[13] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut4_tb0025 \genblk7.u_rgb888_lane2/q_din_0_3_0[12] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[13] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[12] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_134 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0025 \genblk7.u_rgb888_lane2/q_din_0_3_0[15] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut4_tb0025 \genblk7.u_rgb888_lane2/q_din_0_3_0[14] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[15] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_0[14] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_135 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[1] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[0] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[1] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[0] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_136 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[3] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[2] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[3] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[2] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_137 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[5] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[4] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[5] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[4] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_138 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[7] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[6] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[7] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[6] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_139 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[9] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[8] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[9] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[8] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_140 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[11] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[10] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[11] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[10] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_141 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[13] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[12] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[13] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[12] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_142 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[15] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_1_3[14] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[15] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_1[14] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_143 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[1] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[0] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[1] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[0] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_144 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[3] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[2] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[3] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[2] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_145 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[5] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[4] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[5] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[4] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_146 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[7] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[6] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[7] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[6] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_147 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[9] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[8] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[9] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[8] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_148 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[11] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[10] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[11] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[10] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_149 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[13] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[12] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[13] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[12] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_150 ( input B1, A1, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[15] ( .A(A1), .B(B1), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \genblk7.u_rgb888_lane2/q_din_2_3[14] ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[15] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_2[14] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_156 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[0] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[10] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_157 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[11] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[12] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_158 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[13] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[14] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_159 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[15] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[16] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_160 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[17] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[18] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_166 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[2] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[30] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_167 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[31] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[32] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_168 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[33] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[34] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_169 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[35] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[36] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_170 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[37] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[38] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_180 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[0] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[10] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_181 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[11] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[12] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_182 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[13] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[14] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_183 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[15] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[16] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_184 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[17] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[18] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_190 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[2] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[30] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_191 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[31] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[32] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_192 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[33] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[34] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_193 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[35] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[36] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_194 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[37] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[38] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_tb_200 ( input D1, C1, B1, A1, B0, A0, DI0, M1, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut4_tb0026 \genblk4.u_Control_Capture_2Lane/byte_en_0_a2 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0010 \genblk7.u_rgb888_lane2/wd_cnt_1_sqmuxa_i_i_a3 ( .A(A0), .B(B0), 
    .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[10] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_mixed_en[0] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_201 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_mixed_data_rdy[0] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_unmixed_data_rdy[0] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_202 ( input B1, A1, C0, B0, A0, DI1, DI0, 
    LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0010 \genblk7.u_rgb888_lane2/wd_cnt_ns_i_i_a3[1] ( .A(A1), .B(B1), 
    .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0027 \genblk7.u_rgb888_lane2/wd_cnt_ns_0_a3_0_a3[0] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/wd_cnt[1] ( .D0(vcc_tbI), .D1(DI1_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/wd_cnt[0] ( .D0(vcc_tbI), .D1(DI0_dly), 
    .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_tb_203 ( input C1, B1, A1, B0, A0, DI0, M1, LSR, CLK, output F0, Q0, 
    F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut4_tb0028 \u_DPHY_RX_INST/u_aligner/en_align_i ( .A(A1), .B(B1), .C(C1), 
    .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0008 q_hs_en_RNO( .A(A0), .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din1[11] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb q_hs_en( .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), 
    .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_232 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0029 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt_2_i_a2_i[1] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0030 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt_2_i_a2_i[0] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[1] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[0] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_233 ( input C1, B1, A1, D0, 
    C0, B0, A0, DI0, CE, LSR, CLK, output F0, Q0, F1 );
  wire   gnd_tbI, vcc_tbI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4_tb0031 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt_2_i_a2_i_a2_1[2] ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0032 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt_2_i_a2_i[2] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt[2] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBF8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_234 ( input D1, C1, B1, A1, 
    B0, A0, DI0, M1, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut4_tb0033 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_0 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0034 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shiftflag_0 ( .A(A0), .B(B0), 
    .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[2] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shiftflag ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_263 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0029 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt_2_i_a2_i[1] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0030 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt_2_i_a2_i[0] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[1] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[0] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_264 ( input C1, B1, A1, D0, 
    C0, B0, A0, DI0, CE, LSR, CLK, output F0, Q0, F1 );
  wire   gnd_tbI, vcc_tbI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4_tb0031 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt_2_i_a2_i_a2_1[2] ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0032 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt_2_i_a2_i[2] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt[2] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_265 ( input D1, C1, B1, A1, B0, A0, DI0, 
    M1, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut4_tb0033 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_0 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0034 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shiftflag_0 ( .A(A0), .B(B0), 
    .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shiftflag ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_266 ( input B1, 
    A1, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/XOR2_t2 ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/XOR2_t3 ( .A(A0), 
    .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_50 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_51 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_267 ( input B1, 
    A1, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/XOR2_t0 ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/XOR2_t1 ( .A(A0), 
    .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_48 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_49 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_277 ( input B1, 
    A1, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/XOR2_t6 ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/XOR2_t7 ( .A(A0), 
    .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_65 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_66 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_278 ( input B1, 
    A1, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/XOR2_t4 ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/XOR2_t5 ( .A(A0), 
    .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_63 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_64 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_288 ( input B1, 
    A1, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/XOR2_t2 ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/XOR2_t3 ( .A(A0), 
    .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_50 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_51 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_289 ( input B1, 
    A1, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/XOR2_t0 ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/XOR2_t1 ( .A(A0), 
    .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_48 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_49 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_299 ( input B1, 
    A1, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/XOR2_t6 ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/XOR2_t7 ( .A(A0), 
    .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_65 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_66 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_300 ( input B1, 
    A1, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/XOR2_t4 ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/XOR2_t5 ( .A(A0), 
    .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_63 ( 
    .D0(vcc_tbI), .D1(DI1_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_64 ( 
    .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_310 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[6] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_0[0] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_311 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_0[1] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_0[2] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_312 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_0[3] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_0[4] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_313 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_0[5] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_0[6] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_314 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_0[7] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_1[0] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_315 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_1[1] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_1[2] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_316 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_1[3] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_1[4] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_317 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_1[5] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_1[6] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_318 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_1[7] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_2[0] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_319 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_2[1] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_2[2] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_320 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_2[3] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_2[4] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_321 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_2[5] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_2[6] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_322 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.q_in0_2[7] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_0[0] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_323 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_0[1] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_0[2] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_324 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_0[3] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_0[4] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_325 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_0[5] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_0[6] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_326 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_0[7] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_1[0] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_327 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_1[1] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_1[2] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_328 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_1[3] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_1[4] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_329 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_1[5] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_1[6] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_330 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_1[7] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_2[0] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_tb_331 ( input A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0036 gnd_tb( .A(gnd_tbI), .B(gnd_tbI), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0037 reset_n_tb_pad_RNI49NB( .A(A0), .B(gnd_tbI), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_2[3] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_2[2] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_tb_332 ( input B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0008 \genblk4.u_Control_Capture_2Lane/PH_active_RNI19FP[2] ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0009 \genblk4.u_Control_Capture_2Lane/q_din1_RNI66S41[0] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_2[5] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_2[4] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_tb_333 ( input D1, C1, B1, A1, B0, A0, M1, M0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0038 \genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_x2[5] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0034 \u_DPHY_RX_INST/u_iDDRx4/lut4_tb_0 ( .A(A0), .B(B0), .C(gnd_tbI), 
    .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_2[7] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_2[6] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h01FE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_335 ( input C1, B1, A1, C0, B0, A0, M1, 
    M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0039 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_12 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0039 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_12 ( 
    .A(A0), .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active[1] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active[0] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_336 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.un2_sync0_17 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.un2_sync0_16 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active_0[3] ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/q_syncs_active[2] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_337 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0029 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.sync1_RNO ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0029 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.sync0_RNO ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.sync1 ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.sync0 ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_338 ( input B1, A1, B0, A0, DI0, M1, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut4_tb0040 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/AND2_t10 ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0010 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk6.un2_syncs_active ( 
    .A(A0), .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/syncs_active[3] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_339 ( input C1, B1, A1, C0, 
    B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_7[1] ( .A(A1), .B(B1), 
    .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_7[0] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out[1] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out[0] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_340 ( input C1, B1, A1, C0, 
    B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_7[3] ( .A(A1), .B(B1), 
    .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_7[2] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out[3] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out[2] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_341 ( input C1, B1, A1, C0, 
    B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_7[5] ( .A(A1), .B(B1), 
    .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_7[4] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out[5] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out[4] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_342 ( input C1, B1, A1, C0, 
    B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_7[7] ( .A(A1), .B(B1), 
    .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_7[6] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out[7] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out[6] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_343 ( input C1, B1, A1, C0, 
    B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_7[1] ( .A(A1), .B(B1), 
    .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_7[0] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out[1] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out[0] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_344 ( input C1, B1, A1, C0, 
    B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_7[3] ( .A(A1), .B(B1), 
    .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_7[2] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out[3] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out[2] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_345 ( input C1, B1, A1, C0, 
    B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_7[5] ( .A(A1), .B(B1), 
    .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_7[4] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out[5] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out[4] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_346 ( input C1, B1, A1, C0, 
    B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_7[7] ( .A(A1), .B(B1), 
    .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0041 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_7[6] ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out[7] ( .D0(vcc_tbI), 
    .D1(DI1_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out[6] ( .D0(vcc_tbI), 
    .D1(DI0_dly), .SD(vcc_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_SLICE_tb_348 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, 
    CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, CE_NOTIN, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, 
         LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.un2_sync0_12 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.un2_sync1_17 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_iDDRx4/FF_2 ( .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb CE_inverter_tbIN( .I(CE_dly), .Z(CE_NOTIN));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb0001 \u_DPHY_RX_INST/u_iDDRx4/FF_3 ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_SLICE_tb_349 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, 
    CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, CE_NOTIN, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, 
         LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.un2_sync1_16 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.un2_sync1_12 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_iDDRx4/FF_0 ( .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb CE_inverter_tbIN( .I(CE_dly), .Z(CE_NOTIN));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_iDDRx4/FF_1 ( .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_tb_350 ( input D1, C1, B1, A1, C0, B0, A0, DI0, CE, LSR, CLK, 
    output F0, Q0, F1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4_tb0042 \genblk1.term_en_RNO ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0039 \genblk1.un3_term_en ( .A(A0), .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \genblk1.term_en ( .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAAB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_tb_351 ( input B1, A1, A0, DI0, LSR, CLK, output F0, Q0, F1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut4_tb0040 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/AND2_t10 ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0037 
    \genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/rgb888_lane2_fifo_0_2_RNIU721 
    ( .A(A0), .B(gnd_tbI), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/DE_tb ( .D0(vcc_tbI), .D1(DI0_dly), .SD(vcc_tbI), 
    .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_0__SLICE_tb_352 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/SLICE_tb_352/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/SLICE_tb_352_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/SLICE_tb_352/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/SLICE_tb_352_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/SLICE_tb_352/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/SLICE_tb_352_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/SLICE_tb_352/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/SLICE_tb_352_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/SLICE_tb_352/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/SLICE_tb_352/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[0]/SLICE_tb_352_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut4_tb0043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2_tb ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_1__SLICE_tb_353 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/SLICE_tb_353/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/SLICE_tb_353_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/SLICE_tb_353/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/SLICE_tb_353_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/SLICE_tb_353/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/SLICE_tb_353_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/SLICE_tb_353/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/SLICE_tb_353_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/SLICE_tb_353/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/SLICE_tb_353/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[1]/SLICE_tb_353_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_2__SLICE_tb_354 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/SLICE_tb_354/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/SLICE_tb_354_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/SLICE_tb_354/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/SLICE_tb_354_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/SLICE_tb_354/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/SLICE_tb_354_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/SLICE_tb_354/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/SLICE_tb_354_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/SLICE_tb_354/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/SLICE_tb_354/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[2]/SLICE_tb_354_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_3__SLICE_tb_355 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/SLICE_tb_355/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/SLICE_tb_355_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/SLICE_tb_355/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/SLICE_tb_355_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/SLICE_tb_355/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/SLICE_tb_355_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/SLICE_tb_355/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/SLICE_tb_355_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/SLICE_tb_355/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/SLICE_tb_355/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[3]/SLICE_tb_355_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_4__SLICE_tb_356 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/SLICE_tb_356/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/SLICE_tb_356_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/SLICE_tb_356/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/SLICE_tb_356_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/SLICE_tb_356/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/SLICE_tb_356_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/SLICE_tb_356/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/SLICE_tb_356_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/SLICE_tb_356/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/SLICE_tb_356/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[4]/SLICE_tb_356_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_5__SLICE_tb_357 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/SLICE_tb_357/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/SLICE_tb_357_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/SLICE_tb_357/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/SLICE_tb_357_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/SLICE_tb_357/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/SLICE_tb_357_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/SLICE_tb_357/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/SLICE_tb_357_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/SLICE_tb_357/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/SLICE_tb_357/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[5]/SLICE_tb_357_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_6__SLICE_tb_358 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/SLICE_tb_358/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/SLICE_tb_358_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/SLICE_tb_358/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/SLICE_tb_358_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/SLICE_tb_358/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/SLICE_tb_358_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/SLICE_tb_358/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/SLICE_tb_358_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/SLICE_tb_358/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/SLICE_tb_358/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[6]/SLICE_tb_358_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_3_7__SLICE_tb_359 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/SLICE_tb_359/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/SLICE_tb_359_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/SLICE_tb_359/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/SLICE_tb_359_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/SLICE_tb_359/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/SLICE_tb_359_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/SLICE_tb_359/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/SLICE_tb_359_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/SLICE_tb_359/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/SLICE_tb_359/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_3[7]/SLICE_tb_359_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_out_10_6_7__SLICE_tb_360 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/SLICE_tb_360/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/SLICE_tb_360_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/SLICE_tb_360/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/SLICE_tb_360_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/SLICE_tb_360/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/SLICE_tb_360_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/SLICE_tb_360/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/SLICE_tb_360_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/SLICE_tb_360/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/SLICE_tb_360/u_DPHY_RX_INST/u_aligner/genblk4.wd0/out_10_6[7]/SLICE_tb_360_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_0__SLICE_tb_361 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/SLICE_tb_361/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/SLICE_tb_361_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/SLICE_tb_361/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/SLICE_tb_361_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/SLICE_tb_361/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/SLICE_tb_361_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/SLICE_tb_361/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/SLICE_tb_361_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/SLICE_tb_361/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/SLICE_tb_361/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[0]/SLICE_tb_361_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_1__SLICE_tb_362 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/SLICE_tb_362/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/SLICE_tb_362_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/SLICE_tb_362/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/SLICE_tb_362_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/SLICE_tb_362/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/SLICE_tb_362_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/SLICE_tb_362/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/SLICE_tb_362_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/SLICE_tb_362/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/SLICE_tb_362/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[1]/SLICE_tb_362_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_2__SLICE_tb_363 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/SLICE_tb_363/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/SLICE_tb_363_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/SLICE_tb_363/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/SLICE_tb_363_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/SLICE_tb_363/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/SLICE_tb_363_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/SLICE_tb_363/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/SLICE_tb_363_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/SLICE_tb_363/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/SLICE_tb_363/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[2]/SLICE_tb_363_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_3__SLICE_tb_364 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/SLICE_tb_364/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/SLICE_tb_364_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/SLICE_tb_364/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/SLICE_tb_364_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/SLICE_tb_364/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/SLICE_tb_364_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/SLICE_tb_364/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/SLICE_tb_364_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/SLICE_tb_364/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/SLICE_tb_364/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[3]/SLICE_tb_364_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_4__SLICE_tb_365 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/SLICE_tb_365/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/SLICE_tb_365_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/SLICE_tb_365/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/SLICE_tb_365_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/SLICE_tb_365/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/SLICE_tb_365_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/SLICE_tb_365/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/SLICE_tb_365_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/SLICE_tb_365/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/SLICE_tb_365/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[4]/SLICE_tb_365_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_5__SLICE_tb_366 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/SLICE_tb_366/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/SLICE_tb_366_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/SLICE_tb_366/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/SLICE_tb_366_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/SLICE_tb_366/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/SLICE_tb_366_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/SLICE_tb_366/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/SLICE_tb_366_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/SLICE_tb_366/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/SLICE_tb_366/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[5]/SLICE_tb_366_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_6__SLICE_tb_367 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/SLICE_tb_367/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/SLICE_tb_367_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/SLICE_tb_367/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/SLICE_tb_367_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/SLICE_tb_367/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/SLICE_tb_367_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/SLICE_tb_367/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/SLICE_tb_367_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/SLICE_tb_367/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/SLICE_tb_367/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[6]/SLICE_tb_367_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_3_7__SLICE_tb_368 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/SLICE_tb_368/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/SLICE_tb_368_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/SLICE_tb_368/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/SLICE_tb_368_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/SLICE_tb_368/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/SLICE_tb_368_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/SLICE_tb_368/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/SLICE_tb_368_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/SLICE_tb_368/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/SLICE_tb_368/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_3[7]/SLICE_tb_368_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_out_10_6_7__SLICE_tb_369 ( input C1, 
    B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   gnd_tbI, 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/SLICE_tb_369/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/SLICE_tb_369_K1_H1 
         , 
         \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/SLICE_tb_369/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/GATE_H0 
         ;

  lut4_tb0043 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/SLICE_tb_369_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/SLICE_tb_369/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/SLICE_tb_369_K1_H1 )
    );
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0044 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), 
    .Z(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/SLICE_tb_369/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/GATE_H0 )
    );
  selmux2_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/SLICE_tb_369_K0K1MUX 
    ( 
    .D0(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/SLICE_tb_369/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/GATE_H0 )
    , 
    .D1(\u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/SLICE_tb_369/u_DPHY_RX_INST/u_aligner/genblk3.wd1/out_10_6[7]/SLICE_tb_369_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_q_wc_2_sn_N_2_i_SLICE_tb_370 ( input D1, 
    C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   
         \genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/SLICE_tb_370/genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/SLICE_tb_370_K1_H1 
         , 
         \genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/SLICE_tb_370/genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/GATE_H0 
         ;

  lut4_tb0045 \genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/SLICE_tb_370_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/SLICE_tb_370/genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/SLICE_tb_370_K1_H1 )
    );
  lut4_tb0046 \genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/SLICE_tb_370/genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/GATE_H0 )
    );
  selmux2_tb \genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/SLICE_tb_370_K0K1MUX 
    ( 
    .D0(\genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/SLICE_tb_370/genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/GATE_H0 )
    , 
    .D1(\genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/SLICE_tb_370/genblk4.u_Control_Capture_2Lane/q_wc_2_sn_N_2_i/SLICE_tb_370_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut4_tb0045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_371 ( input D1, 
    C1, B1, A1, B0, A0, M0, CE, LSR, CLK, output F0, Q0, F1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4_tb0047 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/lut4_tb_12 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/lut4_tb_14 ( .A(A0), 
    .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_47 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6996) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_372 ( input D1, 
    C1, B1, A1, B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0047 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/lut4_tb_8 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/lut4_tb_10 ( .A(A0), 
    .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_44 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_43 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_373 ( input D1, 
    C1, B1, A1, B0, A0, M0, CE, LSR, CLK, output F0, Q0, F1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4_tb0047 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/lut4_tb_12 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/lut4_tb_14 ( .A(A0), 
    .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_47 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_374 ( input D1, 
    C1, B1, A1, B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0047 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/lut4_tb_8 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0035 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/lut4_tb_10 ( .A(A0), 
    .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_44 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_43 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_375 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.un2_sync1_15 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0048 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.un2_sync1_21 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[0] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[6] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_376 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.un2_sync0_15 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0048 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.un2_sync0_21 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[0] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_377 ( input D1, C1, B1, A1, C0, B0, A0, 
    M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0049 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_o2 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0050 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_2 ( 
    .A(A0), .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[0] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_378 ( input D1, C1, B1, A1, C0, B0, A0, 
    M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0051 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_10 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0052 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt_2_i_a2_i_a5_3[0] ( 
    .A(A0), .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[0] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[7] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_379 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0048 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_22 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0053 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_0_0 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[3] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[2] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_380 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0049 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_o2_1 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0048 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_0_1 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[3] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[2] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_381 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_reg1_1_6 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0048 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_0_2 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[5] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[4] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_382 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_17 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0054 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_21 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[0] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_383 ( input C1, B1, A1, D0, C0, B0, A0, 
    M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0027 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_1_1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0055 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a5_1_3 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[7] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg4[6] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_384 ( input D1, C1, B1, A1, 
    C0, B0, A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0049 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_o2 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0050 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_2 ( 
    .A(A0), .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[2] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[1] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_385 ( input D1, C1, B1, A1, 
    C0, B0, A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0051 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_10 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0052 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt_2_i_a2_i_a5_3[0] ( 
    .A(A0), .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[0] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_386 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0048 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_22 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0053 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_0_0 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[4] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[3] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_387 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0049 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_o2_1 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0048 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_0_1 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[6] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[5] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_388 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_reg1_1_6 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0048 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_0_0 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[4] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[3] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_389 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_17 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0054 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_21 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[2] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[1] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_390 ( input C1, B1, A1, D0, 
    C0, B0, A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0027 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_1_1 ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0055 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a5_1_3 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[0] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[7] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_tb_391 ( input B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0034 \genblk4.u_Control_Capture_2Lane/PH_active_ns_i_i_o2_0[13] ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0056 
    \genblk4.u_Control_Capture_2Lane/PH_active_ns_i_i_o2_0_RNIPD7J2[13] ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[5] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[4] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_tb_392 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0048 \genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0031 \genblk4.u_Control_Capture_2Lane/q_long_pkt_dtct_RNIK5KM ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg2[0] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_393 ( input D1, C1, B1, A1, C0, 
    B0, A0, M0, CE, LSR, CLK, output F0, Q0, F1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4_tb0055 \genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_RNIG5CM8 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0057 \genblk4.u_Control_Capture_2Lane/odd_cnt_RNO_0 ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/WC[0] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_tb_394 ( input D1, C1, B1, A1, B0, A0, M1, M0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0058 \genblk4.u_Control_Capture_2Lane/un12_VSYNC_tb_i_a3_4 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0010 \genblk4.u_Control_Capture_2Lane/un36_HSYNC_tb_i_a3 ( .A(A0), .B(B0), 
    .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[5] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[4] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_tb_395 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0048 \genblk4.u_Control_Capture_2Lane/q_din_RNII6TC5[10] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0059 \genblk4.u_Control_Capture_2Lane/PH_active_ns_i_o2_1_a2[5] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[7] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[6] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_396 ( input B1, A1, D0, C0, B0, 
    A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0040 \genblk4.u_Control_Capture_2Lane/long_data_en_2lto15_i_a2_0_a2 ( 
    .A(A1), .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0060 \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_2 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[9] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[8] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3505) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_397 ( input D1, C1, B1, A1, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0061 \genblk4.u_Control_Capture_2Lane/un12_VSYNC_tb_i_a3_3 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0052 \genblk4.u_Control_Capture_2Lane/un12_VSYNC_tb_i_a3 ( .A(A0), .B(B0), 
    .C(C0), .D(gnd_tbI), .Z(F0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[11] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[10] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h010F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_tb_398 ( input B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0034 \genblk4.u_Control_Capture_2Lane/PH_active_ns_0_0_o2[11] ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0062 \genblk4.u_Control_Capture_2Lane/PH_active_ns_0_0_o2_RNIDLFD2[11] 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[3] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg0[2] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_tb_399 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \genblk4.u_Control_Capture_2Lane/q_din1_RNII8R[12] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0048 \genblk4.u_Control_Capture_2Lane/q_din1_RNI25GT2[10] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[1] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[0] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_400 ( input B1, A1, D0, C0, B0, 
    A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0010 \genblk4.u_Control_Capture_2Lane/un5_q_word_cntr_0 ( .A(A1), .B(B1), 
    .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0063 \genblk4.u_Control_Capture_2Lane/un1_q_word_cntr_1[0] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[13] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_wc[12] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_401 ( input C1, 
    B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0064 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/lut4_tb_13 ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0047 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/lut4_tb_15 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_59 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_58 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9696) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_402 ( input C1, 
    B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0064 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/lut4_tb_9 ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0047 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/lut4_tb_11 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_46 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_45 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_403 ( input C1, 
    B1, A1, C0, B0, A0, M0, CE, LSR, CLK, output F0, Q0, F1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4_tb0065 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/lut4_tb_6 ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0066 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/lut4_tb_7 ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_62 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4242) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2424) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk10_U1_SLICE_tb_404 ( input C1, 
    B1, A1, C0, B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0067 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/lut4_tb_4 ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0068 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/lut4_tb_5 ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_61 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/FF_60 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8181) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut4_tb0068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1818) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_405 ( input C1, 
    B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0064 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/lut4_tb_13 ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0047 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/lut4_tb_15 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_59 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_58 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_406 ( input C1, 
    B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0064 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/lut4_tb_9 ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0047 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/lut4_tb_11 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_46 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_45 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_407 ( input C1, 
    B1, A1, C0, B0, A0, M0, CE, LSR, CLK, output F0, Q0, F1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4_tb0065 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/lut4_tb_6 ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0066 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/lut4_tb_7 ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_62 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_genblk9_U0_SLICE_tb_408 ( input C1, 
    B1, A1, C0, B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0067 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/lut4_tb_4 ( .A(A1), 
    .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0068 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/lut4_tb_5 ( .A(A0), 
    .B(B0), .C(C0), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_61 ( 
    .D0(M1_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/FF_60 ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_409 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0069 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt_2_i_a2_i_0[0] ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0049 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_o2_2 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[5] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[4] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2F22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_410 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0069 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt_2_i_a2_i_0[0] ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0049 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_o2_2 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[6] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[5] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_411 ( input B1, A1, B0, A0, M1, M0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0040 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk9.U0/AND2_t9 ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0040 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk10.U1/AND2_t9 ( .A(A0), 
    .B(B0), .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[3] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[2] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_412 ( input A1, B0, A0, M1, M0, 
    CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0037 \genblk4.u_Control_Capture_2Lane/DT_RNI02P5[4] ( .A(A1), .B(gnd_tbI), 
    .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0070 \genblk4.u_Control_Capture_2Lane/DT_RNI15IB[4] ( .A(A0), .B(B0), 
    .C(gnd_tbI), .D(gnd_tbI), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/DT[1] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/DT[0] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4_tb0070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_tb_413 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \genblk4.u_Control_Capture_2Lane/q_din_RNI5R0N1[0] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0009 \genblk4.u_Control_Capture_2Lane/q_din_RNIJI971[10] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[7] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[6] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_tb_414 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0048 \genblk4.u_Control_Capture_2Lane/q_din_RNIF51N1[3] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4_tb0048 \genblk4.u_Control_Capture_2Lane/q_din_RNIBJHN[11] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[5] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[4] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_tb_415 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \genblk4.u_Control_Capture_2Lane/q_din1_RNIMMS41[4] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0009 \genblk4.u_Control_Capture_2Lane/q_din1_RNIKVRI[10] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[3] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg1[2] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_416 ( input C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0039 \genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_7 ( .A(A1), .B(B1), 
    .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0009 \genblk4.u_Control_Capture_2Lane/PF_en_2_0_a2_8 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/DT[3] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/DT[2] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_417 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_15 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_16 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg1[0] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[7] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_418 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_13 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_a2_7_14 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[6] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg0[5] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_419 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_15 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_16 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[7] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[6] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_420 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_13 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_a2_7_14 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[5] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg3[4] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_421 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.un2_sync0_13 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0048 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk1.un2_sync0_14 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[7] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[6] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_422 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0009 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.un2_sync1_13 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4_tb0048 \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.un2_sync1_14 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[5] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg6[4] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_423 ( input B1, A1, D0, C0, B0, 
    A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut4_tb0008 \genblk4.u_Control_Capture_2Lane/un21_i_a2_0_a5_3[3] ( .A(A1), 
    .B(B1), .C(gnd_tbI), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0009 \genblk4.u_Control_Capture_2Lane/PH_active_RNIEUUI1[3] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/DT[5] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/DT[4] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk3_wd1_SLICE_tb_424 ( input C1, B1, A1, D0, 
    C0, B0, A0, M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0050 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/shftamt_2_i_a2_i_a5_0[0] ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0049 \u_DPHY_RX_INST/u_aligner/genblk3.wd1/un1_shftamt28_1_i_o2_0 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[4] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg2[3] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_SLICE_tb_425 ( input C1, B1, A1, D0, C0, B0, A0, 
    M1, M0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   gnd_tbI, vcc_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut4_tb0050 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/shftamt_2_i_a2_i_a5_0[0] ( 
    .A(A1), .B(B1), .C(C1), .D(gnd_tbI), .Z(F1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  lut4_tb0049 \u_DPHY_RX_INST/u_aligner/genblk4.wd0/un1_shftamt28_1_i_o2_0 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[3] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk3.wd1/reg5[2] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_431 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[10] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[11] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_432 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[12] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[13] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_433 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[14] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din2[15] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_454 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[10] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[11] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_455 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[12] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[13] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk4_u_Control_Capture_2Lane_SLICE_tb_456 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[14] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk4.u_Control_Capture_2Lane/q_din[15] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_463 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[19] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[1] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_464 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[39] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[3] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_465 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[4] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[5] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_466 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[6] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[7] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_467 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[8] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[9] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_473 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[20] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[21] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_474 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[22] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[23] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_475 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[24] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[25] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_476 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[26] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[27] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_477 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[28] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[29] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_483 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[40] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[41] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_484 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[42] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[43] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_485 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[44] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[45] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_486 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[46] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_mixed[47] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_487 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[19] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[1] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_488 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[39] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[3] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_489 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[4] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[5] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_490 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[6] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[7] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_491 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[8] ( .D0(M1_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[9] ( .D0(M0_dly), .D1(vcc_tbI), 
    .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_497 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[20] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[21] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_498 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[22] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[23] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_499 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[24] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[25] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_500 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[26] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[27] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_501 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[28] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[29] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_507 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[40] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[41] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_508 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[42] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[43] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_509 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[44] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[45] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module genblk7_u_rgb888_lane2_SLICE_tb_510 ( input M1, M0, LSR, CLK, output Q0, 
    Q1 );
  wire   vcc_tbI, gnd_tbI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[46] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre_tb \genblk7.u_rgb888_lane2/q_din_unmixed[47] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_558 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[6] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg4[7] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_559 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[0] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[1] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_560 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[2] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[3] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_561 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[4] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[5] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_562 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[6] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg5[7] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_563 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[0] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[1] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_564 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[2] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[3] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk4_wd0_SLICE_tb_565 ( input M1, M0, LSR, CLK, 
    output Q0, Q1 );
  wire   vcc_tbI, gnd_tbI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[4] ( .D0(M1_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk4.wd0/reg6[5] ( .D0(M0_dly), 
    .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module u_DPHY_RX_INST_u_aligner_genblk6_ln0_SLICE_tb_614 ( input M0, LSR, CLK, 
    output Q0 );
  wire   vcc_tbI, gnd_tbI, M0_dly, CLK_dly, LSR_dly;

  vmuxregsre_tb \u_DPHY_RX_INST/u_aligner/genblk6.ln0/genblk2.q_in1_2[1] ( 
    .D0(M0_dly), .D1(vcc_tbI), .SD(gnd_tbI), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module LP0_1_tbtbtbtbtb ( output PADDI, input PADDT, PADDO, inout LP00 );
  wire   PADDT_NOTIN;

  xo2iobuf_tb \LP0_pad[0] ( .I(PADDO), .T(PADDT_NOTIN), .Z(PADDI), .PAD(LP00), 
    .PADI(LP00));
  inverter_tb PADDT_inverter_tbIN( .I(PADDT), .Z(PADDT_NOTIN));

  specify
    (PADDT => LP00) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => LP00) = (0:0:0,0:0:0);
    (LP00 => PADDI) = (0:0:0,0:0:0);
    $width (posedge LP00, 0:0:0);
    $width (negedge LP00, 0:0:0);
  endspecify

endmodule

module xo2iobuf_tb ( input I, T, output Z, PAD, input PADI );

  IBPD INST1( .I(PADI), .O(Z));
  OBZPD INST2( .I(I), .T(T), .O(PAD));
endmodule

module LP0_1_tbtbtb ( input PADDT, PADDO, output LPCLK0 );
  wire   PADDT_NOTIN;

  xo2iobuf_tb0071 \LPCLK_pad[0] ( .I(PADDO), .T(PADDT_NOTIN), .PAD(LPCLK0));
  inverter_tb PADDT_inverter_tbIN( .I(PADDT), .Z(PADDT_NOTIN));

  specify
    (PADDT => LPCLK0) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => LPCLK0) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf_tb0071 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module PIXCLK_adj ( input PADDO, output PIXCLK_adj );
  wire   gnd_tbI;

  xo2iobuf_tb0072 PIXCLK_adj_pad( .I(PADDO), .T(gnd_tbI), .PAD(PIXCLK_adj));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (PADDO => PIXCLK_adj) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf_tb0072 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module reset_n_tb ( output PADDI, input reset_n_tb );

  xo2iobuf_tb0073 reset_n_tb_pad( .Z(PADDI), .PAD(reset_n_tb));

  specify
    (reset_n_tb => PADDI) = (0:0:0,0:0:0);
    $width (posedge reset_n_tb, 0:0:0);
    $width (negedge reset_n_tb, 0:0:0);
  endspecify

endmodule

module xo2iobuf_tb0073 ( output Z, input PAD );

  IBPU INST1( .I(PAD), .O(Z));
endmodule

module D1_tb ( output PADDI, input D1 );

  xo2iobuf_tb0074 \u_DPHY_RX_INST/u_iDDRx4/genblk5.Inst1_IB1 ( .Z(PADDI), 
    .PAD(D1));

  specify
    (D1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge D1, 0:0:0);
    $width (negedge D1, 0:0:0);
  endspecify

endmodule

module xo2iobuf_tb0074 ( output Z, input PAD );

  IB INST1( .I(PAD), .O(Z));
endmodule

module D1_MGIOL_tb ( input PADDI, output INDD, input DI, LSR, CLK, ECLK, output 
    RXDA0, RXDA1, RXDA2, RXDA3, RXDA4, RXDA5, RXDA6, RXDA7 );
  wire   gnd_tbI, LSR_NOTIN, DI_dly, ECLK_dly, CLK_dly;

  xo2DELay D1_MGIOL_DELAY( .PADDI(PADDI), .DELAY(INDD));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  xo2iddr4 \u_DPHY_RX_INST/u_iDDRx4/genblk1.Inst4_IDDRX4B1 ( .D(DI_dly), 
    .ECLK(ECLK_dly), .SCLK(CLK_dly), .RST(LSR_NOTIN), .ALIGNWD(gnd_tbI), 
    .Q0(RXDA0), .Q1(RXDA1), .Q2(RXDA2), .Q3(RXDA3), .Q4(RXDA4), .Q5(RXDA5), 
    .Q6(RXDA6), .Q7(RXDA7));
  inverter_tb LSR_inverter_tbIN( .I(LSR), .Z(LSR_NOTIN));

  specify
    (PADDI => INDD) = (0:0:0,0:0:0);
    (CLK => RXDA0) = (0:0:0,0:0:0);
    (CLK => RXDA1) = (0:0:0,0:0:0);
    (CLK => RXDA2) = (0:0:0,0:0:0);
    (CLK => RXDA3) = (0:0:0,0:0:0);
    (CLK => RXDA4) = (0:0:0,0:0:0);
    (CLK => RXDA5) = (0:0:0,0:0:0);
    (CLK => RXDA6) = (0:0:0,0:0:0);
    (CLK => RXDA7) = (0:0:0,0:0:0);
    $setuphold (posedge ECLK, DI, 0:0:0, 0:0:0,,,, ECLK_dly, DI_dly);
    $setuphold 
      (posedge CLK, posedge ECLK, 0:0:0, 0:0:0,,,, CLK_dly, ECLK_dly);
    $width (posedge ECLK, 0:0:0);
    $width (negedge ECLK, 0:0:0);
  endspecify

endmodule

module xo2DELay ( input PADDI, output DELAY );

  BUFBA INST10( .A(PADDI), .Z(DELAY));
endmodule

module xo2iddr4 ( input D, ECLK, SCLK, RST, ALIGNWD, output Q0, Q1, Q2, Q3, Q4, 
    Q5, Q6, Q7 );

  IDDRX4B INST0( .D(D), .ECLK(ECLK), .SCLK(SCLK), .RST(RST), .ALIGNWD(ALIGNWD), 
    .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7));
  defparam INST0.GSR = "DISABLED";
endmodule

module D0_tb ( output PADDI, input D0 );

  xo2iobuf_tb0074 \u_DPHY_RX_INST/u_iDDRx4/genblk6.Inst1_IB0 ( .Z(PADDI), 
    .PAD(D0));

  specify
    (D0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge D0, 0:0:0);
    $width (negedge D0, 0:0:0);
  endspecify

endmodule

module D0_MGIOL_tb ( input PADDI, output INDD, input DI, LSR, CLK, ECLK, output 
    RXDA0, RXDA1, RXDA2, RXDA3, RXDA4, RXDA5, RXDA6, RXDA7 );
  wire   gnd_tbI, LSR_NOTIN, DI_dly, ECLK_dly, CLK_dly;

  xo2DELay D0_MGIOL_DELAY( .PADDI(PADDI), .DELAY(INDD));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  xo2iddr4 \u_DPHY_RX_INST/u_iDDRx4/genblk2.Inst4_IDDRX4B0 ( .D(DI_dly), 
    .ECLK(ECLK_dly), .SCLK(CLK_dly), .RST(LSR_NOTIN), .ALIGNWD(gnd_tbI), 
    .Q0(RXDA0), .Q1(RXDA1), .Q2(RXDA2), .Q3(RXDA3), .Q4(RXDA4), .Q5(RXDA5), 
    .Q6(RXDA6), .Q7(RXDA7));
  inverter_tb LSR_inverter_tbIN( .I(LSR), .Z(LSR_NOTIN));

  specify
    (PADDI => INDD) = (0:0:0,0:0:0);
    (CLK => RXDA0) = (0:0:0,0:0:0);
    (CLK => RXDA1) = (0:0:0,0:0:0);
    (CLK => RXDA2) = (0:0:0,0:0:0);
    (CLK => RXDA3) = (0:0:0,0:0:0);
    (CLK => RXDA4) = (0:0:0,0:0:0);
    (CLK => RXDA5) = (0:0:0,0:0:0);
    (CLK => RXDA6) = (0:0:0,0:0:0);
    (CLK => RXDA7) = (0:0:0,0:0:0);
    $setuphold (posedge ECLK, DI, 0:0:0, 0:0:0,,,, ECLK_dly, DI_dly);
    $setuphold 
      (posedge CLK, posedge ECLK, 0:0:0, 0:0:0,,,, CLK_dly, ECLK_dly);
    $width (posedge ECLK, 0:0:0);
    $width (negedge ECLK, 0:0:0);
  endspecify

endmodule

module HSYNC_tb ( input IOLDO, output HSYNC_tb );
  wire   gnd_tbI;

  xo2iobuf_tb0072 HSYNC_tb_pad( .I(IOLDO), .T(gnd_tbI), .PAD(HSYNC_tb));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => HSYNC_tb) = (0:0:0,0:0:0);
  endspecify

endmodule

module HSYNC_tb_MGIOL ( output IOLDO, input OPOS, CE, LSR, CLK );
  wire   LSR_NOTIN, OPOS_dly, CLK_dly, CE_dly, LSR_dly;

  mfflsre_tb HSYNC_tb_0io( .D0(OPOS_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(IOLDO));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mfflsre_tb ( input D0, SP, CK, LSR, output Q );

  FD1P3DX INST01( .D(D0), .SP(SP), .CK(CK), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module VSYNC_tb ( input IOLDO, output VSYNC_tb );
  wire   gnd_tbI;

  xo2iobuf_tb0072 VSYNC_tb_pad( .I(IOLDO), .T(gnd_tbI), .PAD(VSYNC_tb));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => VSYNC_tb) = (0:0:0,0:0:0);
  endspecify

endmodule

module VSYNC_tb_MGIOL ( output IOLDO, input OPOS, CE, LSR, CLK );
  wire   LSR_NOTIN, OPOS_dly, CLK_dly, CE_dly, LSR_dly;

  mfflsre_tb VSYNC_tb_0io( .D0(OPOS_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(IOLDO));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DE_tb ( input IOLDO, output DE_tb );
  wire   gnd_tbI;

  xo2iobuf_tb0072 DE_tb_pad( .I(IOLDO), .T(gnd_tbI), .PAD(DE_tb));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => DE_tb) = (0:0:0,0:0:0);
  endspecify

endmodule

module DE_tb_MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb DE_tb_0io( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), .LSR(LSR_NOTIN), 
    .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_23_ ( input IOLDO, output PIXDATA_tb23 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[23] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb23));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb23) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_23__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[23] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_22_ ( input IOLDO, output PIXDATA_tb22 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[22] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb22));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb22) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_22__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[22] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_21_ ( input IOLDO, output PIXDATA_tb21 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[21] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb21));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb21) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_21__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[21] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_20_ ( input IOLDO, output PIXDATA_tb20 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[20] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb20));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb20) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_20__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[20] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_19_ ( input IOLDO, output PIXDATA_tb19 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[19] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb19));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb19) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_19__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[19] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_18_ ( input IOLDO, output PIXDATA_tb18 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[18] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb18));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb18) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_18__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[18] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_17_ ( input IOLDO, output PIXDATA_tb17 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[17] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb17));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb17) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_17__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[17] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_16_ ( input IOLDO, output PIXDATA_tb16 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[16] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb16));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb16) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_16__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[16] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_15_ ( input IOLDO, output PIXDATA_tb15 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[15] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb15));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb15) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_15__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[15] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_14_ ( input IOLDO, output PIXDATA_tb14 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[14] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb14));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb14) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_14__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[14] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_13_ ( input IOLDO, output PIXDATA_tb13 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[13] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb13));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb13) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_13__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[13] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_12_ ( input IOLDO, output PIXDATA_tb12 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[12] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb12));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb12) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_12__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[12] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_11_ ( input IOLDO, output PIXDATA_tb11 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[11] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb11));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb11) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_11__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[11] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_10_ ( input IOLDO, output PIXDATA_tb10 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[10] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb10));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb10) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_10__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[10] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_9_ ( input IOLDO, output PIXDATA_tb9 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[9] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb9));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb9) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_9__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[9] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_8_ ( input IOLDO, output PIXDATA_tb8 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[8] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb8));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb8) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_8__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[8] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_7_ ( input IOLDO, output PIXDATA_tb7 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[7] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb7));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb7) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_7__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[7] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_6_ ( input IOLDO, output PIXDATA_tb6 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[6] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb6));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb6) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_6__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[6] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_5_ ( input IOLDO, output PIXDATA_tb5 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[5] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb5));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb5) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_5__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[5] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_4_ ( input IOLDO, output PIXDATA_tb4 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[4] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb4));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb4) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_4__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[4] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_3_ ( input IOLDO, output PIXDATA_tb3 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[3] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb3));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb3) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_3__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[3] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_2_ ( input IOLDO, output PIXDATA_tb2 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[2] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb2));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb2) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_2__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[2] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_1_ ( input IOLDO, output PIXDATA_tb1 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[1] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb1));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb1) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_1__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[1] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIXDATA_tb_0_ ( input IOLDO, output PIXDATA_tb0 );
  wire   gnd_tbI;

  xo2iobuf_tb0072 \PIXDATA_tb_pad[0] ( .I(IOLDO), .T(gnd_tbI), .PAD(PIXDATA_tb0));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (IOLDO => PIXDATA_tb0) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIXDATA_tb_0__MGIOL ( output IOLDO, input OPOS, LSR, CLK );
  wire   vcc_tbI, LSR_NOTIN, OPOS_dly, CLK_dly, LSR_dly;

  mfflsre_tb \PIXDATA_tb_0io[0] ( .D0(OPOS_dly), .SP(vcc_tbI), .CK(CLK_dly), 
    .LSR(LSR_NOTIN), .Q(IOLDO));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb LSR_inverter_tbIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IOLDO) = (0:0:0,0:0:0);
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module LP0_1_tb ( output PADDI, input PADDT, PADDO, inout LP01 );
  wire   PADDT_NOTIN;

  xo2iobuf_tb \LP0_pad[1] ( .I(PADDO), .T(PADDT_NOTIN), .Z(PADDI), .PAD(LP01), 
    .PADI(LP01));
  inverter_tb PADDT_inverter_tbIN( .I(PADDT), .Z(PADDT_NOTIN));

  specify
    (PADDT => LP01) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => LP01) = (0:0:0,0:0:0);
    (LP01 => PADDI) = (0:0:0,0:0:0);
    $width (posedge LP01, 0:0:0);
    $width (negedge LP01, 0:0:0);
  endspecify

endmodule

module LP1_1_tb ( input PADDT, PADDO, output LP11 );
  wire   PADDT_NOTIN;

  xo2iobuf_tb0071 \LP1_pad[1] ( .I(PADDO), .T(PADDT_NOTIN), .PAD(LP11));
  inverter_tb PADDT_inverter_tbIN( .I(PADDT), .Z(PADDT_NOTIN));

  specify
    (PADDT => LP11) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => LP11) = (0:0:0,0:0:0);
  endspecify

endmodule

module LP1_0_tb ( input PADDT, PADDO, output LP10 );
  wire   PADDT_NOTIN;

  xo2iobuf_tb0071 \LP1_pad[0] ( .I(PADDO), .T(PADDT_NOTIN), .PAD(LP10));
  inverter_tb PADDT_inverter_tbIN( .I(PADDT), .Z(PADDT_NOTIN));

  specify
    (PADDT => LP10) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => LP10) = (0:0:0,0:0:0);
  endspecify

endmodule

module LPCLK_1_tb ( input PADDT, PADDO, output LPCLK1 );
  wire   PADDT_NOTIN;

  xo2iobuf_tb0071 \LPCLK_pad[1] ( .I(PADDO), .T(PADDT_NOTIN), .PAD(LPCLK1));
  inverter_tb PADDT_inverter_tbIN( .I(PADDT), .Z(PADDT_NOTIN));

  specify
    (PADDT => LPCLK1) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => LPCLK1) = (0:0:0,0:0:0);
  endspecify

endmodule

module DCK_tb ( output PADDI, input DCK );

  xo2iobuf_tb0075 DCK_pad( .Z(PADDI), .PAD(DCK));

  specify
    (DCK => PADDI) = (0:0:0,0:0:0);
    $width (posedge DCK, 0:0:0);
    $width (negedge DCK, 0:0:0);
  endspecify

endmodule

module xo2iobuf_tb0075 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module u_DPHY_RX_INST_u_byte_clk_fifo_byte_clk_fifo_0_1 ( input DIA8, DIA7, 
    DIA6, DIA5, DIA4, DIA3, DIA2, DIA1, DIA0, output DOA8, DOA7, DOA6, DOA5, 
    DOA4, DOA3, DOA2, DOA1, DOA0, input RSTA, CLKA, CSA2, output FF, EF, 
    input CSB2, CLKB, RSTB, output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, 
    input DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6 );
  wire   gnd_tbI, vcc_tbI, RSTA_NOTIN, RSTB_NOTIN, DIA8_dly, CLKA_dly, DIA7_dly, 
         DIA6_dly, DIA5_dly, DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, 
         RSTA_dly, CSA2_dly, CSB2_dly, CLKB_dly, RSTB_dly, DIB0_dly, DIB1_dly, 
         DIB2_dly, DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly;

  FIFO8KB_B_tb \u_DPHY_RX_INST/u_byte_clk_fifo/byte_clk_fifo_0_1_FIFO8KB ( 
    .DI0(DIA0_dly), .DI1(DIA1_dly), .DI2(DIA2_dly), .DI3(DIA3_dly), 
    .DI4(DIA4_dly), .DI5(DIA5_dly), .DI6(DIA6_dly), .DI7(DIA7_dly), 
    .DI8(DIA8_dly), .DI9(DIB0_dly), .DI10(DIB1_dly), .DI11(DIB2_dly), 
    .DI12(DIB3_dly), .DI13(DIB4_dly), .DI14(DIB5_dly), .DI15(DIB6_dly), 
    .DI16(gnd_tbI), .DI17(gnd_tbI), .FULLI(CSA2_dly), .CSW0(vcc_tbI), .CSW1(vcc_tbI), 
    .EMPTYI(CSB2_dly), .CSR0(vcc_tbI), .CSR1(vcc_tbI), .WE(vcc_tbI), .RE(vcc_tbI), 
    .ORE(vcc_tbI), .CLKW(CLKA_dly), .CLKR(CLKB_dly), .RST(RSTA_NOTIN), 
    .RPRST(RSTB_NOTIN), .DO0(DOB0), .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), 
    .DO4(DOB4), .DO5(DOB5), .DO6(DOB6), .DO7(), .DO8(), .DO9(DOA0), 
    .DO10(DOA1), .DO11(DOA2), .DO12(DOA3), .DO13(DOA4), .DO14(DOA5), 
    .DO15(DOA6), .DO16(DOA7), .DO17(DOA8), .EF(EF), .AEF(), .AFF(), .FF(FF));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb RSTA_inverter_tbIN( .I(RSTA_dly), .Z(RSTA_NOTIN));
  inverter_tb RSTB_inverter_tbIN( .I(RSTB_dly), .Z(RSTB_NOTIN));

  specify
    (RSTA => DOA8) = (0:0:0,0:0:0);
    (RSTA => DOA7) = (0:0:0,0:0:0);
    (RSTA => DOA6) = (0:0:0,0:0:0);
    (RSTA => DOA5) = (0:0:0,0:0:0);
    (RSTA => DOA4) = (0:0:0,0:0:0);
    (RSTA => DOA3) = (0:0:0,0:0:0);
    (RSTA => DOA2) = (0:0:0,0:0:0);
    (RSTA => DOA1) = (0:0:0,0:0:0);
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (RSTA => FF) = (0:0:0,0:0:0);
    (RSTA => EF) = (0:0:0,0:0:0);
    (RSTA => DOB0) = (0:0:0,0:0:0);
    (RSTA => DOB1) = (0:0:0,0:0:0);
    (RSTA => DOB2) = (0:0:0,0:0:0);
    (RSTA => DOB3) = (0:0:0,0:0:0);
    (RSTA => DOB4) = (0:0:0,0:0:0);
    (RSTA => DOB5) = (0:0:0,0:0:0);
    (RSTA => DOB6) = (0:0:0,0:0:0);
    (CLKA => FF) = (0:0:0,0:0:0);
    (CLKB => DOA8) = (0:0:0,0:0:0);
    (CLKB => DOA7) = (0:0:0,0:0:0);
    (CLKB => DOA6) = (0:0:0,0:0:0);
    (CLKB => DOA5) = (0:0:0,0:0:0);
    (CLKB => DOA4) = (0:0:0,0:0:0);
    (CLKB => DOA3) = (0:0:0,0:0:0);
    (CLKB => DOA2) = (0:0:0,0:0:0);
    (CLKB => DOA1) = (0:0:0,0:0:0);
    (CLKB => DOA0) = (0:0:0,0:0:0);
    (CLKB => EF) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    (RSTB => DOA8) = (0:0:0,0:0:0);
    (RSTB => DOA7) = (0:0:0,0:0:0);
    (RSTB => DOA6) = (0:0:0,0:0:0);
    (RSTB => DOA5) = (0:0:0,0:0:0);
    (RSTB => DOA4) = (0:0:0,0:0:0);
    (RSTB => DOA3) = (0:0:0,0:0:0);
    (RSTB => DOA2) = (0:0:0,0:0:0);
    (RSTB => DOA1) = (0:0:0,0:0:0);
    (RSTB => DOA0) = (0:0:0,0:0:0);
    (RSTB => EF) = (0:0:0,0:0:0);
    (RSTB => DOB0) = (0:0:0,0:0:0);
    (RSTB => DOB1) = (0:0:0,0:0:0);
    (RSTB => DOB2) = (0:0:0,0:0:0);
    (RSTB => DOB3) = (0:0:0,0:0:0);
    (RSTB => DOB4) = (0:0:0,0:0:0);
    (RSTB => DOB5) = (0:0:0,0:0:0);
    (RSTB => DOB6) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA2, 0:0:0, 0:0:0,,,, CLKA_dly, CSA2_dly);
    $setuphold (posedge CLKB, CSB2, 0:0:0, 0:0:0,,,, CLKB_dly, CSB2_dly);
    $setuphold (posedge CLKA, RSTB, 0:0:0, 0:0:0,,,, CLKA_dly, RSTB_dly);
    $setuphold (posedge CLKB, RSTB, 0:0:0, 0:0:0,,,, CLKB_dly, RSTB_dly);
    $setuphold (posedge CLKA, DIB0, 0:0:0, 0:0:0,,,, CLKA_dly, DIB0_dly);
    $setuphold (posedge CLKA, DIB1, 0:0:0, 0:0:0,,,, CLKA_dly, DIB1_dly);
    $setuphold (posedge CLKA, DIB2, 0:0:0, 0:0:0,,,, CLKA_dly, DIB2_dly);
    $setuphold (posedge CLKA, DIB3, 0:0:0, 0:0:0,,,, CLKA_dly, DIB3_dly);
    $setuphold (posedge CLKA, DIB4, 0:0:0, 0:0:0,,,, CLKA_dly, DIB4_dly);
    $setuphold (posedge CLKA, DIB5, 0:0:0, 0:0:0,,,, CLKA_dly, DIB5_dly);
    $setuphold (posedge CLKA, DIB6, 0:0:0, 0:0:0,,,, CLKA_dly, DIB6_dly);
    $width (posedge RSTA, 0:0:0);
    $width (negedge RSTA, 0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
    $width (posedge RSTB, 0:0:0);
    $width (negedge RSTB, 0:0:0);
  endspecify

endmodule

module FIFO8KB_B_tb ( input DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, DI9, 
    DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, FULLI, CSW0, CSW1, EMPTYI, 
    CSR0, CSR1, WE, RE, ORE, CLKW, CLKR, RST, RPRST, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17, EF, AEF, AFF, FF );

  FIFO8KB INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .CSW0(CSW0), .CSW1(CSW1), .CSR0(CSR0), 
    .CSR1(CSR1), .WE(WE), .RE(RE), .ORE(ORE), .CLKW(CLKW), .CLKR(CLKR), 
    .RST(RST), .RPRST(RPRST), .FULLI(FULLI), .EMPTYI(EMPTYI), .DO0(DO0), 
    .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), .DO5(DO5), .DO6(DO6), 
    .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), .DO11(DO11), .DO12(DO12), 
    .DO13(DO13), .DO14(DO14), .DO15(DO15), .DO16(DO16), .DO17(DO17), .EF(EF), 
    .AEF(AEF), .AFF(AFF), .FF(FF));
  defparam INST10.AEPOINTER = "0b00000000010000";
  defparam INST10.AEPOINTER1 = "0b00000000100000";
  defparam INST10.AFPOINTER = "0b00000100000000";
  defparam INST10.AFPOINTER1 = "0b00000011110000";
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b11";
  defparam INST10.CSDECODE_W = "0b11";
  defparam INST10.DATA_WIDTH_R = 18;
  defparam INST10.DATA_WIDTH_W = 18;
  defparam INST10.FULLPOINTER = "0b00000100000000";
  defparam INST10.FULLPOINTER1 = "0b00000011110000";
  defparam INST10.GSR = "DISABLED";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
endmodule

module u_DPHY_RX_INST_u_iDDRx4_Inst3_CLKDIVC ( input CLKI, RST, output CDIVX );
  wire   gnd_tbI, RST_dly, CLKI_dly;

  ECLKSYNCA_B_tb_tb_tb \u_DPHY_RX_INST/u_iDDRx4/Inst3_CLKDIVC_CLKDIVC ( .CLKI(CLKI_dly), 
    .RST(RST_dly), .ALIGNWD(gnd_tbI), .CDIV1(), .CDIVX(CDIVX));
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (CLKI => CDIVX) = (0:0:0,0:0:0);
    $setuphold (posedge CLKI, RST, 0:0:0, 0:0:0,,,, CLKI_dly, RST_dly);
  endspecify

endmodule

module ECLKSYNCA_B_tb_tb_tb ( input CLKI, RST, ALIGNWD, output CDIV1, CDIVX );

  CLKDIVC INST10( .RST(RST), .CLKI(CLKI), .ALIGNWD(ALIGNWD), .CDIV1(CDIV1), 
    .CDIVX(CDIVX));
  defparam INST10.DIV = "4.0";
  defparam INST10.GSR = "DISABLED";
endmodule

module u_DPHY_RX_INST_u_iDDRx4_Inst2_ECLKSYNCA ( input ECLKI, STOP, output 
    ECLKO );

  ECLKSYNCA_B_tb \u_DPHY_RX_INST/u_iDDRx4/Inst2_ECLKSYNCA_ECLKSYNCA ( 
    .ECLKI(ECLKI), .STOP(STOP), .ECLKO(ECLKO));

  specify
    (ECLKI => ECLKO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ECLKSYNCA_B_tb ( input ECLKI, STOP, output ECLKO );

  ECLKSYNCA INST10( .ECLKI(ECLKI), .STOP(STOP), .ECLKO(ECLKO));
endmodule

module genblk7_u_rgb888_lane2_u_RGB888_lane2_fifo_rgb888_lane2_fifo_0_2 ( 
    input DIA8, DIA7, DIA6, DIA5, DIA4, DIA3, DIA2, DIA1, DIA0, CEA, RSTA, 
    CLKA, CSA2, output FF, EF, input CSB2, CLKB, RSTB, output DOB0, DOB1, DOB2, 
    DOB3, DOB4, DOB5, DOB6, DOB7, DOB8, input DIB0, DIB1, DIB2, DIB3, DIB4, 
    DIB5, DIB6, DIB7, DIB8 );
  wire   vcc_tbI, RSTA_NOTIN, RSTB_NOTIN, DIA8_dly, CLKA_dly, DIA7_dly, DIA6_dly, 
         DIA5_dly, DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, CEA_dly, 
         RSTA_dly, CSA2_dly, CSB2_dly, CLKB_dly, RSTB_dly, DIB0_dly, DIB1_dly, 
         DIB2_dly, DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly, DIB7_dly, DIB8_dly;

  FIFO8KB0076 
    \genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/rgb888_lane2_fifo_0_2_FIFO8KB 
    ( .DI0(DIA0_dly), .DI1(DIA1_dly), .DI2(DIA2_dly), .DI3(DIA3_dly), 
    .DI4(DIA4_dly), .DI5(DIA5_dly), .DI6(DIA6_dly), .DI7(DIA7_dly), 
    .DI8(DIA8_dly), .DI9(DIB0_dly), .DI10(DIB1_dly), .DI11(DIB2_dly), 
    .DI12(DIB3_dly), .DI13(DIB4_dly), .DI14(DIB5_dly), .DI15(DIB6_dly), 
    .DI16(DIB7_dly), .DI17(DIB8_dly), .FULLI(CSA2_dly), .CSW0(vcc_tbI), 
    .CSW1(vcc_tbI), .EMPTYI(CSB2_dly), .CSR0(vcc_tbI), .CSR1(vcc_tbI), .WE(CEA_dly), 
    .RE(vcc_tbI), .ORE(vcc_tbI), .CLKW(CLKA_dly), .CLKR(CLKB_dly), .RST(RSTA_NOTIN), 
    .RPRST(RSTB_NOTIN), .DO0(DOB0), .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), 
    .DO4(DOB4), .DO5(DOB5), .DO6(DOB6), .DO7(DOB7), .DO8(DOB8), .DO9(), 
    .DO10(), .DO11(), .DO12(), .DO13(), .DO14(), .DO15(), .DO16(), .DO17(), 
    .EF(EF), .AEF(), .AFF(), .FF(FF));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb RSTA_inverter_tbIN( .I(RSTA_dly), .Z(RSTA_NOTIN));
  inverter_tb RSTB_inverter_tbIN( .I(RSTB_dly), .Z(RSTB_NOTIN));

  specify
    (RSTA => FF) = (0:0:0,0:0:0);
    (RSTA => EF) = (0:0:0,0:0:0);
    (RSTA => DOB0) = (0:0:0,0:0:0);
    (RSTA => DOB1) = (0:0:0,0:0:0);
    (RSTA => DOB2) = (0:0:0,0:0:0);
    (RSTA => DOB3) = (0:0:0,0:0:0);
    (RSTA => DOB4) = (0:0:0,0:0:0);
    (RSTA => DOB5) = (0:0:0,0:0:0);
    (RSTA => DOB6) = (0:0:0,0:0:0);
    (RSTA => DOB7) = (0:0:0,0:0:0);
    (RSTA => DOB8) = (0:0:0,0:0:0);
    (CLKA => FF) = (0:0:0,0:0:0);
    (CLKB => EF) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    (CLKB => DOB7) = (0:0:0,0:0:0);
    (CLKB => DOB8) = (0:0:0,0:0:0);
    (RSTB => EF) = (0:0:0,0:0:0);
    (RSTB => DOB0) = (0:0:0,0:0:0);
    (RSTB => DOB1) = (0:0:0,0:0:0);
    (RSTB => DOB2) = (0:0:0,0:0:0);
    (RSTB => DOB3) = (0:0:0,0:0:0);
    (RSTB => DOB4) = (0:0:0,0:0:0);
    (RSTB => DOB5) = (0:0:0,0:0:0);
    (RSTB => DOB6) = (0:0:0,0:0:0);
    (RSTB => DOB7) = (0:0:0,0:0:0);
    (RSTB => DOB8) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA2, 0:0:0, 0:0:0,,,, CLKA_dly, CSA2_dly);
    $setuphold (posedge CLKB, CSB2, 0:0:0, 0:0:0,,,, CLKB_dly, CSB2_dly);
    $setuphold (posedge CLKA, RSTB, 0:0:0, 0:0:0,,,, CLKA_dly, RSTB_dly);
    $setuphold (posedge CLKB, RSTB, 0:0:0, 0:0:0,,,, CLKB_dly, RSTB_dly);
    $setuphold (posedge CLKA, DIB0, 0:0:0, 0:0:0,,,, CLKA_dly, DIB0_dly);
    $setuphold (posedge CLKA, DIB1, 0:0:0, 0:0:0,,,, CLKA_dly, DIB1_dly);
    $setuphold (posedge CLKA, DIB2, 0:0:0, 0:0:0,,,, CLKA_dly, DIB2_dly);
    $setuphold (posedge CLKA, DIB3, 0:0:0, 0:0:0,,,, CLKA_dly, DIB3_dly);
    $setuphold (posedge CLKA, DIB4, 0:0:0, 0:0:0,,,, CLKA_dly, DIB4_dly);
    $setuphold (posedge CLKA, DIB5, 0:0:0, 0:0:0,,,, CLKA_dly, DIB5_dly);
    $setuphold (posedge CLKA, DIB6, 0:0:0, 0:0:0,,,, CLKA_dly, DIB6_dly);
    $setuphold (posedge CLKA, DIB7, 0:0:0, 0:0:0,,,, CLKA_dly, DIB7_dly);
    $setuphold (posedge CLKA, DIB8, 0:0:0, 0:0:0,,,, CLKA_dly, DIB8_dly);
    $width (posedge RSTA, 0:0:0);
    $width (negedge RSTA, 0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
    $width (posedge RSTB, 0:0:0);
    $width (negedge RSTB, 0:0:0);
  endspecify

endmodule

module FIFO8KB0076 ( input DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, DI9, 
    DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, FULLI, CSW0, CSW1, EMPTYI, 
    CSR0, CSR1, WE, RE, ORE, CLKW, CLKR, RST, RPRST, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17, EF, AEF, AFF, FF );

  FIFO8KB INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .CSW0(CSW0), .CSW1(CSW1), .CSR0(CSR0), 
    .CSR1(CSR1), .WE(WE), .RE(RE), .ORE(ORE), .CLKW(CLKW), .CLKR(CLKR), 
    .RST(RST), .RPRST(RPRST), .FULLI(FULLI), .EMPTYI(EMPTYI), .DO0(DO0), 
    .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), .DO5(DO5), .DO6(DO6), 
    .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), .DO11(DO11), .DO12(DO12), 
    .DO13(DO13), .DO14(DO14), .DO15(DO15), .DO16(DO16), .DO17(DO17), .EF(EF), 
    .AEF(AEF), .AFF(AFF), .FF(FF));
  defparam INST10.AEPOINTER = "0b00000000001000";
  defparam INST10.AEPOINTER1 = "0b00000000010000";
  defparam INST10.AFPOINTER = "0b00000001000000";
  defparam INST10.AFPOINTER1 = "0b00000000110000";
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b11";
  defparam INST10.CSDECODE_W = "0b11";
  defparam INST10.DATA_WIDTH_R = 9;
  defparam INST10.DATA_WIDTH_W = 18;
  defparam INST10.FULLPOINTER = "0b00000001000000";
  defparam INST10.FULLPOINTER1 = "0b00000000110000";
  defparam INST10.GSR = "DISABLED";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
endmodule

module genblk7_u_rgb888_lane2_u_RGB888_lane2_fifo_rgb888_lane2_fifo_2_0 ( 
    input DIA5, DIA4, DIA3, DIA2, DIA1, DIA0, CEA, RSTA, CLKA, CSA2, CSB2, 
    CLKB, RSTB, output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, input DIB0, DIB1, 
    DIB2, DIB3, DIB4, DIB5 );
  wire   gnd_tbI, vcc_tbI, RSTA_NOTIN, RSTB_NOTIN, DIA5_dly, CLKA_dly, DIA4_dly, 
         DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, CEA_dly, RSTA_dly, CSA2_dly, 
         CSB2_dly, CLKB_dly, RSTB_dly, DIB0_dly, DIB1_dly, DIB2_dly, DIB3_dly, 
         DIB4_dly, DIB5_dly;

  FIFO8KB0077 
    \genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/rgb888_lane2_fifo_2_0_FIFO8KB 
    ( .DI0(DIA0_dly), .DI1(DIA1_dly), .DI2(DIA2_dly), .DI3(DIA3_dly), 
    .DI4(DIA4_dly), .DI5(DIA5_dly), .DI6(gnd_tbI), .DI7(gnd_tbI), .DI8(gnd_tbI), 
    .DI9(DIB0_dly), .DI10(DIB1_dly), .DI11(DIB2_dly), .DI12(DIB3_dly), 
    .DI13(DIB4_dly), .DI14(DIB5_dly), .DI15(gnd_tbI), .DI16(gnd_tbI), .DI17(gnd_tbI), 
    .FULLI(CSA2_dly), .CSW0(vcc_tbI), .CSW1(vcc_tbI), .EMPTYI(CSB2_dly), .CSR0(vcc_tbI), 
    .CSR1(vcc_tbI), .WE(CEA_dly), .RE(vcc_tbI), .ORE(vcc_tbI), .CLKW(CLKA_dly), 
    .CLKR(CLKB_dly), .RST(RSTA_NOTIN), .RPRST(RSTB_NOTIN), .DO0(DOB0), 
    .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), .DO4(DOB4), .DO5(DOB5), .DO6(), .DO7(), 
    .DO8(), .DO9(), .DO10(), .DO11(), .DO12(), .DO13(), .DO14(), .DO15(), 
    .DO16(), .DO17(), .EF(), .AEF(), .AFF(), .FF());
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb RSTA_inverter_tbIN( .I(RSTA_dly), .Z(RSTA_NOTIN));
  inverter_tb RSTB_inverter_tbIN( .I(RSTB_dly), .Z(RSTB_NOTIN));

  specify
    (RSTA => DOB0) = (0:0:0,0:0:0);
    (RSTA => DOB1) = (0:0:0,0:0:0);
    (RSTA => DOB2) = (0:0:0,0:0:0);
    (RSTA => DOB3) = (0:0:0,0:0:0);
    (RSTA => DOB4) = (0:0:0,0:0:0);
    (RSTA => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (RSTB => DOB0) = (0:0:0,0:0:0);
    (RSTB => DOB1) = (0:0:0,0:0:0);
    (RSTB => DOB2) = (0:0:0,0:0:0);
    (RSTB => DOB3) = (0:0:0,0:0:0);
    (RSTB => DOB4) = (0:0:0,0:0:0);
    (RSTB => DOB5) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA2, 0:0:0, 0:0:0,,,, CLKA_dly, CSA2_dly);
    $setuphold (posedge CLKB, CSB2, 0:0:0, 0:0:0,,,, CLKB_dly, CSB2_dly);
    $setuphold (posedge CLKA, RSTB, 0:0:0, 0:0:0,,,, CLKA_dly, RSTB_dly);
    $setuphold (posedge CLKB, RSTB, 0:0:0, 0:0:0,,,, CLKB_dly, RSTB_dly);
    $setuphold (posedge CLKA, DIB0, 0:0:0, 0:0:0,,,, CLKA_dly, DIB0_dly);
    $setuphold (posedge CLKA, DIB1, 0:0:0, 0:0:0,,,, CLKA_dly, DIB1_dly);
    $setuphold (posedge CLKA, DIB2, 0:0:0, 0:0:0,,,, CLKA_dly, DIB2_dly);
    $setuphold (posedge CLKA, DIB3, 0:0:0, 0:0:0,,,, CLKA_dly, DIB3_dly);
    $setuphold (posedge CLKA, DIB4, 0:0:0, 0:0:0,,,, CLKA_dly, DIB4_dly);
    $setuphold (posedge CLKA, DIB5, 0:0:0, 0:0:0,,,, CLKA_dly, DIB5_dly);
    $width (posedge RSTA, 0:0:0);
    $width (negedge RSTA, 0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
    $width (posedge RSTB, 0:0:0);
    $width (negedge RSTB, 0:0:0);
  endspecify

endmodule

module FIFO8KB0077 ( input DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, DI9, 
    DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, FULLI, CSW0, CSW1, EMPTYI, 
    CSR0, CSR1, WE, RE, ORE, CLKW, CLKR, RST, RPRST, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17, EF, AEF, AFF, FF );

  FIFO8KB INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .CSW0(CSW0), .CSW1(CSW1), .CSR0(CSR0), 
    .CSR1(CSR1), .WE(WE), .RE(RE), .ORE(ORE), .CLKW(CLKW), .CLKR(CLKR), 
    .RST(RST), .RPRST(RPRST), .FULLI(FULLI), .EMPTYI(EMPTYI), .DO0(DO0), 
    .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), .DO5(DO5), .DO6(DO6), 
    .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), .DO11(DO11), .DO12(DO12), 
    .DO13(DO13), .DO14(DO14), .DO15(DO15), .DO16(DO16), .DO17(DO17), .EF(EF), 
    .AEF(AEF), .AFF(AFF), .FF(FF));
  defparam INST10.AEPOINTER = "0b11111111111000";
  defparam INST10.AEPOINTER1 = "0b00000000000000";
  defparam INST10.AFPOINTER = "0b11111111111000";
  defparam INST10.AFPOINTER1 = "0b00000000000000";
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b11";
  defparam INST10.CSDECODE_W = "0b11";
  defparam INST10.DATA_WIDTH_R = 9;
  defparam INST10.DATA_WIDTH_W = 18;
  defparam INST10.FULLPOINTER = "0b11111111111000";
  defparam INST10.FULLPOINTER1 = "0b00000000000000";
  defparam INST10.GSR = "DISABLED";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
endmodule

module genblk7_u_rgb888_lane2_u_RGB888_lane2_fifo_rgb888_lane2_fifo_1_1 ( 
    input DIA8, DIA7, DIA6, DIA5, DIA4, DIA3, DIA2, DIA1, DIA0, CEA, RSTA, 
    CLKA, CSA2, CSB2, CLKB, RSTB, output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, 
    DOB6, DOB7, DOB8, input DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, DIB7, 
    DIB8 );
  wire   vcc_tbI, RSTA_NOTIN, RSTB_NOTIN, DIA8_dly, CLKA_dly, DIA7_dly, DIA6_dly, 
         DIA5_dly, DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, CEA_dly, 
         RSTA_dly, CSA2_dly, CSB2_dly, CLKB_dly, RSTB_dly, DIB0_dly, DIB1_dly, 
         DIB2_dly, DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly, DIB7_dly, DIB8_dly;

  FIFO8KB0078 
    \genblk7.u_rgb888_lane2/u_RGB888_lane2_fifo/rgb888_lane2_fifo_1_1_FIFO8KB 
    ( .DI0(DIA0_dly), .DI1(DIA1_dly), .DI2(DIA2_dly), .DI3(DIA3_dly), 
    .DI4(DIA4_dly), .DI5(DIA5_dly), .DI6(DIA6_dly), .DI7(DIA7_dly), 
    .DI8(DIA8_dly), .DI9(DIB0_dly), .DI10(DIB1_dly), .DI11(DIB2_dly), 
    .DI12(DIB3_dly), .DI13(DIB4_dly), .DI14(DIB5_dly), .DI15(DIB6_dly), 
    .DI16(DIB7_dly), .DI17(DIB8_dly), .FULLI(CSA2_dly), .CSW0(vcc_tbI), 
    .CSW1(vcc_tbI), .EMPTYI(CSB2_dly), .CSR0(vcc_tbI), .CSR1(vcc_tbI), .WE(CEA_dly), 
    .RE(vcc_tbI), .ORE(vcc_tbI), .CLKW(CLKA_dly), .CLKR(CLKB_dly), .RST(RSTA_NOTIN), 
    .RPRST(RSTB_NOTIN), .DO0(DOB0), .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), 
    .DO4(DOB4), .DO5(DOB5), .DO6(DOB6), .DO7(DOB7), .DO8(DOB8), .DO9(), 
    .DO10(), .DO11(), .DO12(), .DO13(), .DO14(), .DO15(), .DO16(), .DO17(), 
    .EF(), .AEF(), .AFF(), .FF());
  vcc_tb DRIVEvcc_tb( .PWR1(vcc_tbI));
  inverter_tb RSTA_inverter_tbIN( .I(RSTA_dly), .Z(RSTA_NOTIN));
  inverter_tb RSTB_inverter_tbIN( .I(RSTB_dly), .Z(RSTB_NOTIN));

  specify
    (RSTA => DOB0) = (0:0:0,0:0:0);
    (RSTA => DOB1) = (0:0:0,0:0:0);
    (RSTA => DOB2) = (0:0:0,0:0:0);
    (RSTA => DOB3) = (0:0:0,0:0:0);
    (RSTA => DOB4) = (0:0:0,0:0:0);
    (RSTA => DOB5) = (0:0:0,0:0:0);
    (RSTA => DOB6) = (0:0:0,0:0:0);
    (RSTA => DOB7) = (0:0:0,0:0:0);
    (RSTA => DOB8) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    (CLKB => DOB7) = (0:0:0,0:0:0);
    (CLKB => DOB8) = (0:0:0,0:0:0);
    (RSTB => DOB0) = (0:0:0,0:0:0);
    (RSTB => DOB1) = (0:0:0,0:0:0);
    (RSTB => DOB2) = (0:0:0,0:0:0);
    (RSTB => DOB3) = (0:0:0,0:0:0);
    (RSTB => DOB4) = (0:0:0,0:0:0);
    (RSTB => DOB5) = (0:0:0,0:0:0);
    (RSTB => DOB6) = (0:0:0,0:0:0);
    (RSTB => DOB7) = (0:0:0,0:0:0);
    (RSTB => DOB8) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA2, 0:0:0, 0:0:0,,,, CLKA_dly, CSA2_dly);
    $setuphold (posedge CLKB, CSB2, 0:0:0, 0:0:0,,,, CLKB_dly, CSB2_dly);
    $setuphold (posedge CLKA, RSTB, 0:0:0, 0:0:0,,,, CLKA_dly, RSTB_dly);
    $setuphold (posedge CLKB, RSTB, 0:0:0, 0:0:0,,,, CLKB_dly, RSTB_dly);
    $setuphold (posedge CLKA, DIB0, 0:0:0, 0:0:0,,,, CLKA_dly, DIB0_dly);
    $setuphold (posedge CLKA, DIB1, 0:0:0, 0:0:0,,,, CLKA_dly, DIB1_dly);
    $setuphold (posedge CLKA, DIB2, 0:0:0, 0:0:0,,,, CLKA_dly, DIB2_dly);
    $setuphold (posedge CLKA, DIB3, 0:0:0, 0:0:0,,,, CLKA_dly, DIB3_dly);
    $setuphold (posedge CLKA, DIB4, 0:0:0, 0:0:0,,,, CLKA_dly, DIB4_dly);
    $setuphold (posedge CLKA, DIB5, 0:0:0, 0:0:0,,,, CLKA_dly, DIB5_dly);
    $setuphold (posedge CLKA, DIB6, 0:0:0, 0:0:0,,,, CLKA_dly, DIB6_dly);
    $setuphold (posedge CLKA, DIB7, 0:0:0, 0:0:0,,,, CLKA_dly, DIB7_dly);
    $setuphold (posedge CLKA, DIB8, 0:0:0, 0:0:0,,,, CLKA_dly, DIB8_dly);
    $width (posedge RSTA, 0:0:0);
    $width (negedge RSTA, 0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
    $width (posedge RSTB, 0:0:0);
    $width (negedge RSTB, 0:0:0);
  endspecify

endmodule

module FIFO8KB0078 ( input DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, DI9, 
    DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, FULLI, CSW0, CSW1, EMPTYI, 
    CSR0, CSR1, WE, RE, ORE, CLKW, CLKR, RST, RPRST, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17, EF, AEF, AFF, FF );

  FIFO8KB INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .CSW0(CSW0), .CSW1(CSW1), .CSR0(CSR0), 
    .CSR1(CSR1), .WE(WE), .RE(RE), .ORE(ORE), .CLKW(CLKW), .CLKR(CLKR), 
    .RST(RST), .RPRST(RPRST), .FULLI(FULLI), .EMPTYI(EMPTYI), .DO0(DO0), 
    .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), .DO5(DO5), .DO6(DO6), 
    .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), .DO11(DO11), .DO12(DO12), 
    .DO13(DO13), .DO14(DO14), .DO15(DO15), .DO16(DO16), .DO17(DO17), .EF(EF), 
    .AEF(AEF), .AFF(AFF), .FF(FF));
  defparam INST10.AEPOINTER = "0b11111111111000";
  defparam INST10.AEPOINTER1 = "0b00000000000000";
  defparam INST10.AFPOINTER = "0b11111111111000";
  defparam INST10.AFPOINTER1 = "0b00000000000000";
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b11";
  defparam INST10.CSDECODE_W = "0b11";
  defparam INST10.DATA_WIDTH_R = 9;
  defparam INST10.DATA_WIDTH_W = 18;
  defparam INST10.FULLPOINTER = "0b11111111111000";
  defparam INST10.FULLPOINTER1 = "0b00000000000000";
  defparam INST10.GSR = "DISABLED";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
endmodule

module genblk2_pll_PLLInst_0 ( input CLKI, CLKFB, RST, output CLKOS2, CLKOS, 
    CLKOP );
  wire   gnd_tbI;

  EHXPLLJ_B_tb \genblk2.pll/PLLInst_0_EHXPLLJ ( .CLKI(CLKI), .CLKFB(CLKFB), 
    .PHASESEL1(gnd_tbI), .PHASESEL0(gnd_tbI), .PHASEDIR(gnd_tbI), .PHASESTEP(gnd_tbI), 
    .LOADREG(gnd_tbI), .STDBY(gnd_tbI), .PLLWAKESYNC(gnd_tbI), .RST(RST), .RESETM(gnd_tbI), 
    .RESETC(gnd_tbI), .RESETD(gnd_tbI), .ENCLKOP(gnd_tbI), .ENCLKOS(gnd_tbI), 
    .ENCLKOS2(gnd_tbI), .ENCLKOS3(gnd_tbI), .PLLCLK(gnd_tbI), .PLLRST(gnd_tbI), 
    .PLLSTB(gnd_tbI), .PLLWE(gnd_tbI), .PLLDATI7(gnd_tbI), .PLLDATI6(gnd_tbI), 
    .PLLDATI5(gnd_tbI), .PLLDATI4(gnd_tbI), .PLLDATI3(gnd_tbI), .PLLDATI2(gnd_tbI), 
    .PLLDATI1(gnd_tbI), .PLLDATI0(gnd_tbI), .PLLADDR4(gnd_tbI), .PLLADDR3(gnd_tbI), 
    .PLLADDR2(gnd_tbI), .PLLADDR1(gnd_tbI), .PLLADDR0(gnd_tbI), .CLKOP(CLKOP), 
    .CLKOS(CLKOS), .CLKOS2(CLKOS2), .CLKOS3(), .LOCK(), .INTLOCK(), .REFCLK(), 
    .CLKINTFB(), .DPHSRC(), .PLLDATO7(), .PLLDATO6(), .PLLDATO5(), .PLLDATO4(), 
    .PLLDATO3(), .PLLDATO2(), .PLLDATO1(), .PLLDATO0(), .PLLACK());
  gnd_tb DRIVEgnd_tb( .PWR0(gnd_tbI));

  specify
    (CLKI => CLKOS2) = (0:0:0,0:0:0);
    (CLKI => CLKOS) = (0:0:0,0:0:0);
    (CLKI => CLKOP) = (0:0:0,0:0:0);
    (CLKFB => CLKOS2) = (0:0:0,0:0:0);
    (CLKFB => CLKOS) = (0:0:0,0:0:0);
    (CLKFB => CLKOP) = (0:0:0,0:0:0);
  endspecify

endmodule

module EHXPLLJ_B_tb ( input CLKI, CLKFB, PHASESEL1, PHASESEL0, PHASEDIR, 
    PHASESTEP, LOADREG, STDBY, PLLWAKESYNC, RST, RESETM, RESETC, RESETD, 
    ENCLKOP, ENCLKOS, ENCLKOS2, ENCLKOS3, PLLCLK, PLLRST, PLLSTB, PLLWE, 
    PLLDATI7, PLLDATI6, PLLDATI5, PLLDATI4, PLLDATI3, PLLDATI2, PLLDATI1, 
    PLLDATI0, PLLADDR4, PLLADDR3, PLLADDR2, PLLADDR1, PLLADDR0, output CLKOP, 
    CLKOS, CLKOS2, CLKOS3, LOCK, INTLOCK, REFCLK, CLKINTFB, DPHSRC, PLLDATO7, 
    PLLDATO6, PLLDATO5, PLLDATO4, PLLDATO3, PLLDATO2, PLLDATO1, PLLDATO0, 
    PLLACK );

  EHXPLLJ INST10( .CLKI(CLKI), .CLKFB(CLKFB), .PHASESEL1(PHASESEL1), 
    .PHASESEL0(PHASESEL0), .PHASEDIR(PHASEDIR), .PHASESTEP(PHASESTEP), 
    .LOADREG(LOADREG), .STDBY(STDBY), .PLLWAKESYNC(PLLWAKESYNC), .RST(RST), 
    .RESETM(RESETM), .RESETC(RESETC), .RESETD(RESETD), .ENCLKOP(ENCLKOP), 
    .ENCLKOS(ENCLKOS), .ENCLKOS2(ENCLKOS2), .ENCLKOS3(ENCLKOS3), 
    .PLLCLK(PLLCLK), .PLLRST(PLLRST), .PLLSTB(PLLSTB), .PLLWE(PLLWE), 
    .PLLADDR4(PLLADDR4), .PLLADDR3(PLLADDR3), .PLLADDR2(PLLADDR2), 
    .PLLADDR1(PLLADDR1), .PLLADDR0(PLLADDR0), .PLLDATI7(PLLDATI7), 
    .PLLDATI6(PLLDATI6), .PLLDATI5(PLLDATI5), .PLLDATI4(PLLDATI4), 
    .PLLDATI3(PLLDATI3), .PLLDATI2(PLLDATI2), .PLLDATI1(PLLDATI1), 
    .PLLDATI0(PLLDATI0), .CLKOP(CLKOP), .CLKOS(CLKOS), .CLKOS2(CLKOS2), 
    .CLKOS3(CLKOS3), .LOCK(LOCK), .REFCLK(REFCLK), .INTLOCK(INTLOCK), 
    .PLLDATO7(PLLDATO7), .PLLDATO6(PLLDATO6), .PLLDATO5(PLLDATO5), 
    .PLLDATO4(PLLDATO4), .PLLDATO3(PLLDATO3), .PLLDATO2(PLLDATO2), 
    .PLLDATO1(PLLDATO1), .PLLDATO0(PLLDATO0), .PLLACK(PLLACK), .DPHSRC(DPHSRC), 
    .CLKINTFB(CLKINTFB));
  defparam INST10.CLKFB_DIV = 2;
  defparam INST10.CLKI_DIV = 3;
  defparam INST10.CLKOP_CPHASE = 17;
  defparam INST10.CLKOP_DIV = 18;
  defparam INST10.CLKOP_ENABLE = "ENABLED";
  defparam INST10.CLKOP_FPHASE = 0;
  defparam INST10.CLKOP_TRIM_DELAY = 0;
  defparam INST10.CLKOP_TRIM_POL = "RISING";
  defparam INST10.CLKOS2_CPHASE = 11;
  defparam INST10.CLKOS2_DIV = 12;
  defparam INST10.CLKOS2_ENABLE = "ENABLED";
  defparam INST10.CLKOS2_FPHASE = 0;
  defparam INST10.CLKOS3_CPHASE = 0;
  defparam INST10.CLKOS3_DIV = 1;
  defparam INST10.CLKOS3_ENABLE = "DISABLED";
  defparam INST10.CLKOS3_FPHASE = 0;
  defparam INST10.CLKOS_CPHASE = 26;
  defparam INST10.CLKOS_DIV = 18;
  defparam INST10.CLKOS_ENABLE = "ENABLED";
  defparam INST10.CLKOS_FPHASE = 0;
  defparam INST10.CLKOS_TRIM_DELAY = 0;
  defparam INST10.CLKOS_TRIM_POL = "RISING";
  defparam INST10.DCRST_ENA = "DISABLED";
  defparam INST10.DDRST_ENA = "DISABLED";
  defparam INST10.DPHASE_SOURCE = "DISABLED";
  defparam INST10.FEEDBK_PATH = "CLKOP";
  defparam INST10.FRACN_DIV = 0;
  defparam INST10.FRACN_ENABLE = "DISABLED";
  defparam INST10.INTFB_WAKE = "DISABLED";
  defparam INST10.MRST_ENA = "DISABLED";
  defparam INST10.OUTDIVIDER_MUXA2 = "DIVA";
  defparam INST10.OUTDIVIDER_MUXB2 = "DIVB";
  defparam INST10.OUTDIVIDER_MUXC2 = "DIVC";
  defparam INST10.OUTDIVIDER_MUXD2 = "DIVD";
  defparam INST10.PLLRST_ENA = "ENABLED";
  defparam INST10.PLL_LOCK_MODE = 0;
  defparam INST10.PLL_USE_WB = "DISABLED";
  defparam INST10.PREDIVIDER_MUXA1 = 0;
  defparam INST10.PREDIVIDER_MUXB1 = 0;
  defparam INST10.PREDIVIDER_MUXC1 = 0;
  defparam INST10.PREDIVIDER_MUXD1 = 0;
  defparam INST10.STDBY_ENABLE = "DISABLED";
  defparam INST10.VCO_BYPASS_A0 = "DISABLED";
  defparam INST10.VCO_BYPASS_B0 = "DISABLED";
  defparam INST10.VCO_BYPASS_C0 = "DISABLED";
  defparam INST10.VCO_BYPASS_D0 = "DISABLED";
endmodule
